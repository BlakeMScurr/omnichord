!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(n(1)),i=n(2);function s(e){let t=[];return e.forEach(e=>{a(e)&&t.push(e)}),t}function a(e){return!e.abstract.sharp}let u=new i.ChordBook,h=new i.ChordSet;const c=new class{constructor(e,t,n){this.context=e.getContext("2d"),this.keys=t,this.pressed=new Map,this.width=.9*window.innerWidth,this.keyWidth=this.width/s(this.keys).length,this.height=300,e.width=this.width,e.height=this.height,this.chords=n}currentNotes(){var e=[];return this.pressed.forEach((t,n)=>{t&&e.push(n)}),e.sort((e,t)=>e.lowerThan(t)?-1:1),e}render(){this.context.clearRect(0,0,this.width,this.height);var e=0;this.keys.forEach(t=>{this.context.fillStyle="#FFFFFF",this.pressed.get(t)&&(this.context.fillStyle="#00FF00"),a(t)&&(this.context.fillRect(e*this.keyWidth,0,this.keyWidth-1,this.height),e+=1)});e=0;this.keys.forEach(t=>{this.context.fillStyle="#000000",this.pressed.get(t)&&(this.context.fillStyle="#00FF00"),a(t)?e+=1:this.context.fillRect((e-.25)*this.keyWidth,0,this.keyWidth/2,this.height/2)})}CheckSuccess(){var e;(null===(e=this.chords.getCurrent())||void 0===e?void 0:e.equals(this.currentNotes()))&&this.chords.completeNext()}pressKey(e){this.pressed.set(e,!0),this.render(),this.CheckSuccess()}releaseKey(e){this.pressed.delete(e),this.render(),this.CheckSuccess()}keyUp(e){this.releaseKey(this.keyboardInputNote(e.keyCode))}keyDown(e){this.pressKey(this.keyboardInputNote(e.keyCode))}keyboardInputNote(e){let t=String.fromCharCode(e).toLocaleLowerCase();if(-1!=(n=["a","s","d","f","g","h","j","k","l",";"].indexOf(t)))return s(this.keys)[n];var n;if(-1!=(n=["q","w","e","r","t","y","u","i","o","p","["].indexOf(t)))return function(e){let t=[];var n=!0;return e.forEach(e=>{a(e)?n?(t.push(new i.Note(i.NewAbstractNote("X"),-1776)),n=!1):n=!0:(t.push(e),n=!1)}),t}(this.keys)[n];throw t+" is not on our keyboard"}}(document.querySelector("#piano"),function(e,t){if(!a(e))throw"the notes on a keyboard must start from a white note, otherwise there'll be a weird half note space at the end of the keyboard";for(var n=[];t>0;){for(var r=12;r>0;)n.push(e),r--,e=e.next();t--}return n.push(e),n}(new i.Note(i.NewAbstractNote("c"),4),1),h);document.addEventListener("keydown",e=>{c.keyDown(e)}),document.addEventListener("keyup",e=>{c.keyUp(e)}),o.default.enable((function(e){e&&console.log("WebMidi could not be enabled.",e);try{o.default.inputs[0].addListener("noteon","all",e=>{c.pressKey(new i.Note(i.NewAbstractNote(e.note.name),e.note.octave))}),o.default.inputs[0].addListener("noteoff","all",e=>{c.releaseKey(new i.Note(i.NewAbstractNote(e.note.name),e.note.octave))})}catch(e){}})),document.querySelector("#changeChords").onclick=function(){var e=document.querySelector("#newChords");document.querySelector("#chords").innerHTML=e.value,e.value="",h.infer(u)},h.infer(u),c.render(),h.render()},function(e,t,n){var r;!function(n){"use strict";function o(){if(o.prototype._singleton)throw new Error("WebMidi is a singleton, it cannot be instantiated directly.");(o.prototype._singleton=this)._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=["connected","disconnected"],this._nrpnBuffer=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this._nrpnEventsEnabled=!0,this._nrpnTypes=["entry","increment","decrement"],this._notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_NRPN_MESSAGES:{value:{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return"requestMIDIAccess"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this.interface}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this.interface||!this.interface.sysexEnabled)}.bind(this)},nrpnEventsEnabled:{enumerable:!0,get:function(){return!!this._nrpnEventsEnabled}.bind(this),set:function(e){return this._nrpnEventsEnabled=e,this._nrpnEventsEnabled}},nrpnTypes:{enumerable:!0,get:function(){return this._nrpnTypes}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}var i=new o;function s(e){var t=this;this._userHandlers={channel:{},system:{}},this._midiInput=e,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return t._midiInput.connection}},id:{enumerable:!0,get:function(){return t._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return t._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return t._midiInput.name}},state:{enumerable:!0,get:function(){return t._midiInput.state}},type:{enumerable:!0,get:function(){return t._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function a(e){var t=this;this._midiOutput=e,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return t._midiOutput.connection}},id:{enumerable:!0,get:function(){return t._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return t._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return t._midiOutput.name}},state:{enumerable:!0,get:function(){return t._midiOutput.state}},type:{enumerable:!0,get:function(){return t._midiOutput.type}}})}o.prototype.enable=function(e,t){this.enabled||(this.supported?navigator.requestMIDIAccess({sysex:t}).then(function(t){var n,r=[],o=[];this.interface=t,this._resetInterfaceUserHandlers(),this.interface.onstatechange=function(e){r.push(e)};for(var i=t.inputs.values(),s=i.next();s&&!s.done;s=i.next())o.push(s.value.open());for(var a=t.outputs.values(),u=a.next();u&&!u.done;u=a.next())o.push(u.value.open());function h(){clearTimeout(n),this._updateInputsAndOutputs(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this),"function"==typeof e&&e.call(this),r.forEach(function(e){this._onInterfaceStateChange(e)}.bind(this))}n=setTimeout(h.bind(this),200),Promise&&Promise.all(o).catch((function(e){})).then(h.bind(this))}.bind(this),function(t){"function"==typeof e&&e.call(this,t)}.bind(this)):"function"==typeof e&&e(new Error("The Web MIDI API is not supported by your browser.")))},o.prototype.disable=function(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your browser.");this.interface&&(this.interface.onstatechange=void 0),this.interface=void 0,this._inputs=[],this._outputs=[],this._nrpnEventsEnabled=!0,this._resetInterfaceUserHandlers()},o.prototype.addListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before adding event listeners.");if("function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(e)))throw new TypeError("The specified event type is not supported.");return this._userHandlers[e].push(t),this},o.prototype.hasListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before checking event listeners.");if("function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(e)))throw new TypeError("The specified event type is not supported.");for(var n=0;n<this._userHandlers[e].length;n++)if(this._userHandlers[e][n]===t)return!0;return!1},o.prototype.removeListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before removing event listeners.");if(void 0!==t&&"function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(0<=this._midiInterfaceEvents.indexOf(e))if(t)for(var n=0;n<this._userHandlers[e].length;n++)this._userHandlers[e][n]===t&&this._userHandlers[e].splice(n,1);else this._userHandlers[e]=[];else{if(void 0!==e)throw new TypeError("The specified event type is not supported.");this._resetInterfaceUserHandlers()}return this},o.prototype.toMIDIChannels=function(e){var t;if("all"===e||void 0===e)t=["all"];else{if("none"===e)return[];t=Array.isArray(e)?e:[e]}return-1<t.indexOf("all")&&(t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),t.map((function(e){return parseInt(e)})).filter((function(e){return 1<=e&&e<=16}))},o.prototype.getInputById=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");e=String(e);for(var t=0;t<this.inputs.length;t++)if(this.inputs[t].id===e)return this.inputs[t];return!1},o.prototype.getOutputById=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");e=String(e);for(var t=0;t<this.outputs.length;t++)if(this.outputs[t].id===e)return this.outputs[t];return!1},o.prototype.getInputByName=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(e))return this.inputs[t];return!1},o.prototype.getOctave=function(e){if(null!=e&&0<=e&&e<=127)return Math.floor(Math.floor(e)/12-1)+Math.floor(i.octaveOffset)},o.prototype.getOutputByName=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(e))return this.outputs[t];return!1},o.prototype.guessNoteNumber=function(e){var t=!1;if(e&&e.toFixed&&0<=e&&e<=127?t=Math.round(e):0<=parseInt(e)&&parseInt(e)<=127?t=parseInt(e):("string"==typeof e||e instanceof String)&&(t=this.noteNameToNumber(e)),!1===t)throw new Error("Invalid input value ("+e+").");return t},o.prototype.noteNameToNumber=function(e){"string"!=typeof e&&(e="");var t=e.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!t)throw new RangeError("Invalid note name.");var n=i._semitones[t[1].toUpperCase()],r=12*(parseInt(t[3])+1-Math.floor(i.octaveOffset))+n;if(-1<t[2].toLowerCase().indexOf("b")?r-=t[2].length:-1<t[2].toLowerCase().indexOf("#")&&(r+=t[2].length),r<0||127<r)throw new RangeError("Invalid note name or note outside valid range.");return r},o.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},o.prototype._updateInputs=function(){for(var e=0;e<this._inputs.length;e++){for(var t=!0,n=this.interface.inputs.values(),r=n.next();r&&!r.done;r=n.next())if(this._inputs[e]._midiInput===r.value){t=!1;break}t&&this._inputs.splice(e,1)}this.interface&&this.interface.inputs.forEach(function(e){for(var t=!0,n=0;n<this._inputs.length;n++)this._inputs[n]._midiInput===e&&(t=!1);t&&this._inputs.push(new s(e))}.bind(this))},o.prototype._updateOutputs=function(){for(var e=0;e<this._outputs.length;e++){for(var t=!0,n=this.interface.outputs.values(),r=n.next();r&&!r.done;r=n.next())if(this._outputs[e]._midiOutput===r.value){t=!1;break}t&&this._outputs.splice(e,1)}this.interface&&this.interface.outputs.forEach(function(e){for(var t=!0,n=0;n<this._outputs.length;n++)this._outputs[n]._midiOutput===e&&(t=!1);t&&this._outputs.push(new a(e))}.bind(this))},o.prototype._onInterfaceStateChange=function(e){this._updateInputsAndOutputs();var t={timestamp:e.timeStamp,type:e.port.state};this.interface&&"connected"===e.port.state?"output"===e.port.type?t.port=this.getOutputById(e.port.id):"input"===e.port.type&&(t.port=this.getInputById(e.port.id)):t.port={connection:"closed",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this._userHandlers[e.port.state].forEach((function(e){e(t)}))},o.prototype._resetInterfaceUserHandlers=function(){for(var e=0;e<this._midiInterfaceEvents.length;e++)this._userHandlers[this._midiInterfaceEvents[e]]=[]},s.prototype.on=s.prototype.addListener=function(e,t,n){var r=this;if(void 0===t&&(t="all"),Array.isArray(t)||(t=[t]),t.forEach((function(e){if("all"!==e&&!(1<=e&&e<=16))throw new RangeError("The 'channel' parameter is invalid.")})),"function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0!==i.MIDI_SYSTEM_MESSAGES[e])this._userHandlers.system[e]||(this._userHandlers.system[e]=[]),this._userHandlers.system[e].push(n);else{if(void 0===i.MIDI_CHANNEL_MESSAGES[e])throw new TypeError("The specified event type is not supported.");if(-1<t.indexOf("all")){t=[];for(var o=1;o<=16;o++)t.push(o)}this._userHandlers.channel[e]||(this._userHandlers.channel[e]=[]),t.forEach((function(t){r._userHandlers.channel[e][t]||(r._userHandlers.channel[e][t]=[]),r._userHandlers.channel[e][t].push(n)}))}return this},s.prototype.hasListener=function(e,t,n){var r=this;if("function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===t&&(t="all"),t.constructor!==Array&&(t=[t]),void 0!==i.MIDI_SYSTEM_MESSAGES[e]){for(var o=0;o<this._userHandlers.system[e].length;o++)if(this._userHandlers.system[e][o]===n)return!0}else if(void 0!==i.MIDI_CHANNEL_MESSAGES[e]){if(-1<t.indexOf("all")){t=[];for(var s=1;s<=16;s++)t.push(s)}return!!this._userHandlers.channel[e]&&t.every((function(t){var o=r._userHandlers.channel[e][t];return o&&-1<o.indexOf(n)}))}return!1},s.prototype.removeListener=function(e,t,n){var r=this;if(void 0!==n&&"function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===t&&(t="all"),t.constructor!==Array&&(t=[t]),void 0!==i.MIDI_SYSTEM_MESSAGES[e])if(void 0===n)this._userHandlers.system[e]=[];else for(var o=0;o<this._userHandlers.system[e].length;o++)this._userHandlers.system[e][o]===n&&this._userHandlers.system[e].splice(o,1);else if(void 0!==i.MIDI_CHANNEL_MESSAGES[e]){if(-1<t.indexOf("all")){t=[];for(var s=1;s<=16;s++)t.push(s)}if(!this._userHandlers.channel[e])return this;t.forEach((function(t){var o=r._userHandlers.channel[e][t];if(o)if(void 0===n)r._userHandlers.channel[e][t]=[];else for(var i=0;i<o.length;i++)o[i]===n&&o.splice(i,1)}))}else{if(void 0!==e)throw new TypeError("The specified event type is not supported.");this._initializeUserHandlers()}return this},s.prototype._initializeUserHandlers=function(){for(var e in i.MIDI_CHANNEL_MESSAGES)i.MIDI_CHANNEL_MESSAGES.hasOwnProperty(e)&&(this._userHandlers.channel[e]={});for(var t in i.MIDI_SYSTEM_MESSAGES)i.MIDI_SYSTEM_MESSAGES.hasOwnProperty(t)&&(this._userHandlers.system[t]=[])},s.prototype._onMidiMessage=function(e){if(0<this._userHandlers.system.midimessage.length){var t={target:this,data:e.data,timestamp:e.timeStamp,type:"midimessage"};this._userHandlers.system.midimessage.forEach((function(e){e(t)}))}e.data[0]<240?(this._parseChannelEvent(e),this._parseNrpnEvent(e)):e.data[0]<=255&&this._parseSystemEvent(e)},s.prototype._parseNrpnEvent=function(e){var t,n,r=e.data[0]>>4,o=15&e.data[0],s=1+o;if(1<e.data.length&&(t=e.data[1],n=2<e.data.length?e.data[2]:void 0),i.nrpnEventsEnabled&&r===i.MIDI_CHANNEL_MESSAGES.controlchange&&(t>=i.MIDI_NRPN_MESSAGES.increment&&t<=i.MIDI_NRPN_MESSAGES.parammsb||t===i.MIDI_NRPN_MESSAGES.entrymsb||t===i.MIDI_NRPN_MESSAGES.entrylsb)){var a={target:this,type:"controlchange",data:e.data,timestamp:e.timeStamp,channel:s,controller:{number:t,name:this.getCcNameByNumber(t)},value:n};if(a.controller.number===i.MIDI_NRPN_MESSAGES.parammsb&&a.value!=i.MIDI_NRPN_MESSAGES.nullactiveparameter)i._nrpnBuffer[o]=[],i._nrpnBuffer[o][0]=a;else if(1===i._nrpnBuffer[o].length&&a.controller.number===i.MIDI_NRPN_MESSAGES.paramlsb)i._nrpnBuffer[o].push(a);else if(2!==i._nrpnBuffer[o].length||a.controller.number!==i.MIDI_NRPN_MESSAGES.increment&&a.controller.number!==i.MIDI_NRPN_MESSAGES.decrement&&a.controller.number!==i.MIDI_NRPN_MESSAGES.entrymsb)if(3===i._nrpnBuffer[o].length&&i._nrpnBuffer[o][2].number===i.MIDI_NRPN_MESSAGES.entrymsb&&a.controller.number===i.MIDI_NRPN_MESSAGES.entrylsb)i._nrpnBuffer[o].push(a);else if(3<=i._nrpnBuffer[o].length&&i._nrpnBuffer[o].length<=4&&a.controller.number===i.MIDI_NRPN_MESSAGES.parammsb&&a.value===i.MIDI_NRPN_MESSAGES.nullactiveparameter)i._nrpnBuffer[o].push(a);else if(4<=i._nrpnBuffer[o].length&&i._nrpnBuffer[o].length<=5&&a.controller.number===i.MIDI_NRPN_MESSAGES.paramlsb&&a.value===i.MIDI_NRPN_MESSAGES.nullactiveparameter){i._nrpnBuffer[o].push(a);var u=[];i._nrpnBuffer[o].forEach((function(e){u.push(e.data)}));var h=i._nrpnBuffer[o][0].value<<7|i._nrpnBuffer[o][1].value,c=i._nrpnBuffer[o][2].value;6===i._nrpnBuffer[o].length&&(c=i._nrpnBuffer[o][2].value<<7|i._nrpnBuffer[o][3].value);var l="";switch(i._nrpnBuffer[o][2].controller.number){case i.MIDI_NRPN_MESSAGES.entrymsb:l=i._nrpnTypes[0];break;case i.MIDI_NRPN_MESSAGES.increment:l=i._nrpnTypes[1];break;case i.MIDI_NRPN_MESSAGES.decrement:l=i._nrpnTypes[2];break;default:throw new Error("The NPRN type was unidentifiable.")}var f={timestamp:a.timestamp,channel:a.channel,type:"nrpn",data:u,controller:{number:h,type:l,name:"Non-Registered Parameter "+h},value:c};i._nrpnBuffer[o]=[],this._userHandlers.channel[f.type]&&this._userHandlers.channel[f.type][f.channel]&&this._userHandlers.channel[f.type][f.channel].forEach((function(e){e(f)}))}else i._nrpnBuffer[o]=[];else i._nrpnBuffer[o].push(a)}},s.prototype._parseChannelEvent=function(e){var t,n,r=e.data[0]>>4,o=1+(15&e.data[0]);1<e.data.length&&(t=e.data[1],n=2<e.data.length?e.data[2]:void 0);var s={target:this,data:e.data,timestamp:e.timeStamp,channel:o};r===i.MIDI_CHANNEL_MESSAGES.noteoff||r===i.MIDI_CHANNEL_MESSAGES.noteon&&0===n?(s.type="noteoff",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.velocity=n/127,s.rawVelocity=n):r===i.MIDI_CHANNEL_MESSAGES.noteon?(s.type="noteon",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.velocity=n/127,s.rawVelocity=n):r===i.MIDI_CHANNEL_MESSAGES.keyaftertouch?(s.type="keyaftertouch",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.value=n/127):r===i.MIDI_CHANNEL_MESSAGES.controlchange&&0<=t&&t<=119?(s.type="controlchange",s.controller={number:t,name:this.getCcNameByNumber(t)},s.value=n):r===i.MIDI_CHANNEL_MESSAGES.channelmode&&120<=t&&t<=127?(s.type="channelmode",s.controller={number:t,name:this.getChannelModeByNumber(t)},s.value=n):r===i.MIDI_CHANNEL_MESSAGES.programchange?(s.type="programchange",s.value=t):r===i.MIDI_CHANNEL_MESSAGES.channelaftertouch?(s.type="channelaftertouch",s.value=t/127):r===i.MIDI_CHANNEL_MESSAGES.pitchbend?(s.type="pitchbend",s.value=((n<<7)+t-8192)/8192):s.type="unknownchannelmessage",this._userHandlers.channel[s.type]&&this._userHandlers.channel[s.type][o]&&this._userHandlers.channel[s.type][o].forEach((function(e){e(s)}))},s.prototype.getCcNameByNumber=function(e){if(!(0<=(e=Math.floor(e))&&e<=119))throw new RangeError("The control change number must be between 0 and 119.");for(var t in i.MIDI_CONTROL_CHANGE_MESSAGES)if(i.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(t)&&e===i.MIDI_CONTROL_CHANGE_MESSAGES[t])return t},s.prototype.getChannelModeByNumber=function(e){if(!(120<=(e=Math.floor(e))&&status<=127))throw new RangeError("The control change number must be between 120 and 127.");for(var t in i.MIDI_CHANNEL_MODE_MESSAGES)if(i.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===i.MIDI_CHANNEL_MODE_MESSAGES[t])return t},s.prototype._parseSystemEvent=function(e){var t=e.data[0],n={target:this,data:e.data,timestamp:e.timeStamp};t===i.MIDI_SYSTEM_MESSAGES.sysex?n.type="sysex":t===i.MIDI_SYSTEM_MESSAGES.timecode?n.type="timecode":t===i.MIDI_SYSTEM_MESSAGES.songposition?n.type="songposition":t===i.MIDI_SYSTEM_MESSAGES.songselect?(n.type="songselect",n.song=e.data[1]):t===i.MIDI_SYSTEM_MESSAGES.tuningrequest?n.type="tuningrequest":t===i.MIDI_SYSTEM_MESSAGES.clock?n.type="clock":t===i.MIDI_SYSTEM_MESSAGES.start?n.type="start":t===i.MIDI_SYSTEM_MESSAGES.continue?n.type="continue":t===i.MIDI_SYSTEM_MESSAGES.stop?n.type="stop":t===i.MIDI_SYSTEM_MESSAGES.activesensing?n.type="activesensing":t===i.MIDI_SYSTEM_MESSAGES.reset?n.type="reset":n.type="unknownsystemmessage",this._userHandlers.system[n.type]&&this._userHandlers.system[n.type].forEach((function(e){e(n)}))},a.prototype.send=function(e,t,n){if(!(128<=e&&e<=255))throw new RangeError("The status byte must be an integer between 128 (0x80) and 255 (0xFF).");void 0===t&&(t=[]),Array.isArray(t)||(t=[t]);var r=[];return t.forEach((function(e){var t=Math.floor(e);if(!(0<=t&&t<=255))throw new RangeError("Data bytes must be integers between 0 (0x00) and 255 (0xFF).");r.push(t)})),this._midiOutput.send([e].concat(r),parseFloat(n)||0),this},a.prototype.sendSysex=function(e,t,n){if(!i.sysexEnabled)throw new Error("Sysex message support must first be activated.");return n=n||{},e=[].concat(e),t.forEach((function(e){if(e<0||127<e)throw new RangeError("The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).")})),t=e.concat(t,i.MIDI_SYSTEM_MESSAGES.sysexend),this.send(i.MIDI_SYSTEM_MESSAGES.sysex,t,this._parseTimeParameter(n.time)),this},a.prototype.sendTimecodeQuarterFrame=function(e,t){return t=t||{},this.send(i.MIDI_SYSTEM_MESSAGES.timecode,e,this._parseTimeParameter(t.time)),this},a.prototype.sendSongPosition=function(e,t){t=t||{};var n=(e=Math.floor(e)||0)>>7&127,r=127&e;return this.send(i.MIDI_SYSTEM_MESSAGES.songposition,[n,r],this._parseTimeParameter(t.time)),this},a.prototype.sendSongSelect=function(e,t){if(t=t||{},!(0<=(e=Math.floor(e))&&e<=127))throw new RangeError("The song number must be between 0 and 127.");return this.send(i.MIDI_SYSTEM_MESSAGES.songselect,[e],this._parseTimeParameter(t.time)),this},a.prototype.sendTuningRequest=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendClock=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendStart=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendContinue=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.continue,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendStop=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendActiveSensing=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(e.time)),this},a.prototype.sendReset=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(e.time)),this},a.prototype.stopNote=function(e,t,n){if("all"===e)return this.sendChannelMode("allnotesoff",0,t,n);var r=64;return(n=n||{}).rawVelocity?!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=127&&(r=n.velocity):!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=1&&(r=127*n.velocity),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(t-1),[e,Math.round(r)],this._parseTimeParameter(n.time))}.bind(this))}.bind(this)),this},a.prototype.playNote=function(e,t,n){var r,o=64;if((n=n||{}).rawVelocity?!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=127&&(o=n.velocity):!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=1&&(o=127*n.velocity),r=this._parseTimeParameter(n.time),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteon<<4)+(t-1),[e,Math.round(o)],r)}.bind(this))}.bind(this)),!isNaN(n.duration)){n.duration<=0&&(n.duration=0);var s=64;n.rawVelocity?!isNaN(n.release)&&0<=n.release&&n.release<=127&&(s=n.release):!isNaN(n.release)&&0<=n.release&&n.release<=1&&(s=127*n.release),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(t-1),[e,Math.round(s)],(r||i.time)+n.duration)}.bind(this))}.bind(this))}return this},a.prototype.sendKeyAftertouch=function(e,t,n,r){var o=this;if(r=r||{},t<1||16<t)throw new RangeError("The channel must be between 1 and 16.");(isNaN(n)||n<0||1<n)&&(n=.5);var s=Math.round(127*n);return this._convertNoteToArray(e).forEach((function(e){i.toMIDIChannels(t).forEach((function(t){o.send((i.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(t-1),[e,s],o._parseTimeParameter(r.time))}))})),this},a.prototype.sendControlChange=function(e,t,n,r){if(r=r||{},"string"==typeof e){if(void 0===(e=i.MIDI_CONTROL_CHANGE_MESSAGES[e]))throw new TypeError("Invalid controller name.")}else if(!(0<=(e=Math.floor(e))&&e<=119))throw new RangeError("Controller numbers must be between 0 and 119.");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("Controller value must be between 0 and 127.");return i.toMIDIChannels(n).forEach(function(n){this.send((i.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(n-1),[e,t],this._parseTimeParameter(r.time))}.bind(this)),this},a.prototype._selectRegisteredParameter=function(e,t,n){var r=this;if(e[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The control65 value must be between 0 and 127");if(e[1]=Math.floor(e[1]),!(0<=e[1]&&e[1]<=127))throw new RangeError("The control64 value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(101,e[0],t,{time:n}),r.sendControlChange(100,e[1],t,{time:n})})),this},a.prototype._selectNonRegisteredParameter=function(e,t,n){var r=this;if(e[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The control63 value must be between 0 and 127");if(e[1]=Math.floor(e[1]),!(0<=e[1]&&e[1]<=127))throw new RangeError("The control62 value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(99,e[0],t,{time:n}),r.sendControlChange(98,e[1],t,{time:n})})),this},a.prototype._setCurrentRegisteredParameter=function(e,t,n){var r=this;if((e=[].concat(e))[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The msb value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(6,e[0],t,{time:n})})),e[1]=Math.floor(e[1]),0<=e[1]&&e[1]<=127&&i.toMIDIChannels(t).forEach((function(){r.sendControlChange(38,e[1],t,{time:n})})),this},a.prototype._deselectRegisteredParameter=function(e,t){var n=this;return i.toMIDIChannels(e).forEach((function(){n.sendControlChange(101,127,e,{time:t}),n.sendControlChange(100,127,e,{time:t})})),this},a.prototype.setRegisteredParameter=function(e,t,n,r){var o=this;if(r=r||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new Error("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(n).forEach((function(){o._selectRegisteredParameter(e,n,r.time),o._setCurrentRegisteredParameter(t,n,r.time),o._deselectRegisteredParameter(n,r.time)})),this},a.prototype.setNonRegisteredParameter=function(e,t,n,r){var o=this;if(r=r||{},!(0<=e[0]&&e[0]<=127&&0<=e[1]&&e[1]<=127))throw new Error("Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.");return t=[].concat(t),i.toMIDIChannels(n).forEach((function(){o._selectNonRegisteredParameter(e,n,r.time),o._setCurrentRegisteredParameter(t,n,r.time),o._deselectRegisteredParameter(n,r.time)})),this},a.prototype.incrementRegisteredParameter=function(e,t,n){var r=this;if(n=n||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new Error("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(t).forEach((function(){r._selectRegisteredParameter(e,t,n.time),r.sendControlChange(96,0,t,{time:n.time}),r._deselectRegisteredParameter(t,n.time)})),this},a.prototype.decrementRegisteredParameter=function(e,t,n){if(n=n||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new TypeError("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(t).forEach(function(){this._selectRegisteredParameter(e,t,n.time),this.sendControlChange(97,0,t,{time:n.time}),this._deselectRegisteredParameter(t,n.time)}.bind(this)),this},a.prototype.setPitchBendRange=function(e,t,n,r){var o=this;if(r=r||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The cents value must be between 0 and 127");return i.toMIDIChannels(n).forEach((function(){o.setRegisteredParameter("pitchbendrange",[e,t],n,{time:r.time})})),this},a.prototype.setModulationRange=function(e,t,n,r){var o=this;if(r=r||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The cents value must be between 0 and 127");return i.toMIDIChannels(n).forEach((function(){o.setRegisteredParameter("modulationrange",[e,t],n,{time:r.time})})),this},a.prototype.setMasterTuning=function(e,t,n){var r=this;if(n=n||{},(e=parseFloat(e)||0)<=-65||64<=e)throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");var o=Math.floor(e)+64,s=e-Math.floor(e),a=(s=Math.round((s+1)/2*16383))>>7&127,u=127&s;return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("channelcoarsetuning",o,t,{time:n.time}),r.setRegisteredParameter("channelfinetuning",[a,u],t,{time:n.time})})),this},a.prototype.setTuningProgram=function(e,t,n){var r=this;if(n=n||{},!(0<=(e=Math.floor(e))&&e<=127))throw new RangeError("The program value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("tuningprogram",e,t,{time:n.time})})),this},a.prototype.setTuningBank=function(e,t,n){var r=this;if(n=n||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The bank value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("tuningbank",e,t,{time:n.time})})),this},a.prototype.sendChannelMode=function(e,t,n,r){if(r=r||{},"string"==typeof e){if(!(e=i.MIDI_CHANNEL_MODE_MESSAGES[e]))throw new TypeError("Invalid channel mode message name.")}else if(!(120<=(e=Math.floor(e))&&e<=127))throw new RangeError("Channel mode numerical identifiers must be between 120 and 127.");if((t=Math.floor(t)||0)<0||127<t)throw new RangeError("Value must be an integer between 0 and 127.");return i.toMIDIChannels(n).forEach(function(n){this.send((i.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(n-1),[e,t],this._parseTimeParameter(r.time))}.bind(this)),this},a.prototype.sendProgramChange=function(e,t,n){var r=this;if(n=n||{},e=Math.floor(e),isNaN(e)||e<0||127<e)throw new RangeError("Program numbers must be between 0 and 127.");return i.toMIDIChannels(t).forEach((function(t){r.send((i.MIDI_CHANNEL_MESSAGES.programchange<<4)+(t-1),[e],r._parseTimeParameter(n.time))})),this},a.prototype.sendChannelAftertouch=function(e,t,n){var r=this;n=n||{},e=parseFloat(e),(isNaN(e)||e<0||1<e)&&(e=.5);var o=Math.round(127*e);return i.toMIDIChannels(t).forEach((function(e){r.send((i.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(e-1),[o],r._parseTimeParameter(n.time))})),this},a.prototype.sendPitchBend=function(e,t,n){var r=this;if(n=n||{},isNaN(e)||e<-1||1<e)throw new RangeError("Pitch bend value must be between -1 and 1.");var o=Math.round((e+1)/2*16383),s=o>>7&127,a=127&o;return i.toMIDIChannels(t).forEach((function(e){r.send((i.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(e-1),[a,s],r._parseTimeParameter(n.time))})),this},a.prototype._parseTimeParameter=function(e){var t,n=parseFloat(e);return"string"==typeof e&&"+"===e.substring(0,1)?n&&0<n&&(t=i.time+n):n>i.time&&(t=n),t},a.prototype._convertNoteToArray=function(e){var t=[];return Array.isArray(e)||(e=[e]),e.forEach((function(e){t.push(i.guessNoteNumber(e))})),t},void 0===(r=function(){return i}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=new Map([["Semitone",1],["Tone",2],["Minor3rd",3],["Major3rd",4],["Perfect4th",5],["Augmented4th",6],["Perfect5th",7],["Minor6th",8],["Major6th",9],["Minor7th",10],["Major7th",11]]);class o{constructor(e,t,n){this.symbol=t,this.description=n,this.intervals=e}}t.ChordBook=class{constructor(){this.symbolMap=new Map([["dim",new o(new Array("Minor3rd","Minor3rd"),"dim","diminished triad root")],["m",new o(new Array("Minor3rd","Major3rd"),"m","minor triad root position")],["m7",new o(new Array("Minor3rd","Major3rd","Minor3rd"),"m7","minor 7th root position")],["",new o(new Array("Major3rd","Minor3rd"),"","major triad root position")],["7",new o(new Array("Major3rd","Minor3rd","Minor3rd"),"7","7th root position")],["maj7",new o(new Array("Major3rd","Minor3rd","Major3rd"),"maj7","major 7th root position")],["aug",new o(new Array("Major3rd","Major3rd"),"aug","augmented triad")]])}make(e,t,n,r){var o=new u(e);o.symbol=e.abstract.string().toUpperCase()+t;var i=this.symbolMap.get(t);if(!i)throw"chord "+t+"unknown";return i.intervals.forEach(e=>{o.stack(e)}),o}};t.ChordSet=class{constructor(){this.current=0,this.chords=[]}infer(e){this.chords=[],document.querySelector("#chords").innerHTML.split(" ").forEach(t=>{var n=t[0].toLocaleLowerCase();t.includes("#")&&(n+="#"),this.chords.push(e.make(new s(a(n),4),t.substring(n.length),!1,!0))})}getCurrent(){if(this.current<this.chords.length)return this.chords[this.current]}completeNext(){this.current=(this.current+1)%this.chords.length,this.render()}reset(){this.current=0,this.render()}render(){var e="";this.chords.forEach((t,n)=>{n<this.current?e+=t.symbol.strike()+" ":e+=t.symbol+" "}),e=e.substr(0,e.lastIndexOf(" ")),document.querySelector("#chords").innerHTML=e}};class i{constructor(e){if(0==e.length||e.length>2)throw"invalid note name length "+e.length+" for note "+e;var t=new RegExp(/[a-gA-GX]/);if(this.letter=e[0],!t.test(this.letter))throw'note letter must be between "a" and "g", got '+this.letter;if(2==e.length&&"#"!=e[1])throw"only sharps are valid accidentals, got "+e[1]+" from "+e;this.sharp=2==e.length}string(){var e=this.letter;return this.sharp&&(e+="#"),e}next(){var e=t.NoteOrder.indexOf(this);return t.NoteOrder[(e+1)%12]}}class s{constructor(e,t){this.abstract=e,this.octave=t}lowerThan(e){return this.octave<e.octave||t.NoteOrder.indexOf(this.abstract)<t.NoteOrder.indexOf(e.abstract)}next(){var e=this.octave;return 11==t.NoteOrder.indexOf(this.abstract)&&e++,new s(this.abstract.next(),e)}string(){return this.abstract.string()+this.octave}}t.Note=s;function a(e){for(var n=0;n<t.NoteOrder.length;n++){var r=t.NoteOrder[n];if(r.string()==e)return r}if("X"==e)return new i("X");throw"unknown note "+e}t.NoteOrder=["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"].map(e=>new i(e)),t.NewAbstractNote=a;class u{constructor(e){this.symbol="",this.root=e,this.highest=e,this.notes=[e]}stack(e){var n=t.NoteOrder.indexOf(this.highest.abstract)+r.get(e),o=t.NoteOrder[n%12],i=new s(o,Math.floor((this.highest.octave+n)/12));return this.notes.push(i),this.highest=i,this}equals(e){if(this.notes.length!=e.length)return!1;for(var t=0;t<this.notes.length;t++)if(null!=e[t]&&this.notes[t].abstract.string()!=e[t].abstract.string())return!1;return!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93ZWJtaWRpL3dlYm1pZGkubWluLmpzIiwid2VicGFjazovLy8uL3NyYy90aGVvcnkvY2hvcmRzLnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwid2hpdGVLZXlzIiwia2V5cyIsIndoaXRlcyIsImZvckVhY2giLCJ3aGl0ZSIsInB1c2giLCJhYnN0cmFjdCIsInNoYXJwIiwiYm9vayIsIkNob3JkQm9vayIsImNob3JkcyIsIkNob3JkU2V0IiwicGlhbm8iLCJjYW52YXMiLCJ0aGlzIiwiY29udGV4dCIsImdldENvbnRleHQiLCJwcmVzc2VkIiwiTWFwIiwid2lkdGgiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwia2V5V2lkdGgiLCJoZWlnaHQiLCJub3RlcyIsImlzUHJlc3NlZCIsIm5vdGUiLCJzb3J0IiwiYSIsImIiLCJsb3dlclRoYW4iLCJjbGVhclJlY3QiLCJ4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJnZXRDdXJyZW50IiwiZXF1YWxzIiwiY3VycmVudE5vdGVzIiwiY29tcGxldGVOZXh0Iiwic2V0IiwicmVuZGVyIiwiQ2hlY2tTdWNjZXNzIiwiZGVsZXRlIiwiZXZlbnQiLCJyZWxlYXNlS2V5Iiwia2V5Ym9hcmRJbnB1dE5vdGUiLCJrZXlDb2RlIiwicHJlc3NLZXkiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsImluZGV4IiwiaW5kZXhPZiIsImJsYWNrcyIsImxhc3RXYXNXaGl0ZSIsIk5vdGUiLCJOZXdBYnN0cmFjdE5vdGUiLCJwaHlzaWNhbEJsYWNrS2V5cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm9jdGF2ZXNMZWZ0Iiwibm90ZXNMZWZ0IiwibmV4dCIsIm9jdGF2ZXNGcm9tIiwiYWRkRXZlbnRMaXN0ZW5lciIsImtleURvd24iLCJrZXlVcCIsImVuYWJsZSIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJpbnB1dHMiLCJhZGRMaXN0ZW5lciIsImUiLCJvY3RhdmUiLCJvbmNsaWNrIiwibmV3Q2hvcmRUZXh0QXJlYSIsImlubmVySFRNTCIsImluZmVyIiwic2NvcGUiLCJXZWJNaWRpIiwiX3NpbmdsZXRvbiIsIkVycm9yIiwiX2lucHV0cyIsIl9vdXRwdXRzIiwiX3VzZXJIYW5kbGVycyIsIl9zdGF0ZUNoYW5nZVF1ZXVlIiwiX3Byb2Nlc3NpbmdTdGF0ZUNoYW5nZSIsIl9taWRpSW50ZXJmYWNlRXZlbnRzIiwiX25ycG5CdWZmZXIiLCJfbnJwbkV2ZW50c0VuYWJsZWQiLCJfbnJwblR5cGVzIiwiX25vdGVzIiwiX3NlbWl0b25lcyIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiQSIsIkIiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiTUlESV9TWVNURU1fTUVTU0FHRVMiLCJzeXNleCIsInRpbWVjb2RlIiwic29uZ3Bvc2l0aW9uIiwic29uZ3NlbGVjdCIsInR1bmluZ3JlcXVlc3QiLCJzeXNleGVuZCIsImNsb2NrIiwic3RhcnQiLCJjb250aW51ZSIsInN0b3AiLCJhY3RpdmVzZW5zaW5nIiwicmVzZXQiLCJtaWRpbWVzc2FnZSIsInVua25vd25zeXN0ZW1tZXNzYWdlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJNSURJX0NIQU5ORUxfTUVTU0FHRVMiLCJub3Rlb2ZmIiwibm90ZW9uIiwia2V5YWZ0ZXJ0b3VjaCIsImNvbnRyb2xjaGFuZ2UiLCJjaGFubmVsbW9kZSIsIm5ycG4iLCJwcm9ncmFtY2hhbmdlIiwiY2hhbm5lbGFmdGVydG91Y2giLCJwaXRjaGJlbmQiLCJNSURJX1JFR0lTVEVSRURfUEFSQU1FVEVSIiwicGl0Y2hiZW5kcmFuZ2UiLCJjaGFubmVsZmluZXR1bmluZyIsImNoYW5uZWxjb2Fyc2V0dW5pbmciLCJ0dW5pbmdwcm9ncmFtIiwidHVuaW5nYmFuayIsIm1vZHVsYXRpb25yYW5nZSIsImF6aW11dGhhbmdsZSIsImVsZXZhdGlvbmFuZ2xlIiwiZ2FpbiIsImRpc3RhbmNlcmF0aW8iLCJtYXhpbXVtZGlzdGFuY2UiLCJtYXhpbXVtZGlzdGFuY2VnYWluIiwicmVmZXJlbmNlZGlzdGFuY2VyYXRpbyIsInBhbnNwcmVhZGFuZ2xlIiwicm9sbGFuZ2xlIiwiTUlESV9DT05UUk9MX0NIQU5HRV9NRVNTQUdFUyIsImJhbmtzZWxlY3Rjb2Fyc2UiLCJtb2R1bGF0aW9ud2hlZWxjb2Fyc2UiLCJicmVhdGhjb250cm9sbGVyY29hcnNlIiwiZm9vdGNvbnRyb2xsZXJjb2Fyc2UiLCJwb3J0YW1lbnRvdGltZWNvYXJzZSIsImRhdGFlbnRyeWNvYXJzZSIsInZvbHVtZWNvYXJzZSIsImJhbGFuY2Vjb2Fyc2UiLCJwYW5jb2Fyc2UiLCJleHByZXNzaW9uY29hcnNlIiwiZWZmZWN0Y29udHJvbDFjb2Fyc2UiLCJlZmZlY3Rjb250cm9sMmNvYXJzZSIsImdlbmVyYWxwdXJwb3Nlc2xpZGVyMSIsImdlbmVyYWxwdXJwb3Nlc2xpZGVyMiIsImdlbmVyYWxwdXJwb3Nlc2xpZGVyMyIsImdlbmVyYWxwdXJwb3Nlc2xpZGVyNCIsImJhbmtzZWxlY3RmaW5lIiwibW9kdWxhdGlvbndoZWVsZmluZSIsImJyZWF0aGNvbnRyb2xsZXJmaW5lIiwiZm9vdGNvbnRyb2xsZXJmaW5lIiwicG9ydGFtZW50b3RpbWVmaW5lIiwiZGF0YWVudHJ5ZmluZSIsInZvbHVtZWZpbmUiLCJiYWxhbmNlZmluZSIsInBhbmZpbmUiLCJleHByZXNzaW9uZmluZSIsImVmZmVjdGNvbnRyb2wxZmluZSIsImVmZmVjdGNvbnRyb2wyZmluZSIsImhvbGRwZWRhbCIsInBvcnRhbWVudG8iLCJzdXN0ZW51dG9wZWRhbCIsInNvZnRwZWRhbCIsImxlZ2F0b3BlZGFsIiwiaG9sZDJwZWRhbCIsInNvdW5kdmFyaWF0aW9uIiwicmVzb25hbmNlIiwic291bmRyZWxlYXNldGltZSIsInNvdW5kYXR0YWNrdGltZSIsImJyaWdodG5lc3MiLCJzb3VuZGNvbnRyb2w2Iiwic291bmRjb250cm9sNyIsInNvdW5kY29udHJvbDgiLCJzb3VuZGNvbnRyb2w5Iiwic291bmRjb250cm9sMTAiLCJnZW5lcmFscHVycG9zZWJ1dHRvbjEiLCJnZW5lcmFscHVycG9zZWJ1dHRvbjIiLCJnZW5lcmFscHVycG9zZWJ1dHRvbjMiLCJnZW5lcmFscHVycG9zZWJ1dHRvbjQiLCJyZXZlcmJsZXZlbCIsInRyZW1vbG9sZXZlbCIsImNob3J1c2xldmVsIiwiY2VsZXN0ZWxldmVsIiwicGhhc2VybGV2ZWwiLCJkYXRhYnV0dG9uaW5jcmVtZW50IiwiZGF0YWJ1dHRvbmRlY3JlbWVudCIsIm5vbnJlZ2lzdGVyZWRwYXJhbWV0ZXJjb2Fyc2UiLCJub25yZWdpc3RlcmVkcGFyYW1ldGVyZmluZSIsInJlZ2lzdGVyZWRwYXJhbWV0ZXJjb2Fyc2UiLCJyZWdpc3RlcmVkcGFyYW1ldGVyZmluZSIsIk1JRElfTlJQTl9NRVNTQUdFUyIsImVudHJ5bXNiIiwiZW50cnlsc2IiLCJpbmNyZW1lbnQiLCJkZWNyZW1lbnQiLCJwYXJhbWxzYiIsInBhcmFtbXNiIiwibnVsbGFjdGl2ZXBhcmFtZXRlciIsIk1JRElfQ0hBTk5FTF9NT0RFX01FU1NBR0VTIiwiYWxsc291bmRvZmYiLCJyZXNldGFsbGNvbnRyb2xsZXJzIiwibG9jYWxjb250cm9sIiwiYWxsbm90ZXNvZmYiLCJvbW5pbW9kZW9mZiIsIm9tbmltb2Rlb24iLCJtb25vbW9kZW9uIiwicG9seW1vZGVvbiIsIm9jdGF2ZU9mZnNldCIsInN1cHBvcnRlZCIsIm5hdmlnYXRvciIsImVuYWJsZWQiLCJpbnRlcmZhY2UiLCJvdXRwdXRzIiwic3lzZXhFbmFibGVkIiwibnJwbkV2ZW50c0VuYWJsZWQiLCJucnBuVHlwZXMiLCJ0aW1lIiwicGVyZm9ybWFuY2UiLCJub3ciLCJ3bSIsIklucHV0IiwibWlkaUlucHV0IiwidGhhdCIsImNoYW5uZWwiLCJzeXN0ZW0iLCJfbWlkaUlucHV0IiwiY29ubmVjdGlvbiIsImlkIiwibWFudWZhY3R1cmVyIiwic3RhdGUiLCJ0eXBlIiwiX2luaXRpYWxpemVVc2VySGFuZGxlcnMiLCJvbm1pZGltZXNzYWdlIiwiX29uTWlkaU1lc3NhZ2UiLCJPdXRwdXQiLCJtaWRpT3V0cHV0IiwiX21pZGlPdXRwdXQiLCJjYWxsYmFjayIsInJlcXVlc3RNSURJQWNjZXNzIiwidGhlbiIsIm1pZGlBY2Nlc3MiLCJwcm9taXNlVGltZW91dCIsImV2ZW50cyIsInByb21pc2VzIiwiX3Jlc2V0SW50ZXJmYWNlVXNlckhhbmRsZXJzIiwib25zdGF0ZWNoYW5nZSIsInZhbHVlcyIsImlucHV0IiwiZG9uZSIsIm9wZW4iLCJvdXRwdXQiLCJvblBvcnRzT3BlbiIsImNsZWFyVGltZW91dCIsIl91cGRhdGVJbnB1dHNBbmRPdXRwdXRzIiwiX29uSW50ZXJmYWNlU3RhdGVDaGFuZ2UiLCJzZXRUaW1lb3V0IiwiUHJvbWlzZSIsImFsbCIsImNhdGNoIiwiZGlzYWJsZSIsImxpc3RlbmVyIiwiVHlwZUVycm9yIiwiaGFzTGlzdGVuZXIiLCJsZW5ndGgiLCJyZW1vdmVMaXN0ZW5lciIsInNwbGljZSIsInRvTUlESUNoYW5uZWxzIiwiY2hhbm5lbHMiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJjaCIsInBhcnNlSW50IiwiZmlsdGVyIiwiZ2V0SW5wdXRCeUlkIiwiZ2V0T3V0cHV0QnlJZCIsImdldElucHV0QnlOYW1lIiwiZ2V0T2N0YXZlIiwibnVtYmVyIiwiTWF0aCIsImZsb29yIiwiZ2V0T3V0cHV0QnlOYW1lIiwiZ3Vlc3NOb3RlTnVtYmVyIiwidG9GaXhlZCIsInJvdW5kIiwibm90ZU5hbWVUb051bWJlciIsIm1hdGNoZXMiLCJtYXRjaCIsIlJhbmdlRXJyb3IiLCJzZW1pdG9uZXMiLCJ0b1VwcGVyQ2FzZSIsInJlc3VsdCIsInRvTG93ZXJDYXNlIiwiX3VwZGF0ZUlucHV0cyIsIl91cGRhdGVPdXRwdXRzIiwicmVtb3ZlIiwidXBkYXRlZCIsIm5JbnB1dCIsImFkZCIsImoiLCJuT3V0cHV0IiwidGltZXN0YW1wIiwidGltZVN0YW1wIiwicG9ydCIsImhhbmRsZXIiLCJvbiIsIml0ZW0iLCJjb25zdHJ1Y3RvciIsImV2ZXJ5IiwiY2hOdW0iLCJsaXN0ZW5lcnMiLCJwcm9wMSIsInByb3AyIiwidGFyZ2V0IiwiZGF0YSIsIl9wYXJzZUNoYW5uZWxFdmVudCIsIl9wYXJzZU5ycG5FdmVudCIsIl9wYXJzZVN5c3RlbUV2ZW50IiwiZGF0YTEiLCJkYXRhMiIsImNvbW1hbmQiLCJjaGFubmVsQnVmZmVySW5kZXgiLCJjY0V2ZW50IiwiY29udHJvbGxlciIsImdldENjTmFtZUJ5TnVtYmVyIiwicmF3RGF0YSIsImV2IiwibnJwbk51bWJlciIsIm5ycG5WYWx1ZSIsIm5ycG5Db250cm9sbGVyVHlwZSIsIm5ycG5FdmVudCIsInZlbG9jaXR5IiwicmF3VmVsb2NpdHkiLCJnZXRDaGFubmVsTW9kZUJ5TnVtYmVyIiwiY2MiLCJzdGF0dXMiLCJjbSIsInNvbmciLCJzZW5kIiwibWVzc2FnZSIsInBhcnNlZCIsImNvbmNhdCIsInBhcnNlRmxvYXQiLCJzZW5kU3lzZXgiLCJvcHRpb25zIiwiX3BhcnNlVGltZVBhcmFtZXRlciIsInNlbmRUaW1lY29kZVF1YXJ0ZXJGcmFtZSIsInNlbmRTb25nUG9zaXRpb24iLCJtc2IiLCJsc2IiLCJzZW5kU29uZ1NlbGVjdCIsInNlbmRUdW5pbmdSZXF1ZXN0Iiwic2VuZENsb2NrIiwic2VuZFN0YXJ0Iiwic2VuZENvbnRpbnVlIiwic2VuZFN0b3AiLCJzZW5kQWN0aXZlU2Vuc2luZyIsInNlbmRSZXNldCIsInN0b3BOb3RlIiwic2VuZENoYW5uZWxNb2RlIiwiblZlbG9jaXR5IiwiaXNOYU4iLCJfY29udmVydE5vdGVUb0FycmF5IiwicGxheU5vdGUiLCJkdXJhdGlvbiIsIm5SZWxlYXNlIiwicmVsZWFzZSIsInNlbmRLZXlBZnRlcnRvdWNoIiwicHJlc3N1cmUiLCJuUHJlc3N1cmUiLCJzZW5kQ29udHJvbENoYW5nZSIsIl9zZWxlY3RSZWdpc3RlcmVkUGFyYW1ldGVyIiwicGFyYW1ldGVyIiwiX3NlbGVjdE5vblJlZ2lzdGVyZWRQYXJhbWV0ZXIiLCJfc2V0Q3VycmVudFJlZ2lzdGVyZWRQYXJhbWV0ZXIiLCJfZGVzZWxlY3RSZWdpc3RlcmVkUGFyYW1ldGVyIiwic2V0UmVnaXN0ZXJlZFBhcmFtZXRlciIsInNldE5vblJlZ2lzdGVyZWRQYXJhbWV0ZXIiLCJpbmNyZW1lbnRSZWdpc3RlcmVkUGFyYW1ldGVyIiwiZGVjcmVtZW50UmVnaXN0ZXJlZFBhcmFtZXRlciIsInNldFBpdGNoQmVuZFJhbmdlIiwiY2VudHMiLCJzZXRNb2R1bGF0aW9uUmFuZ2UiLCJzZXRNYXN0ZXJUdW5pbmciLCJjb2Fyc2UiLCJmaW5lIiwic2V0VHVuaW5nUHJvZ3JhbSIsInNldFR1bmluZ0JhbmsiLCJzZW5kUHJvZ3JhbUNoYW5nZSIsInByb2dyYW0iLCJzZW5kQ2hhbm5lbEFmdGVydG91Y2giLCJzZW5kUGl0Y2hCZW5kIiwiYmVuZCIsIm5MZXZlbCIsInN1YnN0cmluZyIsInNlbWl0b25lc0luIiwiQ2hvcmRUeXBlIiwiaW50ZXJ2YWxzIiwic3ltYm9sIiwiZGVzY3JpcHRpb24iLCJzeW1ib2xNYXAiLCJyb290Iiwib2N0YXZlSW5kZXBlbmRlbnQiLCJ2b2ljaW5nSW5kZXBlbmRlbnQiLCJjaG9yZCIsIkNob3JkIiwic3RyaW5nIiwicG9zc2libGVUeXBlIiwiaW50ZXJ2YWwiLCJzdGFjayIsImN1cnJlbnQiLCJzcGxpdCIsImluY2x1ZGVzIiwibWFrZSIsImRlc2MiLCJzdHJpa2UiLCJzdWJzdHIiLCJsYXN0SW5kZXhPZiIsIkFic3RyYWN0Tm90ZSIsInZhbGlkTm90ZSIsIlJlZ0V4cCIsImxldHRlciIsInRlc3QiLCJzdHIiLCJOb3RlT3JkZXIiLCJoaWdoZXN0IiwibmV4dEFic3RyYWN0Tm90ZSIsIm5ld05vdGUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ks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Q1JaLEtBQUsrWSxPQUFTLEdBQ2QvWSxLQUFLa1osS0FBT3RZLEVBQ1paLEtBQUswYSxRQUFVOVosRUFDZlosS0FBS1UsTUFBUSxDQUFDRSxHQUdsQixNQUFNNlksR0FDRixJQUFJcFgsRUFBUSxFQUFBb1ksVUFBVW5ZLFFBQVF0QyxLQUFLMGEsUUFBUWxiLFVBQW9Cb1osRUFBWTdhLElBQUkwYixHQUMzRWtCLEVBQW1CLEVBQUFGLFVBQVVwWSxFQUFRLElBQ3JDdVksRUFBVSxJQUFJblksRUFBS2tZLEVBQWtCbkosS0FBS0MsT0FBT3pSLEtBQUswYSxRQUFROVcsT0FBU3ZCLEdBQU8sS0FHbEYsT0FGQXJDLEtBQUtVLE1BQU1uQixLQUFLcWIsR0FDaEI1YSxLQUFLMGEsUUFBVUUsRUFDUjVhLEtBR1gsT0FBT1UsR0FHSCxHQUFJVixLQUFLVSxNQUFNOFAsUUFBVTlQLEVBQU04UCxPQUMzQixPQUFPLEVBRVgsSUFBSyxJQUFJdFQsRUFBSSxFQUFHQSxFQUFJOEMsS0FBS1UsTUFBTThQLE9BQVF0VCxJQUNuQyxHQUFnQjJkLE1BQVpuYSxFQUFNeEQsSUFBbUI4QyxLQUFLVSxNQUFNeEQsR0FBR3NDLFNBQVMrWixVQUFZN1ksRUFBTXhELEdBQUdzQyxTQUFTK1osU0FDOUUsT0FBTyxFQUlmLE9BQU8iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiaW1wb3J0IFdlYk1pZGksIHsgSW5wdXRFdmVudE5vdGVvbiwgSW5wdXRFdmVudE5vdGVvZmYgfSBmcm9tIFwid2VibWlkaVwiO1xuaW1wb3J0IHsgQ2hvcmRCb29rLCBDaG9yZFNldCwgTm90ZSwgTmV3QWJzdHJhY3ROb3RlIH0gZnJvbSBcIi4vdGhlb3J5L2Nob3Jkc1wiO1xuXG4vLyBUT0RPOiBtZXJnZSB3aXRoIGJsYWNrS2V5c1xuZnVuY3Rpb24gd2hpdGVLZXlzKGtleXM6IEFycmF5PE5vdGU+KSB7XG4gICAgbGV0IHdoaXRlczogQXJyYXk8Tm90ZT4gPSBbXTtcbiAgICBrZXlzLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgaWYgKHdoaXRlKGtleSkpe1xuICAgICAgICAgICAgd2hpdGVzLnB1c2goa2V5KVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHdoaXRlc1xufVxuXG5mdW5jdGlvbiB3aGl0ZShrZXk6IE5vdGUpIHtcbiAgICByZXR1cm4gIWtleS5hYnN0cmFjdC5zaGFycFxufVxuXG4vLyBCbGFjayBrZXlzIGluY2x1ZGVzIGdob3N0IGJsYWNrIGtleXMgbGlrZSB0aGUga2V5IHRoYXQgd291bGQgYmUgYmV0d2VlbiBiIGFuZCBjXG5mdW5jdGlvbiBwaHlzaWNhbEJsYWNrS2V5cyhrZXlzOiBBcnJheTxOb3RlPikge1xuICAgIGxldCBibGFja3M6IEFycmF5PE5vdGU+ID0gW107XG4gICAgdmFyIGxhc3RXYXNXaGl0ZSA9IHRydWU7XG4gICAga2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmICghd2hpdGUoa2V5KSkge1xuICAgICAgICAgICAgYmxhY2tzLnB1c2goa2V5KVxuICAgICAgICAgICAgbGFzdFdhc1doaXRlID0gZmFsc2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChsYXN0V2FzV2hpdGUpIHtcbiAgICAgICAgICAgICAgICBibGFja3MucHVzaChuZXcgTm90ZShOZXdBYnN0cmFjdE5vdGUoXCJYXCIpLCAtMTc3NikpXG4gICAgICAgICAgICAgICAgbGFzdFdhc1doaXRlID0gZmFsc2VcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGFzdFdhc1doaXRlID0gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGJsYWNrc1xufVxuXG5jbGFzcyBQaWFubyB7XG4gICAgLy8gbG9naWNcbiAgICBrZXlzOiBBcnJheTxOb3RlPjtcbiAgICBwcmVzc2VkOiBNYXA8Tm90ZSwgYm9vbGVhbj47XG4gICAgY2hvcmRzOiBDaG9yZFNldDsgLy8gVE9ETzogbWFrZSBhIHBpYW5vIG91dHB1dCBjdXJyZW50IG5vdGVzLCByYXRoZXIgdGhhbiBrbm93aW5nIGFib3V0IGNob3Jkc1xuXG4gICAgLy8gcmVuZGVyaW5nXG4gICAgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAga2V5V2lkdGg6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsIGtleXM6IEFycmF5PE5vdGU+LCBjaG9yZHM6IENob3JkU2V0KSB7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IDxDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ+Y2FudmFzLmdldENvbnRleHQoJzJkJylcbiAgICAgICAgdGhpcy5rZXlzID0ga2V5c1xuICAgICAgICB0aGlzLnByZXNzZWQgPSBuZXcgTWFwKClcblxuICAgICAgICB0aGlzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGggKiAwLjlcblxuICAgICAgICB0aGlzLmtleVdpZHRoID0gdGhpcy53aWR0aCAvICh3aGl0ZUtleXModGhpcy5rZXlzKS5sZW5ndGgpXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMzAwO1xuICAgICAgICBjYW52YXMud2lkdGggPSB0aGlzLndpZHRoXG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodFxuICAgICAgICB0aGlzLmNob3JkcyA9IGNob3Jkc1xuICAgIH1cblxuICAgIGN1cnJlbnROb3RlcygpOiBBcnJheTxOb3RlPntcbiAgICAgICAgdmFyIG5vdGVzOiBBcnJheTxOb3RlPiA9IFtdO1xuICAgICAgICB0aGlzLnByZXNzZWQuZm9yRWFjaCgoaXNQcmVzc2VkLCBub3RlKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNQcmVzc2VkKSB7XG4gICAgICAgICAgICAgICAgbm90ZXMucHVzaChub3RlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBub3Rlcy5zb3J0KChhOiBOb3RlLCBiOiBOb3RlKSA9PiB7XG4gICAgICAgICAgICAvLyBUT0RPOiBzaG9ydGVuIHVzaW5nIGZhbmN5IGpzIG51bWJlciBib29sIHN0dWZmXG4gICAgICAgICAgICBpZiAoYS5sb3dlclRoYW4oYikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLTFcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAxXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIG5vdGVzXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICAvLyBDbGVhciB0aGUgY2FudmFzXG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpXG5cbiAgICAgICAgLy8gRHJhdyB0aGUgd2hpdGUga2V5c1xuICAgICAgICB2YXIgeCA9IDA7XG4gICAgICAgIHRoaXMua2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCIjRkZGRkZGXCI7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmVzc2VkLmdldChrZXkpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwiIzAwRkYwMFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAod2hpdGUoa2V5KSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCh4KnRoaXMua2V5V2lkdGgsIDAsIHRoaXMua2V5V2lkdGgtMSwgdGhpcy5oZWlnaHQpXG4gICAgICAgICAgICAgICAgeCArPSAxXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIERyYXcgdGhlIGJsYWNrIGtleXNcbiAgICAgICAgdmFyIHggPSAwO1xuICAgICAgICB0aGlzLmtleXMuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwiIzAwMDAwMFwiO1xuICAgICAgICAgICAgaWYgKHRoaXMucHJlc3NlZC5nZXQoa2V5KSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcIiMwMEZGMDBcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF3aGl0ZShrZXkpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KCh4IC0gMC4yNSkqdGhpcy5rZXlXaWR0aCAsIDAsIHRoaXMua2V5V2lkdGgvMiwgdGhpcy5oZWlnaHQvMilcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgeCArPSAxXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIENoZWNrU3VjY2VzcygpIHtcbiAgICAgICAgaWYgKHRoaXMuY2hvcmRzLmdldEN1cnJlbnQoKT8uZXF1YWxzKHRoaXMuY3VycmVudE5vdGVzKCkpKSB7XG4gICAgICAgICAgICB0aGlzLmNob3Jkcy5jb21wbGV0ZU5leHQoKVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHByZXNzS2V5KG5vdGU6IE5vdGUpIHtcbiAgICAgICAgdGhpcy5wcmVzc2VkLnNldChub3RlLCB0cnVlKVxuICAgICAgICB0aGlzLnJlbmRlcigpXG4gICAgICAgIHRoaXMuQ2hlY2tTdWNjZXNzKClcbiAgICB9XG5cbiAgICByZWxlYXNlS2V5KG5vdGU6IE5vdGUpIHtcbiAgICAgICAgdGhpcy5wcmVzc2VkLmRlbGV0ZShub3RlKVxuICAgICAgICB0aGlzLnJlbmRlcigpXG4gICAgICAgIHRoaXMuQ2hlY2tTdWNjZXNzKClcbiAgICB9XG5cbiAgICAvLyBIYW5kbGVzIGNvbXB1dGVyIGtleWJvYXJkIG5vdGUgcGxheWluZ1xuICAgIGtleVVwKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIHRoaXMucmVsZWFzZUtleSh0aGlzLmtleWJvYXJkSW5wdXROb3RlKGV2ZW50LmtleUNvZGUpKVxuICAgIH1cblxuICAgIC8vIEhhbmRsZXMgY29tcHV0ZXIga2V5Ym9hcmQgbm90ZSByZWxlYXNpbmdcbiAgICBrZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIHRoaXMucHJlc3NLZXkodGhpcy5rZXlib2FyZElucHV0Tm90ZShldmVudC5rZXlDb2RlKSlcbiAgICB9XG5cbiAgICAvLyBLZXlzIHRoZSBub3RlIHJlcHNlbnRlZCBieSBhIGtleSBvbiB0aGUgY29tcHV0ZXIga2V5Ym9hcmRcbiAgICBrZXlib2FyZElucHV0Tm90ZShrZXlDb2RlOiBudW1iZXIpOk5vdGUge1xuICAgICAgICAvLyBUT0RPOiBkb24ndCBhc3N1bWUgd2FzZFxuICAgICAgICBsZXQga2V5OiBzdHJpbmcgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleUNvZGUpLnRvTG9jYWxlTG93ZXJDYXNlKClcblxuICAgICAgICAvLyBoYW5kbGUgbmF0dXJhbHNcbiAgICAgICAgdmFyIG5hdHVyYWxzID0gW1wiYVwiLFwic1wiLFwiZFwiLFwiZlwiLFwiZ1wiLFwiaFwiLFwialwiLFwia1wiLFwibFwiLFwiO1wiXVxuICAgICAgICB2YXIgaW5kZXggPSBuYXR1cmFscy5pbmRleE9mKGtleSlcbiAgICAgICAgaWYgKGluZGV4ICE9IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gd2hpdGVLZXlzKHRoaXMua2V5cylbaW5kZXhdXG4gICAgICAgIH1cblxuICAgICAgICAvLyBoYW5kbGUgYmxhY2sgbm90ZXNcbiAgICAgICAgdmFyIGJsYWNrS2V5cyA9IFtcInFcIiwgXCJ3XCIsXCJlXCIsXCJyXCIsXCJ0XCIsXCJ5XCIsXCJ1XCIsXCJpXCIsXCJvXCIsXCJwXCIsXCJbXCJdXG4gICAgICAgIHZhciBpbmRleCA9IGJsYWNrS2V5cy5pbmRleE9mKGtleSlcbiAgICAgICAgaWYgKGluZGV4ICE9IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gcGh5c2ljYWxCbGFja0tleXModGhpcy5rZXlzKVtpbmRleF1cbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IGtleSArIFwiIGlzIG5vdCBvbiBvdXIga2V5Ym9hcmRcIlxuICAgIH1cbn1cblxuZnVuY3Rpb24gb2N0YXZlc0Zyb20obm90ZTogTm90ZSwgb2N0YXZlc0xlZnQ6IG51bWJlcikge1xuICAgIGlmICghd2hpdGUobm90ZSkpIHtcbiAgICAgICAgdGhyb3cgXCJ0aGUgbm90ZXMgb24gYSBrZXlib2FyZCBtdXN0IHN0YXJ0IGZyb20gYSB3aGl0ZSBub3RlLCBvdGhlcndpc2UgdGhlcmUnbGwgYmUgYSB3ZWlyZCBoYWxmIG5vdGUgc3BhY2UgYXQgdGhlIGVuZCBvZiB0aGUga2V5Ym9hcmRcIlxuICAgIH1cblxuICAgIHZhciBub3RlcyA9IFtdO1xuICAgIHdoaWxlIChvY3RhdmVzTGVmdCA+IDApIHtcbiAgICAgICAgdmFyIG5vdGVzTGVmdCA9IDEyXG4gICAgICAgIHdoaWxlIChub3Rlc0xlZnQgPiAwKSB7XG4gICAgICAgICAgICBub3Rlcy5wdXNoKG5vdGUpXG4gICAgICAgICAgICBub3Rlc0xlZnQtLVxuICAgICAgICAgICAgbm90ZSA9IG5vdGUubmV4dCgpXG4gICAgICAgIH1cbiAgICAgICAgb2N0YXZlc0xlZnQtLVxuICAgIH1cblxuICAgIG5vdGVzLnB1c2gobm90ZSlcbiAgICByZXR1cm4gbm90ZXNcbn1cblxubGV0IGJvb2sgPSBuZXcgQ2hvcmRCb29rKClcbmxldCBjaG9yZHMgPSBuZXcgQ2hvcmRTZXQoKVxuXG5jb25zdCBwaWFubyA9IG5ldyBQaWFubyg8SFRNTENhbnZhc0VsZW1lbnQ+ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwaWFub1wiKSwgb2N0YXZlc0Zyb20obmV3IE5vdGUoTmV3QWJzdHJhY3ROb3RlKFwiY1wiKSwgNCksIDEpLCBjaG9yZHMpO1xuXG4vLyBTZXR1cCBpbnRlcmFjdGlvbnNcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICBwaWFuby5rZXlEb3duKGV2ZW50KVxufSk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2ZW50KSA9PiB7XG4gICAgcGlhbm8ua2V5VXAoZXZlbnQpXG59KTtcblxuV2ViTWlkaS5lbmFibGUoZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJXZWJNaWRpIGNvdWxkIG5vdCBiZSBlbmFibGVkLlwiLCBlcnIpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBtYWtlIHN1cmUgd2UgZ2V0IHRoZSByaWdodCBpbnB1dCBieSBjaGVja2luZyBhbGwgcG9zc2libGUgaW5wdXRzXG4gICAgLy8gVE9ETzogbGlzdGVuIGZvciBtaWRpIGJlaW5nIHBsdWdnZWQgaW5cbiAgICB0cnkge1xuICAgICAgICBXZWJNaWRpLmlucHV0c1swXS5hZGRMaXN0ZW5lcignbm90ZW9uJywgXCJhbGxcIiwgKGU6IElucHV0RXZlbnROb3Rlb24pID0+IHtcbiAgICAgICAgICBwaWFuby5wcmVzc0tleShuZXcgTm90ZShOZXdBYnN0cmFjdE5vdGUoZS5ub3RlLm5hbWUpLCBlLm5vdGUub2N0YXZlKSlcbiAgICAgICAgfSk7XG4gICAgICAgIFdlYk1pZGkuaW5wdXRzWzBdLmFkZExpc3RlbmVyKCdub3Rlb2ZmJywgXCJhbGxcIiwgKGU6IElucHV0RXZlbnROb3Rlb2ZmKSA9PiB7XG4gICAgICAgICAgICBwaWFuby5yZWxlYXNlS2V5KG5ldyBOb3RlKE5ld0Fic3RyYWN0Tm90ZShlLm5vdGUubmFtZSksIGUubm90ZS5vY3RhdmUpKVxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlKSB7fVxufSk7XG5cbnZhciBjaGFuZ2VDaG9yZHNCdXR0b24gPSA8SFRNTEJ1dHRvbkVsZW1lbnQ+ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjaGFuZ2VDaG9yZHNcIilcbmNoYW5nZUNob3Jkc0J1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG5ld0Nob3JkVGV4dEFyZWEgPSA8SFRNTFRleHRBcmVhRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ld0Nob3Jkc1wiKTtcbiAgICB2YXIgY2hvcmRzUGFyYWdyYXBoID0gPEhUTUxQYXJhZ3JhcGhFbGVtZW50PmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2hvcmRzXCIpO1xuICAgIGNob3Jkc1BhcmFncmFwaC5pbm5lckhUTUwgPSBuZXdDaG9yZFRleHRBcmVhLnZhbHVlXG4gICAgbmV3Q2hvcmRUZXh0QXJlYS52YWx1ZSA9IFwiXCJcbiAgICBjaG9yZHMuaW5mZXIoYm9vaylcbn07XG5jaG9yZHMuaW5mZXIoYm9vaylcblxuLy8gaW5pdGlhbCByZW5kZXJpbmdcbnBpYW5vLnJlbmRlcigpO1xuY2hvcmRzLnJlbmRlcigpOyIsIi8qXG5cbldlYk1pZGkgdjIuNS4xXG5cbldlYk1pZGkuanMgaGVscHMgeW91IHRhbWUgdGhlIFdlYiBNSURJIEFQSS4gU2VuZCBhbmQgcmVjZWl2ZSBNSURJIG1lc3NhZ2VzIHdpdGggZWFzZS4gQ29udHJvbCBpbnN0cnVtZW50cyB3aXRoIHVzZXItZnJpZW5kbHkgZnVuY3Rpb25zIChwbGF5Tm90ZSwgc2VuZFBpdGNoQmVuZCwgZXRjLikuIFJlYWN0IHRvIE1JREkgaW5wdXQgd2l0aCBzaW1wbGUgZXZlbnQgbGlzdGVuZXJzIChub3Rlb24sIHBpdGNoYmVuZCwgY29udHJvbGNoYW5nZSwgZXRjLikuXG5odHRwczovL2dpdGh1Yi5jb20vZGppcGNvL3dlYm1pZGlcblxuXG5UaGUgTUlUIExpY2Vuc2UgKE1JVClcblxuQ29weXJpZ2h0IChjKSAyMDE1LTIwMTksIEplYW4tUGhpbGlwcGUgQ8O0dMOpXG5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmRcbmFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sXG5pbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLFxuc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG5mdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsXG5wb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVFxuTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkRcbk5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVNcbk9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTlxuQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuKi9cblxuXG4hZnVuY3Rpb24oc2NvcGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIFdlYk1pZGkoKXtpZihXZWJNaWRpLnByb3RvdHlwZS5fc2luZ2xldG9uKXRocm93IG5ldyBFcnJvcihcIldlYk1pZGkgaXMgYSBzaW5nbGV0b24sIGl0IGNhbm5vdCBiZSBpbnN0YW50aWF0ZWQgZGlyZWN0bHkuXCIpOyhXZWJNaWRpLnByb3RvdHlwZS5fc2luZ2xldG9uPXRoaXMpLl9pbnB1dHM9W10sdGhpcy5fb3V0cHV0cz1bXSx0aGlzLl91c2VySGFuZGxlcnM9e30sdGhpcy5fc3RhdGVDaGFuZ2VRdWV1ZT1bXSx0aGlzLl9wcm9jZXNzaW5nU3RhdGVDaGFuZ2U9ITEsdGhpcy5fbWlkaUludGVyZmFjZUV2ZW50cz1bXCJjb25uZWN0ZWRcIixcImRpc2Nvbm5lY3RlZFwiXSx0aGlzLl9ucnBuQnVmZmVyPVtbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXV0sdGhpcy5fbnJwbkV2ZW50c0VuYWJsZWQ9ITAsdGhpcy5fbnJwblR5cGVzPVtcImVudHJ5XCIsXCJpbmNyZW1lbnRcIixcImRlY3JlbWVudFwiXSx0aGlzLl9ub3Rlcz1bXCJDXCIsXCJDI1wiLFwiRFwiLFwiRCNcIixcIkVcIixcIkZcIixcIkYjXCIsXCJHXCIsXCJHI1wiLFwiQVwiLFwiQSNcIixcIkJcIl0sdGhpcy5fc2VtaXRvbmVzPXtDOjAsRDoyLEU6NCxGOjUsRzo3LEE6OSxCOjExfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHtNSURJX1NZU1RFTV9NRVNTQUdFUzp7dmFsdWU6e3N5c2V4OjI0MCx0aW1lY29kZToyNDEsc29uZ3Bvc2l0aW9uOjI0Mixzb25nc2VsZWN0OjI0Myx0dW5pbmdyZXF1ZXN0OjI0NixzeXNleGVuZDoyNDcsY2xvY2s6MjQ4LHN0YXJ0OjI1MCxjb250aW51ZToyNTEsc3RvcDoyNTIsYWN0aXZlc2Vuc2luZzoyNTQscmVzZXQ6MjU1LG1pZGltZXNzYWdlOjAsdW5rbm93bnN5c3RlbW1lc3NhZ2U6LTF9LHdyaXRhYmxlOiExLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExfSxNSURJX0NIQU5ORUxfTUVTU0FHRVM6e3ZhbHVlOntub3Rlb2ZmOjgsbm90ZW9uOjksa2V5YWZ0ZXJ0b3VjaDoxMCxjb250cm9sY2hhbmdlOjExLGNoYW5uZWxtb2RlOjExLG5ycG46MTEscHJvZ3JhbWNoYW5nZToxMixjaGFubmVsYWZ0ZXJ0b3VjaDoxMyxwaXRjaGJlbmQ6MTR9LHdyaXRhYmxlOiExLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExfSxNSURJX1JFR0lTVEVSRURfUEFSQU1FVEVSOnt2YWx1ZTp7cGl0Y2hiZW5kcmFuZ2U6WzAsMF0sY2hhbm5lbGZpbmV0dW5pbmc6WzAsMV0sY2hhbm5lbGNvYXJzZXR1bmluZzpbMCwyXSx0dW5pbmdwcm9ncmFtOlswLDNdLHR1bmluZ2Jhbms6WzAsNF0sbW9kdWxhdGlvbnJhbmdlOlswLDVdLGF6aW11dGhhbmdsZTpbNjEsMF0sZWxldmF0aW9uYW5nbGU6WzYxLDFdLGdhaW46WzYxLDJdLGRpc3RhbmNlcmF0aW86WzYxLDNdLG1heGltdW1kaXN0YW5jZTpbNjEsNF0sbWF4aW11bWRpc3RhbmNlZ2FpbjpbNjEsNV0scmVmZXJlbmNlZGlzdGFuY2VyYXRpbzpbNjEsNl0scGFuc3ByZWFkYW5nbGU6WzYxLDddLHJvbGxhbmdsZTpbNjEsOF19LHdyaXRhYmxlOiExLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExfSxNSURJX0NPTlRST0xfQ0hBTkdFX01FU1NBR0VTOnt2YWx1ZTp7YmFua3NlbGVjdGNvYXJzZTowLG1vZHVsYXRpb253aGVlbGNvYXJzZToxLGJyZWF0aGNvbnRyb2xsZXJjb2Fyc2U6Mixmb290Y29udHJvbGxlcmNvYXJzZTo0LHBvcnRhbWVudG90aW1lY29hcnNlOjUsZGF0YWVudHJ5Y29hcnNlOjYsdm9sdW1lY29hcnNlOjcsYmFsYW5jZWNvYXJzZTo4LHBhbmNvYXJzZToxMCxleHByZXNzaW9uY29hcnNlOjExLGVmZmVjdGNvbnRyb2wxY29hcnNlOjEyLGVmZmVjdGNvbnRyb2wyY29hcnNlOjEzLGdlbmVyYWxwdXJwb3Nlc2xpZGVyMToxNixnZW5lcmFscHVycG9zZXNsaWRlcjI6MTcsZ2VuZXJhbHB1cnBvc2VzbGlkZXIzOjE4LGdlbmVyYWxwdXJwb3Nlc2xpZGVyNDoxOSxiYW5rc2VsZWN0ZmluZTozMixtb2R1bGF0aW9ud2hlZWxmaW5lOjMzLGJyZWF0aGNvbnRyb2xsZXJmaW5lOjM0LGZvb3Rjb250cm9sbGVyZmluZTozNixwb3J0YW1lbnRvdGltZWZpbmU6MzcsZGF0YWVudHJ5ZmluZTozOCx2b2x1bWVmaW5lOjM5LGJhbGFuY2VmaW5lOjQwLHBhbmZpbmU6NDIsZXhwcmVzc2lvbmZpbmU6NDMsZWZmZWN0Y29udHJvbDFmaW5lOjQ0LGVmZmVjdGNvbnRyb2wyZmluZTo0NSxob2xkcGVkYWw6NjQscG9ydGFtZW50bzo2NSxzdXN0ZW51dG9wZWRhbDo2Nixzb2Z0cGVkYWw6NjcsbGVnYXRvcGVkYWw6NjgsaG9sZDJwZWRhbDo2OSxzb3VuZHZhcmlhdGlvbjo3MCxyZXNvbmFuY2U6NzEsc291bmRyZWxlYXNldGltZTo3Mixzb3VuZGF0dGFja3RpbWU6NzMsYnJpZ2h0bmVzczo3NCxzb3VuZGNvbnRyb2w2Ojc1LHNvdW5kY29udHJvbDc6NzYsc291bmRjb250cm9sODo3Nyxzb3VuZGNvbnRyb2w5Ojc4LHNvdW5kY29udHJvbDEwOjc5LGdlbmVyYWxwdXJwb3NlYnV0dG9uMTo4MCxnZW5lcmFscHVycG9zZWJ1dHRvbjI6ODEsZ2VuZXJhbHB1cnBvc2VidXR0b24zOjgyLGdlbmVyYWxwdXJwb3NlYnV0dG9uNDo4MyxyZXZlcmJsZXZlbDo5MSx0cmVtb2xvbGV2ZWw6OTIsY2hvcnVzbGV2ZWw6OTMsY2VsZXN0ZWxldmVsOjk0LHBoYXNlcmxldmVsOjk1LGRhdGFidXR0b25pbmNyZW1lbnQ6OTYsZGF0YWJ1dHRvbmRlY3JlbWVudDo5Nyxub25yZWdpc3RlcmVkcGFyYW1ldGVyY29hcnNlOjk4LG5vbnJlZ2lzdGVyZWRwYXJhbWV0ZXJmaW5lOjk5LHJlZ2lzdGVyZWRwYXJhbWV0ZXJjb2Fyc2U6MTAwLHJlZ2lzdGVyZWRwYXJhbWV0ZXJmaW5lOjEwMX0sd3JpdGFibGU6ITEsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITF9LE1JRElfTlJQTl9NRVNTQUdFUzp7dmFsdWU6e2VudHJ5bXNiOjYsZW50cnlsc2I6MzgsaW5jcmVtZW50Ojk2LGRlY3JlbWVudDo5NyxwYXJhbWxzYjo5OCxwYXJhbW1zYjo5OSxudWxsYWN0aXZlcGFyYW1ldGVyOjEyN30sd3JpdGFibGU6ITEsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITF9LE1JRElfQ0hBTk5FTF9NT0RFX01FU1NBR0VTOnt2YWx1ZTp7YWxsc291bmRvZmY6MTIwLHJlc2V0YWxsY29udHJvbGxlcnM6MTIxLGxvY2FsY29udHJvbDoxMjIsYWxsbm90ZXNvZmY6MTIzLG9tbmltb2Rlb2ZmOjEyNCxvbW5pbW9kZW9uOjEyNSxtb25vbW9kZW9uOjEyNixwb2x5bW9kZW9uOjEyN30sd3JpdGFibGU6ITEsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITF9LG9jdGF2ZU9mZnNldDp7dmFsdWU6MCx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMX19KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHtzdXBwb3J0ZWQ6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuXCJyZXF1ZXN0TUlESUFjY2Vzc1wiaW4gbmF2aWdhdG9yfX0sZW5hYmxlZDp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5pbnRlcmZhY2V9LmJpbmQodGhpcyl9LGlucHV0czp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5wdXRzfS5iaW5kKHRoaXMpfSxvdXRwdXRzOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vdXRwdXRzfS5iaW5kKHRoaXMpfSxzeXNleEVuYWJsZWQ6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuISghdGhpcy5pbnRlcmZhY2V8fCF0aGlzLmludGVyZmFjZS5zeXNleEVuYWJsZWQpfS5iaW5kKHRoaXMpfSxucnBuRXZlbnRzRW5hYmxlZDp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX25ycG5FdmVudHNFbmFibGVkfS5iaW5kKHRoaXMpLHNldDpmdW5jdGlvbihlbmFibGVkKXtyZXR1cm4gdGhpcy5fbnJwbkV2ZW50c0VuYWJsZWQ9ZW5hYmxlZCx0aGlzLl9ucnBuRXZlbnRzRW5hYmxlZH19LG5ycG5UeXBlczp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbnJwblR5cGVzfS5iaW5kKHRoaXMpfSx0aW1lOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBwZXJmb3JtYW5jZS5ub3coKX19fSl9dmFyIHdtPW5ldyBXZWJNaWRpO2Z1bmN0aW9uIElucHV0KG1pZGlJbnB1dCl7dmFyIHRoYXQ9dGhpczt0aGlzLl91c2VySGFuZGxlcnM9e2NoYW5uZWw6e30sc3lzdGVtOnt9fSx0aGlzLl9taWRpSW5wdXQ9bWlkaUlucHV0LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMse2Nvbm5lY3Rpb246e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlJbnB1dC5jb25uZWN0aW9ufX0saWQ6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlJbnB1dC5pZH19LG1hbnVmYWN0dXJlcjp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhhdC5fbWlkaUlucHV0Lm1hbnVmYWN0dXJlcn19LG5hbWU6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlJbnB1dC5uYW1lfX0sc3RhdGU6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlJbnB1dC5zdGF0ZX19LHR5cGU6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlJbnB1dC50eXBlfX19KSx0aGlzLl9pbml0aWFsaXplVXNlckhhbmRsZXJzKCksdGhpcy5fbWlkaUlucHV0Lm9ubWlkaW1lc3NhZ2U9dGhpcy5fb25NaWRpTWVzc2FnZS5iaW5kKHRoaXMpfWZ1bmN0aW9uIE91dHB1dChtaWRpT3V0cHV0KXt2YXIgdGhhdD10aGlzO3RoaXMuX21pZGlPdXRwdXQ9bWlkaU91dHB1dCxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHtjb25uZWN0aW9uOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGF0Ll9taWRpT3V0cHV0LmNvbm5lY3Rpb259fSxpZDp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhhdC5fbWlkaU91dHB1dC5pZH19LG1hbnVmYWN0dXJlcjp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhhdC5fbWlkaU91dHB1dC5tYW51ZmFjdHVyZXJ9fSxuYW1lOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGF0Ll9taWRpT3V0cHV0Lm5hbWV9fSxzdGF0ZTp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhhdC5fbWlkaU91dHB1dC5zdGF0ZX19LHR5cGU6e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoYXQuX21pZGlPdXRwdXQudHlwZX19fSl9V2ViTWlkaS5wcm90b3R5cGUuZW5hYmxlPWZ1bmN0aW9uKGNhbGxiYWNrLHN5c2V4KXt0aGlzLmVuYWJsZWR8fCh0aGlzLnN1cHBvcnRlZD9uYXZpZ2F0b3IucmVxdWVzdE1JRElBY2Nlc3Moe3N5c2V4OnN5c2V4fSkudGhlbihmdW5jdGlvbihtaWRpQWNjZXNzKXt2YXIgcHJvbWlzZVRpbWVvdXQsZXZlbnRzPVtdLHByb21pc2VzPVtdO3RoaXMuaW50ZXJmYWNlPW1pZGlBY2Nlc3MsdGhpcy5fcmVzZXRJbnRlcmZhY2VVc2VySGFuZGxlcnMoKSx0aGlzLmludGVyZmFjZS5vbnN0YXRlY2hhbmdlPWZ1bmN0aW9uKGUpe2V2ZW50cy5wdXNoKGUpfTtmb3IodmFyIGlucHV0cz1taWRpQWNjZXNzLmlucHV0cy52YWx1ZXMoKSxpbnB1dD1pbnB1dHMubmV4dCgpO2lucHV0JiYhaW5wdXQuZG9uZTtpbnB1dD1pbnB1dHMubmV4dCgpKXByb21pc2VzLnB1c2goaW5wdXQudmFsdWUub3BlbigpKTtmb3IodmFyIG91dHB1dHM9bWlkaUFjY2Vzcy5vdXRwdXRzLnZhbHVlcygpLG91dHB1dD1vdXRwdXRzLm5leHQoKTtvdXRwdXQmJiFvdXRwdXQuZG9uZTtvdXRwdXQ9b3V0cHV0cy5uZXh0KCkpcHJvbWlzZXMucHVzaChvdXRwdXQudmFsdWUub3BlbigpKTtmdW5jdGlvbiBvblBvcnRzT3Blbigpe2NsZWFyVGltZW91dChwcm9taXNlVGltZW91dCksdGhpcy5fdXBkYXRlSW5wdXRzQW5kT3V0cHV0cygpLHRoaXMuaW50ZXJmYWNlLm9uc3RhdGVjaGFuZ2U9dGhpcy5fb25JbnRlcmZhY2VTdGF0ZUNoYW5nZS5iaW5kKHRoaXMpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGNhbGxiYWNrJiZjYWxsYmFjay5jYWxsKHRoaXMpLGV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50KXt0aGlzLl9vbkludGVyZmFjZVN0YXRlQ2hhbmdlKGV2ZW50KX0uYmluZCh0aGlzKSl9cHJvbWlzZVRpbWVvdXQ9c2V0VGltZW91dChvblBvcnRzT3Blbi5iaW5kKHRoaXMpLDIwMCksUHJvbWlzZSYmUHJvbWlzZS5hbGwocHJvbWlzZXMpLmNhdGNoKGZ1bmN0aW9uKGVycil7fSkudGhlbihvblBvcnRzT3Blbi5iaW5kKHRoaXMpKX0uYmluZCh0aGlzKSxmdW5jdGlvbihlcnIpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGNhbGxiYWNrJiZjYWxsYmFjay5jYWxsKHRoaXMsZXJyKX0uYmluZCh0aGlzKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgY2FsbGJhY2smJmNhbGxiYWNrKG5ldyBFcnJvcihcIlRoZSBXZWIgTUlESSBBUEkgaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIGJyb3dzZXIuXCIpKSl9LFdlYk1pZGkucHJvdG90eXBlLmRpc2FibGU9ZnVuY3Rpb24oKXtpZighdGhpcy5zdXBwb3J0ZWQpdGhyb3cgbmV3IEVycm9yKFwiVGhlIFdlYiBNSURJIEFQSSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHlvdXIgYnJvd3Nlci5cIik7dGhpcy5pbnRlcmZhY2UmJih0aGlzLmludGVyZmFjZS5vbnN0YXRlY2hhbmdlPXZvaWQgMCksdGhpcy5pbnRlcmZhY2U9dm9pZCAwLHRoaXMuX2lucHV0cz1bXSx0aGlzLl9vdXRwdXRzPVtdLHRoaXMuX25ycG5FdmVudHNFbmFibGVkPSEwLHRoaXMuX3Jlc2V0SW50ZXJmYWNlVXNlckhhbmRsZXJzKCl9LFdlYk1pZGkucHJvdG90eXBlLmFkZExpc3RlbmVyPWZ1bmN0aW9uKHR5cGUsbGlzdGVuZXIpe2lmKCF0aGlzLmVuYWJsZWQpdGhyb3cgbmV3IEVycm9yKFwiV2ViTWlkaSBtdXN0IGJlIGVuYWJsZWQgYmVmb3JlIGFkZGluZyBldmVudCBsaXN0ZW5lcnMuXCIpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGxpc3RlbmVyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgJ2xpc3RlbmVyJyBwYXJhbWV0ZXIgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKTtpZighKDA8PXRoaXMuX21pZGlJbnRlcmZhY2VFdmVudHMuaW5kZXhPZih0eXBlKSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBzcGVjaWZpZWQgZXZlbnQgdHlwZSBpcyBub3Qgc3VwcG9ydGVkLlwiKTtyZXR1cm4gdGhpcy5fdXNlckhhbmRsZXJzW3R5cGVdLnB1c2gobGlzdGVuZXIpLHRoaXN9LFdlYk1pZGkucHJvdG90eXBlLmhhc0xpc3RlbmVyPWZ1bmN0aW9uKHR5cGUsbGlzdGVuZXIpe2lmKCF0aGlzLmVuYWJsZWQpdGhyb3cgbmV3IEVycm9yKFwiV2ViTWlkaSBtdXN0IGJlIGVuYWJsZWQgYmVmb3JlIGNoZWNraW5nIGV2ZW50IGxpc3RlbmVycy5cIik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbGlzdGVuZXIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSAnbGlzdGVuZXInIHBhcmFtZXRlciBtdXN0IGJlIGEgZnVuY3Rpb24uXCIpO2lmKCEoMDw9dGhpcy5fbWlkaUludGVyZmFjZUV2ZW50cy5pbmRleE9mKHR5cGUpKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIHNwZWNpZmllZCBldmVudCB0eXBlIGlzIG5vdCBzdXBwb3J0ZWQuXCIpO2Zvcih2YXIgbz0wO288dGhpcy5fdXNlckhhbmRsZXJzW3R5cGVdLmxlbmd0aDtvKyspaWYodGhpcy5fdXNlckhhbmRsZXJzW3R5cGVdW29dPT09bGlzdGVuZXIpcmV0dXJuITA7cmV0dXJuITF9LFdlYk1pZGkucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyPWZ1bmN0aW9uKHR5cGUsbGlzdGVuZXIpe2lmKCF0aGlzLmVuYWJsZWQpdGhyb3cgbmV3IEVycm9yKFwiV2ViTWlkaSBtdXN0IGJlIGVuYWJsZWQgYmVmb3JlIHJlbW92aW5nIGV2ZW50IGxpc3RlbmVycy5cIik7aWYodm9pZCAwIT09bGlzdGVuZXImJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGxpc3RlbmVyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgJ2xpc3RlbmVyJyBwYXJhbWV0ZXIgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKTtpZigwPD10aGlzLl9taWRpSW50ZXJmYWNlRXZlbnRzLmluZGV4T2YodHlwZSkpaWYobGlzdGVuZXIpZm9yKHZhciBvPTA7bzx0aGlzLl91c2VySGFuZGxlcnNbdHlwZV0ubGVuZ3RoO28rKyl0aGlzLl91c2VySGFuZGxlcnNbdHlwZV1bb109PT1saXN0ZW5lciYmdGhpcy5fdXNlckhhbmRsZXJzW3R5cGVdLnNwbGljZShvLDEpO2Vsc2UgdGhpcy5fdXNlckhhbmRsZXJzW3R5cGVdPVtdO2Vsc2V7aWYodm9pZCAwIT09dHlwZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIHNwZWNpZmllZCBldmVudCB0eXBlIGlzIG5vdCBzdXBwb3J0ZWQuXCIpO3RoaXMuX3Jlc2V0SW50ZXJmYWNlVXNlckhhbmRsZXJzKCl9cmV0dXJuIHRoaXN9LFdlYk1pZGkucHJvdG90eXBlLnRvTUlESUNoYW5uZWxzPWZ1bmN0aW9uKGNoYW5uZWwpe3ZhciBjaGFubmVscztpZihcImFsbFwiPT09Y2hhbm5lbHx8dm9pZCAwPT09Y2hhbm5lbCljaGFubmVscz1bXCJhbGxcIl07ZWxzZXtpZihcIm5vbmVcIj09PWNoYW5uZWwpcmV0dXJuIGNoYW5uZWxzPVtdO2NoYW5uZWxzPUFycmF5LmlzQXJyYXkoY2hhbm5lbCk/Y2hhbm5lbDpbY2hhbm5lbF19cmV0dXJuLTE8Y2hhbm5lbHMuaW5kZXhPZihcImFsbFwiKSYmKGNoYW5uZWxzPVsxLDIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwxNSwxNl0pLGNoYW5uZWxzLm1hcChmdW5jdGlvbihjaCl7cmV0dXJuIHBhcnNlSW50KGNoKX0pLmZpbHRlcihmdW5jdGlvbihjaCl7cmV0dXJuIDE8PWNoJiZjaDw9MTZ9KX0sV2ViTWlkaS5wcm90b3R5cGUuZ2V0SW5wdXRCeUlkPWZ1bmN0aW9uKGlkKXtpZighdGhpcy5lbmFibGVkKXRocm93IG5ldyBFcnJvcihcIldlYk1pZGkgaXMgbm90IGVuYWJsZWQuXCIpO2lkPVN0cmluZyhpZCk7Zm9yKHZhciBpPTA7aTx0aGlzLmlucHV0cy5sZW5ndGg7aSsrKWlmKHRoaXMuaW5wdXRzW2ldLmlkPT09aWQpcmV0dXJuIHRoaXMuaW5wdXRzW2ldO3JldHVybiExfSxXZWJNaWRpLnByb3RvdHlwZS5nZXRPdXRwdXRCeUlkPWZ1bmN0aW9uKGlkKXtpZighdGhpcy5lbmFibGVkKXRocm93IG5ldyBFcnJvcihcIldlYk1pZGkgaXMgbm90IGVuYWJsZWQuXCIpO2lkPVN0cmluZyhpZCk7Zm9yKHZhciBpPTA7aTx0aGlzLm91dHB1dHMubGVuZ3RoO2krKylpZih0aGlzLm91dHB1dHNbaV0uaWQ9PT1pZClyZXR1cm4gdGhpcy5vdXRwdXRzW2ldO3JldHVybiExfSxXZWJNaWRpLnByb3RvdHlwZS5nZXRJbnB1dEJ5TmFtZT1mdW5jdGlvbihuYW1lKXtpZighdGhpcy5lbmFibGVkKXRocm93IG5ldyBFcnJvcihcIldlYk1pZGkgaXMgbm90IGVuYWJsZWQuXCIpO2Zvcih2YXIgaT0wO2k8dGhpcy5pbnB1dHMubGVuZ3RoO2krKylpZih+dGhpcy5pbnB1dHNbaV0ubmFtZS5pbmRleE9mKG5hbWUpKXJldHVybiB0aGlzLmlucHV0c1tpXTtyZXR1cm4hMX0sV2ViTWlkaS5wcm90b3R5cGUuZ2V0T2N0YXZlPWZ1bmN0aW9uKG51bWJlcil7aWYobnVsbCE9bnVtYmVyJiYwPD1udW1iZXImJm51bWJlcjw9MTI3KXJldHVybiBNYXRoLmZsb29yKE1hdGguZmxvb3IobnVtYmVyKS8xMi0xKStNYXRoLmZsb29yKHdtLm9jdGF2ZU9mZnNldCl9LFdlYk1pZGkucHJvdG90eXBlLmdldE91dHB1dEJ5TmFtZT1mdW5jdGlvbihuYW1lKXtpZighdGhpcy5lbmFibGVkKXRocm93IG5ldyBFcnJvcihcIldlYk1pZGkgaXMgbm90IGVuYWJsZWQuXCIpO2Zvcih2YXIgaT0wO2k8dGhpcy5vdXRwdXRzLmxlbmd0aDtpKyspaWYofnRoaXMub3V0cHV0c1tpXS5uYW1lLmluZGV4T2YobmFtZSkpcmV0dXJuIHRoaXMub3V0cHV0c1tpXTtyZXR1cm4hMX0sV2ViTWlkaS5wcm90b3R5cGUuZ3Vlc3NOb3RlTnVtYmVyPWZ1bmN0aW9uKGlucHV0KXt2YXIgb3V0cHV0PSExO2lmKGlucHV0JiZpbnB1dC50b0ZpeGVkJiYwPD1pbnB1dCYmaW5wdXQ8PTEyNz9vdXRwdXQ9TWF0aC5yb3VuZChpbnB1dCk6MDw9cGFyc2VJbnQoaW5wdXQpJiZwYXJzZUludChpbnB1dCk8PTEyNz9vdXRwdXQ9cGFyc2VJbnQoaW5wdXQpOihcInN0cmluZ1wiPT10eXBlb2YgaW5wdXR8fGlucHV0IGluc3RhbmNlb2YgU3RyaW5nKSYmKG91dHB1dD10aGlzLm5vdGVOYW1lVG9OdW1iZXIoaW5wdXQpKSwhMT09PW91dHB1dCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IHZhbHVlIChcIitpbnB1dCtcIikuXCIpO3JldHVybiBvdXRwdXR9LFdlYk1pZGkucHJvdG90eXBlLm5vdGVOYW1lVG9OdW1iZXI9ZnVuY3Rpb24obmFtZSl7XCJzdHJpbmdcIiE9dHlwZW9mIG5hbWUmJihuYW1lPVwiXCIpO3ZhciBtYXRjaGVzPW5hbWUubWF0Y2goLyhbQ0RFRkdBQl0pKCN7MCwyfXxiezAsMn0pKC0/XFxkKykvaSk7aWYoIW1hdGNoZXMpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbnZhbGlkIG5vdGUgbmFtZS5cIik7dmFyIHNlbWl0b25lcz13bS5fc2VtaXRvbmVzW21hdGNoZXNbMV0udG9VcHBlckNhc2UoKV0scmVzdWx0PTEyKihwYXJzZUludChtYXRjaGVzWzNdKSsxLU1hdGguZmxvb3Iod20ub2N0YXZlT2Zmc2V0KSkrc2VtaXRvbmVzO2lmKC0xPG1hdGNoZXNbMl0udG9Mb3dlckNhc2UoKS5pbmRleE9mKFwiYlwiKT9yZXN1bHQtPW1hdGNoZXNbMl0ubGVuZ3RoOi0xPG1hdGNoZXNbMl0udG9Mb3dlckNhc2UoKS5pbmRleE9mKFwiI1wiKSYmKHJlc3VsdCs9bWF0Y2hlc1syXS5sZW5ndGgpLHJlc3VsdDwwfHwxMjc8cmVzdWx0KXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCBub3RlIG5hbWUgb3Igbm90ZSBvdXRzaWRlIHZhbGlkIHJhbmdlLlwiKTtyZXR1cm4gcmVzdWx0fSxXZWJNaWRpLnByb3RvdHlwZS5fdXBkYXRlSW5wdXRzQW5kT3V0cHV0cz1mdW5jdGlvbigpe3RoaXMuX3VwZGF0ZUlucHV0cygpLHRoaXMuX3VwZGF0ZU91dHB1dHMoKX0sV2ViTWlkaS5wcm90b3R5cGUuX3VwZGF0ZUlucHV0cz1mdW5jdGlvbigpe2Zvcih2YXIgaT0wO2k8dGhpcy5faW5wdXRzLmxlbmd0aDtpKyspe2Zvcih2YXIgcmVtb3ZlPSEwLHVwZGF0ZWQ9dGhpcy5pbnRlcmZhY2UuaW5wdXRzLnZhbHVlcygpLGlucHV0PXVwZGF0ZWQubmV4dCgpO2lucHV0JiYhaW5wdXQuZG9uZTtpbnB1dD11cGRhdGVkLm5leHQoKSlpZih0aGlzLl9pbnB1dHNbaV0uX21pZGlJbnB1dD09PWlucHV0LnZhbHVlKXtyZW1vdmU9ITE7YnJlYWt9cmVtb3ZlJiZ0aGlzLl9pbnB1dHMuc3BsaWNlKGksMSl9dGhpcy5pbnRlcmZhY2UmJnRoaXMuaW50ZXJmYWNlLmlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uKG5JbnB1dCl7Zm9yKHZhciBhZGQ9ITAsaj0wO2o8dGhpcy5faW5wdXRzLmxlbmd0aDtqKyspdGhpcy5faW5wdXRzW2pdLl9taWRpSW5wdXQ9PT1uSW5wdXQmJihhZGQ9ITEpO2FkZCYmdGhpcy5faW5wdXRzLnB1c2gobmV3IElucHV0KG5JbnB1dCkpfS5iaW5kKHRoaXMpKX0sV2ViTWlkaS5wcm90b3R5cGUuX3VwZGF0ZU91dHB1dHM9ZnVuY3Rpb24oKXtmb3IodmFyIGk9MDtpPHRoaXMuX291dHB1dHMubGVuZ3RoO2krKyl7Zm9yKHZhciByZW1vdmU9ITAsdXBkYXRlZD10aGlzLmludGVyZmFjZS5vdXRwdXRzLnZhbHVlcygpLG91dHB1dD11cGRhdGVkLm5leHQoKTtvdXRwdXQmJiFvdXRwdXQuZG9uZTtvdXRwdXQ9dXBkYXRlZC5uZXh0KCkpaWYodGhpcy5fb3V0cHV0c1tpXS5fbWlkaU91dHB1dD09PW91dHB1dC52YWx1ZSl7cmVtb3ZlPSExO2JyZWFrfXJlbW92ZSYmdGhpcy5fb3V0cHV0cy5zcGxpY2UoaSwxKX10aGlzLmludGVyZmFjZSYmdGhpcy5pbnRlcmZhY2Uub3V0cHV0cy5mb3JFYWNoKGZ1bmN0aW9uKG5PdXRwdXQpe2Zvcih2YXIgYWRkPSEwLGo9MDtqPHRoaXMuX291dHB1dHMubGVuZ3RoO2orKyl0aGlzLl9vdXRwdXRzW2pdLl9taWRpT3V0cHV0PT09bk91dHB1dCYmKGFkZD0hMSk7YWRkJiZ0aGlzLl9vdXRwdXRzLnB1c2gobmV3IE91dHB1dChuT3V0cHV0KSl9LmJpbmQodGhpcykpfSxXZWJNaWRpLnByb3RvdHlwZS5fb25JbnRlcmZhY2VTdGF0ZUNoYW5nZT1mdW5jdGlvbihlKXt0aGlzLl91cGRhdGVJbnB1dHNBbmRPdXRwdXRzKCk7dmFyIGV2ZW50PXt0aW1lc3RhbXA6ZS50aW1lU3RhbXAsdHlwZTplLnBvcnQuc3RhdGV9O3RoaXMuaW50ZXJmYWNlJiZcImNvbm5lY3RlZFwiPT09ZS5wb3J0LnN0YXRlP1wib3V0cHV0XCI9PT1lLnBvcnQudHlwZT9ldmVudC5wb3J0PXRoaXMuZ2V0T3V0cHV0QnlJZChlLnBvcnQuaWQpOlwiaW5wdXRcIj09PWUucG9ydC50eXBlJiYoZXZlbnQucG9ydD10aGlzLmdldElucHV0QnlJZChlLnBvcnQuaWQpKTpldmVudC5wb3J0PXtjb25uZWN0aW9uOlwiY2xvc2VkXCIsaWQ6ZS5wb3J0LmlkLG1hbnVmYWN0dXJlcjplLnBvcnQubWFudWZhY3R1cmVyLG5hbWU6ZS5wb3J0Lm5hbWUsc3RhdGU6ZS5wb3J0LnN0YXRlLHR5cGU6ZS5wb3J0LnR5cGV9LHRoaXMuX3VzZXJIYW5kbGVyc1tlLnBvcnQuc3RhdGVdLmZvckVhY2goZnVuY3Rpb24oaGFuZGxlcil7aGFuZGxlcihldmVudCl9KX0sV2ViTWlkaS5wcm90b3R5cGUuX3Jlc2V0SW50ZXJmYWNlVXNlckhhbmRsZXJzPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPTA7aTx0aGlzLl9taWRpSW50ZXJmYWNlRXZlbnRzLmxlbmd0aDtpKyspdGhpcy5fdXNlckhhbmRsZXJzW3RoaXMuX21pZGlJbnRlcmZhY2VFdmVudHNbaV1dPVtdfSxJbnB1dC5wcm90b3R5cGUub249SW5wdXQucHJvdG90eXBlLmFkZExpc3RlbmVyPWZ1bmN0aW9uKHR5cGUsY2hhbm5lbCxsaXN0ZW5lcil7dmFyIHRoYXQ9dGhpcztpZih2b2lkIDA9PT1jaGFubmVsJiYoY2hhbm5lbD1cImFsbFwiKSxBcnJheS5pc0FycmF5KGNoYW5uZWwpfHwoY2hhbm5lbD1bY2hhbm5lbF0pLGNoYW5uZWwuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtpZihcImFsbFwiIT09aXRlbSYmISgxPD1pdGVtJiZpdGVtPD0xNikpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgJ2NoYW5uZWwnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKX0pLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGxpc3RlbmVyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgJ2xpc3RlbmVyJyBwYXJhbWV0ZXIgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKTtpZih2b2lkIDAhPT13bS5NSURJX1NZU1RFTV9NRVNTQUdFU1t0eXBlXSl0aGlzLl91c2VySGFuZGxlcnMuc3lzdGVtW3R5cGVdfHwodGhpcy5fdXNlckhhbmRsZXJzLnN5c3RlbVt0eXBlXT1bXSksdGhpcy5fdXNlckhhbmRsZXJzLnN5c3RlbVt0eXBlXS5wdXNoKGxpc3RlbmVyKTtlbHNle2lmKHZvaWQgMD09PXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFU1t0eXBlXSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIHNwZWNpZmllZCBldmVudCB0eXBlIGlzIG5vdCBzdXBwb3J0ZWQuXCIpO2lmKC0xPGNoYW5uZWwuaW5kZXhPZihcImFsbFwiKSl7Y2hhbm5lbD1bXTtmb3IodmFyIGo9MTtqPD0xNjtqKyspY2hhbm5lbC5wdXNoKGopfXRoaXMuX3VzZXJIYW5kbGVycy5jaGFubmVsW3R5cGVdfHwodGhpcy5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV09W10pLGNoYW5uZWwuZm9yRWFjaChmdW5jdGlvbihjaCl7dGhhdC5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV1bY2hdfHwodGhhdC5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV1bY2hdPVtdKSx0aGF0Ll91c2VySGFuZGxlcnMuY2hhbm5lbFt0eXBlXVtjaF0ucHVzaChsaXN0ZW5lcil9KX1yZXR1cm4gdGhpc30sSW5wdXQucHJvdG90eXBlLmhhc0xpc3RlbmVyPWZ1bmN0aW9uKHR5cGUsY2hhbm5lbCxsaXN0ZW5lcil7dmFyIHRoYXQ9dGhpcztpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBsaXN0ZW5lcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlICdsaXN0ZW5lcicgcGFyYW1ldGVyIG11c3QgYmUgYSBmdW5jdGlvbi5cIik7aWYodm9pZCAwPT09Y2hhbm5lbCYmKGNoYW5uZWw9XCJhbGxcIiksY2hhbm5lbC5jb25zdHJ1Y3RvciE9PUFycmF5JiYoY2hhbm5lbD1bY2hhbm5lbF0pLHZvaWQgMCE9PXdtLk1JRElfU1lTVEVNX01FU1NBR0VTW3R5cGVdKXtmb3IodmFyIG89MDtvPHRoaXMuX3VzZXJIYW5kbGVycy5zeXN0ZW1bdHlwZV0ubGVuZ3RoO28rKylpZih0aGlzLl91c2VySGFuZGxlcnMuc3lzdGVtW3R5cGVdW29dPT09bGlzdGVuZXIpcmV0dXJuITB9ZWxzZSBpZih2b2lkIDAhPT13bS5NSURJX0NIQU5ORUxfTUVTU0FHRVNbdHlwZV0pe2lmKC0xPGNoYW5uZWwuaW5kZXhPZihcImFsbFwiKSl7Y2hhbm5lbD1bXTtmb3IodmFyIGo9MTtqPD0xNjtqKyspY2hhbm5lbC5wdXNoKGopfXJldHVybiEhdGhpcy5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV0mJmNoYW5uZWwuZXZlcnkoZnVuY3Rpb24oY2hOdW0pe3ZhciBsaXN0ZW5lcnM9dGhhdC5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV1bY2hOdW1dO3JldHVybiBsaXN0ZW5lcnMmJi0xPGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKX0pfXJldHVybiExfSxJbnB1dC5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odHlwZSxjaGFubmVsLGxpc3RlbmVyKXt2YXIgdGhhdD10aGlzO2lmKHZvaWQgMCE9PWxpc3RlbmVyJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBsaXN0ZW5lcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlICdsaXN0ZW5lcicgcGFyYW1ldGVyIG11c3QgYmUgYSBmdW5jdGlvbi5cIik7aWYodm9pZCAwPT09Y2hhbm5lbCYmKGNoYW5uZWw9XCJhbGxcIiksY2hhbm5lbC5jb25zdHJ1Y3RvciE9PUFycmF5JiYoY2hhbm5lbD1bY2hhbm5lbF0pLHZvaWQgMCE9PXdtLk1JRElfU1lTVEVNX01FU1NBR0VTW3R5cGVdKWlmKHZvaWQgMD09PWxpc3RlbmVyKXRoaXMuX3VzZXJIYW5kbGVycy5zeXN0ZW1bdHlwZV09W107ZWxzZSBmb3IodmFyIG89MDtvPHRoaXMuX3VzZXJIYW5kbGVycy5zeXN0ZW1bdHlwZV0ubGVuZ3RoO28rKyl0aGlzLl91c2VySGFuZGxlcnMuc3lzdGVtW3R5cGVdW29dPT09bGlzdGVuZXImJnRoaXMuX3VzZXJIYW5kbGVycy5zeXN0ZW1bdHlwZV0uc3BsaWNlKG8sMSk7ZWxzZSBpZih2b2lkIDAhPT13bS5NSURJX0NIQU5ORUxfTUVTU0FHRVNbdHlwZV0pe2lmKC0xPGNoYW5uZWwuaW5kZXhPZihcImFsbFwiKSl7Y2hhbm5lbD1bXTtmb3IodmFyIGo9MTtqPD0xNjtqKyspY2hhbm5lbC5wdXNoKGopfWlmKCF0aGlzLl91c2VySGFuZGxlcnMuY2hhbm5lbFt0eXBlXSlyZXR1cm4gdGhpcztjaGFubmVsLmZvckVhY2goZnVuY3Rpb24oY2hOdW0pe3ZhciBsaXN0ZW5lcnM9dGhhdC5fdXNlckhhbmRsZXJzLmNoYW5uZWxbdHlwZV1bY2hOdW1dO2lmKGxpc3RlbmVycylpZih2b2lkIDA9PT1saXN0ZW5lcil0aGF0Ll91c2VySGFuZGxlcnMuY2hhbm5lbFt0eXBlXVtjaE51bV09W107ZWxzZSBmb3IodmFyIGw9MDtsPGxpc3RlbmVycy5sZW5ndGg7bCsrKWxpc3RlbmVyc1tsXT09PWxpc3RlbmVyJiZsaXN0ZW5lcnMuc3BsaWNlKGwsMSl9KX1lbHNle2lmKHZvaWQgMCE9PXR5cGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBzcGVjaWZpZWQgZXZlbnQgdHlwZSBpcyBub3Qgc3VwcG9ydGVkLlwiKTt0aGlzLl9pbml0aWFsaXplVXNlckhhbmRsZXJzKCl9cmV0dXJuIHRoaXN9LElucHV0LnByb3RvdHlwZS5faW5pdGlhbGl6ZVVzZXJIYW5kbGVycz1mdW5jdGlvbigpe2Zvcih2YXIgcHJvcDEgaW4gd20uTUlESV9DSEFOTkVMX01FU1NBR0VTKXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5oYXNPd25Qcm9wZXJ0eShwcm9wMSkmJih0aGlzLl91c2VySGFuZGxlcnMuY2hhbm5lbFtwcm9wMV09e30pO2Zvcih2YXIgcHJvcDIgaW4gd20uTUlESV9TWVNURU1fTUVTU0FHRVMpd20uTUlESV9TWVNURU1fTUVTU0FHRVMuaGFzT3duUHJvcGVydHkocHJvcDIpJiYodGhpcy5fdXNlckhhbmRsZXJzLnN5c3RlbVtwcm9wMl09W10pfSxJbnB1dC5wcm90b3R5cGUuX29uTWlkaU1lc3NhZ2U9ZnVuY3Rpb24oZSl7aWYoMDx0aGlzLl91c2VySGFuZGxlcnMuc3lzdGVtLm1pZGltZXNzYWdlLmxlbmd0aCl7dmFyIGV2ZW50PXt0YXJnZXQ6dGhpcyxkYXRhOmUuZGF0YSx0aW1lc3RhbXA6ZS50aW1lU3RhbXAsdHlwZTpcIm1pZGltZXNzYWdlXCJ9O3RoaXMuX3VzZXJIYW5kbGVycy5zeXN0ZW0ubWlkaW1lc3NhZ2UuZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjayl7Y2FsbGJhY2soZXZlbnQpfSl9ZS5kYXRhWzBdPDI0MD8odGhpcy5fcGFyc2VDaGFubmVsRXZlbnQoZSksdGhpcy5fcGFyc2VOcnBuRXZlbnQoZSkpOmUuZGF0YVswXTw9MjU1JiZ0aGlzLl9wYXJzZVN5c3RlbUV2ZW50KGUpfSxJbnB1dC5wcm90b3R5cGUuX3BhcnNlTnJwbkV2ZW50PWZ1bmN0aW9uKGUpe3ZhciBkYXRhMSxkYXRhMixjb21tYW5kPWUuZGF0YVswXT4+NCxjaGFubmVsQnVmZmVySW5kZXg9MTUmZS5kYXRhWzBdLGNoYW5uZWw9MStjaGFubmVsQnVmZmVySW5kZXg7aWYoMTxlLmRhdGEubGVuZ3RoJiYoZGF0YTE9ZS5kYXRhWzFdLGRhdGEyPTI8ZS5kYXRhLmxlbmd0aD9lLmRhdGFbMl06dm9pZCAwKSx3bS5ucnBuRXZlbnRzRW5hYmxlZCYmY29tbWFuZD09PXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5jb250cm9sY2hhbmdlJiYoZGF0YTE+PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5pbmNyZW1lbnQmJmRhdGExPD13bS5NSURJX05SUE5fTUVTU0FHRVMucGFyYW1tc2J8fGRhdGExPT09d20uTUlESV9OUlBOX01FU1NBR0VTLmVudHJ5bXNifHxkYXRhMT09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5lbnRyeWxzYikpe3ZhciBjY0V2ZW50PXt0YXJnZXQ6dGhpcyx0eXBlOlwiY29udHJvbGNoYW5nZVwiLGRhdGE6ZS5kYXRhLHRpbWVzdGFtcDplLnRpbWVTdGFtcCxjaGFubmVsOmNoYW5uZWwsY29udHJvbGxlcjp7bnVtYmVyOmRhdGExLG5hbWU6dGhpcy5nZXRDY05hbWVCeU51bWJlcihkYXRhMSl9LHZhbHVlOmRhdGEyfTtpZihjY0V2ZW50LmNvbnRyb2xsZXIubnVtYmVyPT09d20uTUlESV9OUlBOX01FU1NBR0VTLnBhcmFtbXNiJiZjY0V2ZW50LnZhbHVlIT13bS5NSURJX05SUE5fTUVTU0FHRVMubnVsbGFjdGl2ZXBhcmFtZXRlcil3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdPVtdLHdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF1bMF09Y2NFdmVudDtlbHNlIGlmKDE9PT13bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdLmxlbmd0aCYmY2NFdmVudC5jb250cm9sbGVyLm51bWJlcj09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5wYXJhbWxzYil3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdLnB1c2goY2NFdmVudCk7ZWxzZSBpZigyIT09d20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XS5sZW5ndGh8fGNjRXZlbnQuY29udHJvbGxlci5udW1iZXIhPT13bS5NSURJX05SUE5fTUVTU0FHRVMuaW5jcmVtZW50JiZjY0V2ZW50LmNvbnRyb2xsZXIubnVtYmVyIT09d20uTUlESV9OUlBOX01FU1NBR0VTLmRlY3JlbWVudCYmY2NFdmVudC5jb250cm9sbGVyLm51bWJlciE9PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5lbnRyeW1zYilpZigzPT09d20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XS5sZW5ndGgmJndtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF1bMl0ubnVtYmVyPT09d20uTUlESV9OUlBOX01FU1NBR0VTLmVudHJ5bXNiJiZjY0V2ZW50LmNvbnRyb2xsZXIubnVtYmVyPT09d20uTUlESV9OUlBOX01FU1NBR0VTLmVudHJ5bHNiKXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ucHVzaChjY0V2ZW50KTtlbHNlIGlmKDM8PXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ubGVuZ3RoJiZ3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdLmxlbmd0aDw9NCYmY2NFdmVudC5jb250cm9sbGVyLm51bWJlcj09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5wYXJhbW1zYiYmY2NFdmVudC52YWx1ZT09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5udWxsYWN0aXZlcGFyYW1ldGVyKXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ucHVzaChjY0V2ZW50KTtlbHNlIGlmKDQ8PXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ubGVuZ3RoJiZ3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdLmxlbmd0aDw9NSYmY2NFdmVudC5jb250cm9sbGVyLm51bWJlcj09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5wYXJhbWxzYiYmY2NFdmVudC52YWx1ZT09PXdtLk1JRElfTlJQTl9NRVNTQUdFUy5udWxsYWN0aXZlcGFyYW1ldGVyKXt3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdLnB1c2goY2NFdmVudCk7dmFyIHJhd0RhdGE9W107d20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XS5mb3JFYWNoKGZ1bmN0aW9uKGV2KXtyYXdEYXRhLnB1c2goZXYuZGF0YSl9KTt2YXIgbnJwbk51bWJlcj13bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdWzBdLnZhbHVlPDw3fHdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF1bMV0udmFsdWUsbnJwblZhbHVlPXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF1bMl0udmFsdWU7Nj09PXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ubGVuZ3RoJiYobnJwblZhbHVlPXdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF1bMl0udmFsdWU8PDd8d20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XVszXS52YWx1ZSk7dmFyIG5ycG5Db250cm9sbGVyVHlwZT1cIlwiO3N3aXRjaCh3bS5fbnJwbkJ1ZmZlcltjaGFubmVsQnVmZmVySW5kZXhdWzJdLmNvbnRyb2xsZXIubnVtYmVyKXtjYXNlIHdtLk1JRElfTlJQTl9NRVNTQUdFUy5lbnRyeW1zYjpucnBuQ29udHJvbGxlclR5cGU9d20uX25ycG5UeXBlc1swXTticmVhaztjYXNlIHdtLk1JRElfTlJQTl9NRVNTQUdFUy5pbmNyZW1lbnQ6bnJwbkNvbnRyb2xsZXJUeXBlPXdtLl9ucnBuVHlwZXNbMV07YnJlYWs7Y2FzZSB3bS5NSURJX05SUE5fTUVTU0FHRVMuZGVjcmVtZW50Om5ycG5Db250cm9sbGVyVHlwZT13bS5fbnJwblR5cGVzWzJdO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVGhlIE5QUk4gdHlwZSB3YXMgdW5pZGVudGlmaWFibGUuXCIpfXZhciBucnBuRXZlbnQ9e3RpbWVzdGFtcDpjY0V2ZW50LnRpbWVzdGFtcCxjaGFubmVsOmNjRXZlbnQuY2hhbm5lbCx0eXBlOlwibnJwblwiLGRhdGE6cmF3RGF0YSxjb250cm9sbGVyOntudW1iZXI6bnJwbk51bWJlcix0eXBlOm5ycG5Db250cm9sbGVyVHlwZSxuYW1lOlwiTm9uLVJlZ2lzdGVyZWQgUGFyYW1ldGVyIFwiK25ycG5OdW1iZXJ9LHZhbHVlOm5ycG5WYWx1ZX07d20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XT1bXSx0aGlzLl91c2VySGFuZGxlcnMuY2hhbm5lbFtucnBuRXZlbnQudHlwZV0mJnRoaXMuX3VzZXJIYW5kbGVycy5jaGFubmVsW25ycG5FdmVudC50eXBlXVtucnBuRXZlbnQuY2hhbm5lbF0mJnRoaXMuX3VzZXJIYW5kbGVycy5jaGFubmVsW25ycG5FdmVudC50eXBlXVtucnBuRXZlbnQuY2hhbm5lbF0uZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjayl7Y2FsbGJhY2sobnJwbkV2ZW50KX0pfWVsc2Ugd20uX25ycG5CdWZmZXJbY2hhbm5lbEJ1ZmZlckluZGV4XT1bXTtlbHNlIHdtLl9ucnBuQnVmZmVyW2NoYW5uZWxCdWZmZXJJbmRleF0ucHVzaChjY0V2ZW50KX19LElucHV0LnByb3RvdHlwZS5fcGFyc2VDaGFubmVsRXZlbnQ9ZnVuY3Rpb24oZSl7dmFyIGRhdGExLGRhdGEyLGNvbW1hbmQ9ZS5kYXRhWzBdPj40LGNoYW5uZWw9MSsoMTUmZS5kYXRhWzBdKTsxPGUuZGF0YS5sZW5ndGgmJihkYXRhMT1lLmRhdGFbMV0sZGF0YTI9MjxlLmRhdGEubGVuZ3RoP2UuZGF0YVsyXTp2b2lkIDApO3ZhciBldmVudD17dGFyZ2V0OnRoaXMsZGF0YTplLmRhdGEsdGltZXN0YW1wOmUudGltZVN0YW1wLGNoYW5uZWw6Y2hhbm5lbH07Y29tbWFuZD09PXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5ub3Rlb2ZmfHxjb21tYW5kPT09d20uTUlESV9DSEFOTkVMX01FU1NBR0VTLm5vdGVvbiYmMD09PWRhdGEyPyhldmVudC50eXBlPVwibm90ZW9mZlwiLGV2ZW50Lm5vdGU9e251bWJlcjpkYXRhMSxuYW1lOndtLl9ub3Rlc1tkYXRhMSUxMl0sb2N0YXZlOndtLmdldE9jdGF2ZShkYXRhMSl9LGV2ZW50LnZlbG9jaXR5PWRhdGEyLzEyNyxldmVudC5yYXdWZWxvY2l0eT1kYXRhMik6Y29tbWFuZD09PXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5ub3Rlb24/KGV2ZW50LnR5cGU9XCJub3Rlb25cIixldmVudC5ub3RlPXtudW1iZXI6ZGF0YTEsbmFtZTp3bS5fbm90ZXNbZGF0YTElMTJdLG9jdGF2ZTp3bS5nZXRPY3RhdmUoZGF0YTEpfSxldmVudC52ZWxvY2l0eT1kYXRhMi8xMjcsZXZlbnQucmF3VmVsb2NpdHk9ZGF0YTIpOmNvbW1hbmQ9PT13bS5NSURJX0NIQU5ORUxfTUVTU0FHRVMua2V5YWZ0ZXJ0b3VjaD8oZXZlbnQudHlwZT1cImtleWFmdGVydG91Y2hcIixldmVudC5ub3RlPXtudW1iZXI6ZGF0YTEsbmFtZTp3bS5fbm90ZXNbZGF0YTElMTJdLG9jdGF2ZTp3bS5nZXRPY3RhdmUoZGF0YTEpfSxldmVudC52YWx1ZT1kYXRhMi8xMjcpOmNvbW1hbmQ9PT13bS5NSURJX0NIQU5ORUxfTUVTU0FHRVMuY29udHJvbGNoYW5nZSYmMDw9ZGF0YTEmJmRhdGExPD0xMTk/KGV2ZW50LnR5cGU9XCJjb250cm9sY2hhbmdlXCIsZXZlbnQuY29udHJvbGxlcj17bnVtYmVyOmRhdGExLG5hbWU6dGhpcy5nZXRDY05hbWVCeU51bWJlcihkYXRhMSl9LGV2ZW50LnZhbHVlPWRhdGEyKTpjb21tYW5kPT09d20uTUlESV9DSEFOTkVMX01FU1NBR0VTLmNoYW5uZWxtb2RlJiYxMjA8PWRhdGExJiZkYXRhMTw9MTI3PyhldmVudC50eXBlPVwiY2hhbm5lbG1vZGVcIixldmVudC5jb250cm9sbGVyPXtudW1iZXI6ZGF0YTEsbmFtZTp0aGlzLmdldENoYW5uZWxNb2RlQnlOdW1iZXIoZGF0YTEpfSxldmVudC52YWx1ZT1kYXRhMik6Y29tbWFuZD09PXdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5wcm9ncmFtY2hhbmdlPyhldmVudC50eXBlPVwicHJvZ3JhbWNoYW5nZVwiLGV2ZW50LnZhbHVlPWRhdGExKTpjb21tYW5kPT09d20uTUlESV9DSEFOTkVMX01FU1NBR0VTLmNoYW5uZWxhZnRlcnRvdWNoPyhldmVudC50eXBlPVwiY2hhbm5lbGFmdGVydG91Y2hcIixldmVudC52YWx1ZT1kYXRhMS8xMjcpOmNvbW1hbmQ9PT13bS5NSURJX0NIQU5ORUxfTUVTU0FHRVMucGl0Y2hiZW5kPyhldmVudC50eXBlPVwicGl0Y2hiZW5kXCIsZXZlbnQudmFsdWU9KChkYXRhMjw8NykrZGF0YTEtODE5MikvODE5Mik6ZXZlbnQudHlwZT1cInVua25vd25jaGFubmVsbWVzc2FnZVwiLHRoaXMuX3VzZXJIYW5kbGVycy5jaGFubmVsW2V2ZW50LnR5cGVdJiZ0aGlzLl91c2VySGFuZGxlcnMuY2hhbm5lbFtldmVudC50eXBlXVtjaGFubmVsXSYmdGhpcy5fdXNlckhhbmRsZXJzLmNoYW5uZWxbZXZlbnQudHlwZV1bY2hhbm5lbF0uZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjayl7Y2FsbGJhY2soZXZlbnQpfSl9LElucHV0LnByb3RvdHlwZS5nZXRDY05hbWVCeU51bWJlcj1mdW5jdGlvbihudW1iZXIpe2lmKCEoMDw9KG51bWJlcj1NYXRoLmZsb29yKG51bWJlcikpJiZudW1iZXI8PTExOSkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgY29udHJvbCBjaGFuZ2UgbnVtYmVyIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMTkuXCIpO2Zvcih2YXIgY2MgaW4gd20uTUlESV9DT05UUk9MX0NIQU5HRV9NRVNTQUdFUylpZih3bS5NSURJX0NPTlRST0xfQ0hBTkdFX01FU1NBR0VTLmhhc093blByb3BlcnR5KGNjKSYmbnVtYmVyPT09d20uTUlESV9DT05UUk9MX0NIQU5HRV9NRVNTQUdFU1tjY10pcmV0dXJuIGNjfSxJbnB1dC5wcm90b3R5cGUuZ2V0Q2hhbm5lbE1vZGVCeU51bWJlcj1mdW5jdGlvbihudW1iZXIpe2lmKCEoMTIwPD0obnVtYmVyPU1hdGguZmxvb3IobnVtYmVyKSkmJnN0YXR1czw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBjb250cm9sIGNoYW5nZSBudW1iZXIgbXVzdCBiZSBiZXR3ZWVuIDEyMCBhbmQgMTI3LlwiKTtmb3IodmFyIGNtIGluIHdtLk1JRElfQ0hBTk5FTF9NT0RFX01FU1NBR0VTKWlmKHdtLk1JRElfQ0hBTk5FTF9NT0RFX01FU1NBR0VTLmhhc093blByb3BlcnR5KGNtKSYmbnVtYmVyPT09d20uTUlESV9DSEFOTkVMX01PREVfTUVTU0FHRVNbY21dKXJldHVybiBjbX0sSW5wdXQucHJvdG90eXBlLl9wYXJzZVN5c3RlbUV2ZW50PWZ1bmN0aW9uKGUpe3ZhciBjb21tYW5kPWUuZGF0YVswXSxldmVudD17dGFyZ2V0OnRoaXMsZGF0YTplLmRhdGEsdGltZXN0YW1wOmUudGltZVN0YW1wfTtjb21tYW5kPT09d20uTUlESV9TWVNURU1fTUVTU0FHRVMuc3lzZXg/ZXZlbnQudHlwZT1cInN5c2V4XCI6Y29tbWFuZD09PXdtLk1JRElfU1lTVEVNX01FU1NBR0VTLnRpbWVjb2RlP2V2ZW50LnR5cGU9XCJ0aW1lY29kZVwiOmNvbW1hbmQ9PT13bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5zb25ncG9zaXRpb24/ZXZlbnQudHlwZT1cInNvbmdwb3NpdGlvblwiOmNvbW1hbmQ9PT13bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5zb25nc2VsZWN0PyhldmVudC50eXBlPVwic29uZ3NlbGVjdFwiLGV2ZW50LnNvbmc9ZS5kYXRhWzFdKTpjb21tYW5kPT09d20uTUlESV9TWVNURU1fTUVTU0FHRVMudHVuaW5ncmVxdWVzdD9ldmVudC50eXBlPVwidHVuaW5ncmVxdWVzdFwiOmNvbW1hbmQ9PT13bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5jbG9jaz9ldmVudC50eXBlPVwiY2xvY2tcIjpjb21tYW5kPT09d20uTUlESV9TWVNURU1fTUVTU0FHRVMuc3RhcnQ/ZXZlbnQudHlwZT1cInN0YXJ0XCI6Y29tbWFuZD09PXdtLk1JRElfU1lTVEVNX01FU1NBR0VTLmNvbnRpbnVlP2V2ZW50LnR5cGU9XCJjb250aW51ZVwiOmNvbW1hbmQ9PT13bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5zdG9wP2V2ZW50LnR5cGU9XCJzdG9wXCI6Y29tbWFuZD09PXdtLk1JRElfU1lTVEVNX01FU1NBR0VTLmFjdGl2ZXNlbnNpbmc/ZXZlbnQudHlwZT1cImFjdGl2ZXNlbnNpbmdcIjpjb21tYW5kPT09d20uTUlESV9TWVNURU1fTUVTU0FHRVMucmVzZXQ/ZXZlbnQudHlwZT1cInJlc2V0XCI6ZXZlbnQudHlwZT1cInVua25vd25zeXN0ZW1tZXNzYWdlXCIsdGhpcy5fdXNlckhhbmRsZXJzLnN5c3RlbVtldmVudC50eXBlXSYmdGhpcy5fdXNlckhhbmRsZXJzLnN5c3RlbVtldmVudC50eXBlXS5mb3JFYWNoKGZ1bmN0aW9uKGNhbGxiYWNrKXtjYWxsYmFjayhldmVudCl9KX0sT3V0cHV0LnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKHN0YXR1cyxkYXRhLHRpbWVzdGFtcCl7aWYoISgxMjg8PXN0YXR1cyYmc3RhdHVzPD0yNTUpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiVGhlIHN0YXR1cyBieXRlIG11c3QgYmUgYW4gaW50ZWdlciBiZXR3ZWVuIDEyOCAoMHg4MCkgYW5kIDI1NSAoMHhGRikuXCIpO3ZvaWQgMD09PWRhdGEmJihkYXRhPVtdKSxBcnJheS5pc0FycmF5KGRhdGEpfHwoZGF0YT1bZGF0YV0pO3ZhciBtZXNzYWdlPVtdO3JldHVybiBkYXRhLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7dmFyIHBhcnNlZD1NYXRoLmZsb29yKGl0ZW0pO2lmKCEoMDw9cGFyc2VkJiZwYXJzZWQ8PTI1NSkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJEYXRhIGJ5dGVzIG11c3QgYmUgaW50ZWdlcnMgYmV0d2VlbiAwICgweDAwKSBhbmQgMjU1ICgweEZGKS5cIik7bWVzc2FnZS5wdXNoKHBhcnNlZCl9KSx0aGlzLl9taWRpT3V0cHV0LnNlbmQoW3N0YXR1c10uY29uY2F0KG1lc3NhZ2UpLHBhcnNlRmxvYXQodGltZXN0YW1wKXx8MCksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kU3lzZXg9ZnVuY3Rpb24obWFudWZhY3R1cmVyLGRhdGEsb3B0aW9ucyl7aWYoIXdtLnN5c2V4RW5hYmxlZCl0aHJvdyBuZXcgRXJyb3IoXCJTeXNleCBtZXNzYWdlIHN1cHBvcnQgbXVzdCBmaXJzdCBiZSBhY3RpdmF0ZWQuXCIpO3JldHVybiBvcHRpb25zPW9wdGlvbnN8fHt9LG1hbnVmYWN0dXJlcj1bXS5jb25jYXQobWFudWZhY3R1cmVyKSxkYXRhLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7aWYoaXRlbTwwfHwxMjc8aXRlbSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBkYXRhIGJ5dGVzIG9mIGEgc3lzZXggbWVzc2FnZSBtdXN0IGJlIGludGVnZXJzIGJldHdlZW4gMCAoMHgwMCkgYW5kIDEyNyAoMHg3RikuXCIpfSksZGF0YT1tYW51ZmFjdHVyZXIuY29uY2F0KGRhdGEsd20uTUlESV9TWVNURU1fTUVTU0FHRVMuc3lzZXhlbmQpLHRoaXMuc2VuZCh3bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5zeXNleCxkYXRhLHRoaXMuX3BhcnNlVGltZVBhcmFtZXRlcihvcHRpb25zLnRpbWUpKSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLnNlbmRUaW1lY29kZVF1YXJ0ZXJGcmFtZT1mdW5jdGlvbih2YWx1ZSxvcHRpb25zKXtyZXR1cm4gb3B0aW9ucz1vcHRpb25zfHx7fSx0aGlzLnNlbmQod20uTUlESV9TWVNURU1fTUVTU0FHRVMudGltZWNvZGUsdmFsdWUsdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZFNvbmdQb3NpdGlvbj1mdW5jdGlvbih2YWx1ZSxvcHRpb25zKXtvcHRpb25zPW9wdGlvbnN8fHt9O3ZhciBtc2I9KHZhbHVlPU1hdGguZmxvb3IodmFsdWUpfHwwKT4+NyYxMjcsbHNiPTEyNyZ2YWx1ZTtyZXR1cm4gdGhpcy5zZW5kKHdtLk1JRElfU1lTVEVNX01FU1NBR0VTLnNvbmdwb3NpdGlvbixbbXNiLGxzYl0sdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZFNvbmdTZWxlY3Q9ZnVuY3Rpb24odmFsdWUsb3B0aW9ucyl7aWYob3B0aW9ucz1vcHRpb25zfHx7fSwhKDA8PSh2YWx1ZT1NYXRoLmZsb29yKHZhbHVlKSkmJnZhbHVlPD0xMjcpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiVGhlIHNvbmcgbnVtYmVyIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjcuXCIpO3JldHVybiB0aGlzLnNlbmQod20uTUlESV9TWVNURU1fTUVTU0FHRVMuc29uZ3NlbGVjdCxbdmFsdWVdLHRoaXMuX3BhcnNlVGltZVBhcmFtZXRlcihvcHRpb25zLnRpbWUpKSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLnNlbmRUdW5pbmdSZXF1ZXN0PWZ1bmN0aW9uKG9wdGlvbnMpe3JldHVybiBvcHRpb25zPW9wdGlvbnN8fHt9LHRoaXMuc2VuZCh3bS5NSURJX1NZU1RFTV9NRVNTQUdFUy50dW5pbmdyZXF1ZXN0LHZvaWQgMCx0aGlzLl9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kQ2xvY2s9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIG9wdGlvbnM9b3B0aW9uc3x8e30sdGhpcy5zZW5kKHdtLk1JRElfU1lTVEVNX01FU1NBR0VTLmNsb2NrLHZvaWQgMCx0aGlzLl9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kU3RhcnQ9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIG9wdGlvbnM9b3B0aW9uc3x8e30sdGhpcy5zZW5kKHdtLk1JRElfU1lTVEVNX01FU1NBR0VTLnN0YXJ0LHZvaWQgMCx0aGlzLl9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kQ29udGludWU9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIG9wdGlvbnM9b3B0aW9uc3x8e30sdGhpcy5zZW5kKHdtLk1JRElfU1lTVEVNX01FU1NBR0VTLmNvbnRpbnVlLHZvaWQgMCx0aGlzLl9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kU3RvcD1mdW5jdGlvbihvcHRpb25zKXtyZXR1cm4gb3B0aW9ucz1vcHRpb25zfHx7fSx0aGlzLnNlbmQod20uTUlESV9TWVNURU1fTUVTU0FHRVMuc3RvcCx2b2lkIDAsdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZEFjdGl2ZVNlbnNpbmc9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIG9wdGlvbnM9b3B0aW9uc3x8e30sdGhpcy5zZW5kKHdtLk1JRElfU1lTVEVNX01FU1NBR0VTLmFjdGl2ZXNlbnNpbmcsW10sdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZFJlc2V0PWZ1bmN0aW9uKG9wdGlvbnMpe3JldHVybiBvcHRpb25zPW9wdGlvbnN8fHt9LHRoaXMuc2VuZCh3bS5NSURJX1NZU1RFTV9NRVNTQUdFUy5yZXNldCx2b2lkIDAsdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc3RvcE5vdGU9ZnVuY3Rpb24obm90ZSxjaGFubmVsLG9wdGlvbnMpe2lmKFwiYWxsXCI9PT1ub3RlKXJldHVybiB0aGlzLnNlbmRDaGFubmVsTW9kZShcImFsbG5vdGVzb2ZmXCIsMCxjaGFubmVsLG9wdGlvbnMpO3ZhciBuVmVsb2NpdHk9NjQ7cmV0dXJuKG9wdGlvbnM9b3B0aW9uc3x8e30pLnJhd1ZlbG9jaXR5PyFpc05hTihvcHRpb25zLnZlbG9jaXR5KSYmMDw9b3B0aW9ucy52ZWxvY2l0eSYmb3B0aW9ucy52ZWxvY2l0eTw9MTI3JiYoblZlbG9jaXR5PW9wdGlvbnMudmVsb2NpdHkpOiFpc05hTihvcHRpb25zLnZlbG9jaXR5KSYmMDw9b3B0aW9ucy52ZWxvY2l0eSYmb3B0aW9ucy52ZWxvY2l0eTw9MSYmKG5WZWxvY2l0eT0xMjcqb3B0aW9ucy52ZWxvY2l0eSksdGhpcy5fY29udmVydE5vdGVUb0FycmF5KG5vdGUpLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7d20udG9NSURJQ2hhbm5lbHMoY2hhbm5lbCkuZm9yRWFjaChmdW5jdGlvbihjaCl7dGhpcy5zZW5kKCh3bS5NSURJX0NIQU5ORUxfTUVTU0FHRVMubm90ZW9mZjw8NCkrKGNoLTEpLFtpdGVtLE1hdGgucm91bmQoblZlbG9jaXR5KV0sdGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpfS5iaW5kKHRoaXMpKX0uYmluZCh0aGlzKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5wbGF5Tm90ZT1mdW5jdGlvbihub3RlLGNoYW5uZWwsb3B0aW9ucyl7dmFyIHRpbWUsblZlbG9jaXR5PTY0O2lmKChvcHRpb25zPW9wdGlvbnN8fHt9KS5yYXdWZWxvY2l0eT8haXNOYU4ob3B0aW9ucy52ZWxvY2l0eSkmJjA8PW9wdGlvbnMudmVsb2NpdHkmJm9wdGlvbnMudmVsb2NpdHk8PTEyNyYmKG5WZWxvY2l0eT1vcHRpb25zLnZlbG9jaXR5KTohaXNOYU4ob3B0aW9ucy52ZWxvY2l0eSkmJjA8PW9wdGlvbnMudmVsb2NpdHkmJm9wdGlvbnMudmVsb2NpdHk8PTEmJihuVmVsb2NpdHk9MTI3Km9wdGlvbnMudmVsb2NpdHkpLHRpbWU9dGhpcy5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSksdGhpcy5fY29udmVydE5vdGVUb0FycmF5KG5vdGUpLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7d20udG9NSURJQ2hhbm5lbHMoY2hhbm5lbCkuZm9yRWFjaChmdW5jdGlvbihjaCl7dGhpcy5zZW5kKCh3bS5NSURJX0NIQU5ORUxfTUVTU0FHRVMubm90ZW9uPDw0KSsoY2gtMSksW2l0ZW0sTWF0aC5yb3VuZChuVmVsb2NpdHkpXSx0aW1lKX0uYmluZCh0aGlzKSl9LmJpbmQodGhpcykpLCFpc05hTihvcHRpb25zLmR1cmF0aW9uKSl7b3B0aW9ucy5kdXJhdGlvbjw9MCYmKG9wdGlvbnMuZHVyYXRpb249MCk7dmFyIG5SZWxlYXNlPTY0O29wdGlvbnMucmF3VmVsb2NpdHk/IWlzTmFOKG9wdGlvbnMucmVsZWFzZSkmJjA8PW9wdGlvbnMucmVsZWFzZSYmb3B0aW9ucy5yZWxlYXNlPD0xMjcmJihuUmVsZWFzZT1vcHRpb25zLnJlbGVhc2UpOiFpc05hTihvcHRpb25zLnJlbGVhc2UpJiYwPD1vcHRpb25zLnJlbGVhc2UmJm9wdGlvbnMucmVsZWFzZTw9MSYmKG5SZWxlYXNlPTEyNypvcHRpb25zLnJlbGVhc2UpLHRoaXMuX2NvbnZlcnROb3RlVG9BcnJheShub3RlKS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe3dtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oY2gpe3RoaXMuc2VuZCgod20uTUlESV9DSEFOTkVMX01FU1NBR0VTLm5vdGVvZmY8PDQpKyhjaC0xKSxbaXRlbSxNYXRoLnJvdW5kKG5SZWxlYXNlKV0sKHRpbWV8fHdtLnRpbWUpK29wdGlvbnMuZHVyYXRpb24pfS5iaW5kKHRoaXMpKX0uYmluZCh0aGlzKSl9cmV0dXJuIHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZEtleUFmdGVydG91Y2g9ZnVuY3Rpb24obm90ZSxjaGFubmVsLHByZXNzdXJlLG9wdGlvbnMpe3ZhciB0aGF0PXRoaXM7aWYob3B0aW9ucz1vcHRpb25zfHx7fSxjaGFubmVsPDF8fDE2PGNoYW5uZWwpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgY2hhbm5lbCBtdXN0IGJlIGJldHdlZW4gMSBhbmQgMTYuXCIpOyhpc05hTihwcmVzc3VyZSl8fHByZXNzdXJlPDB8fDE8cHJlc3N1cmUpJiYocHJlc3N1cmU9LjUpO3ZhciBuUHJlc3N1cmU9TWF0aC5yb3VuZCgxMjcqcHJlc3N1cmUpO3JldHVybiB0aGlzLl9jb252ZXJ0Tm90ZVRvQXJyYXkobm90ZSkuZm9yRWFjaChmdW5jdGlvbihpdGVtKXt3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKGNoKXt0aGF0LnNlbmQoKHdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5rZXlhZnRlcnRvdWNoPDw0KSsoY2gtMSksW2l0ZW0sblByZXNzdXJlXSx0aGF0Ll9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSl9KX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZENvbnRyb2xDaGFuZ2U9ZnVuY3Rpb24oY29udHJvbGxlcix2YWx1ZSxjaGFubmVsLG9wdGlvbnMpe2lmKG9wdGlvbnM9b3B0aW9uc3x8e30sXCJzdHJpbmdcIj09dHlwZW9mIGNvbnRyb2xsZXIpe2lmKHZvaWQgMD09PShjb250cm9sbGVyPXdtLk1JRElfQ09OVFJPTF9DSEFOR0VfTUVTU0FHRVNbY29udHJvbGxlcl0pKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGNvbnRyb2xsZXIgbmFtZS5cIil9ZWxzZSBpZighKDA8PShjb250cm9sbGVyPU1hdGguZmxvb3IoY29udHJvbGxlcikpJiZjb250cm9sbGVyPD0xMTkpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQ29udHJvbGxlciBudW1iZXJzIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMTkuXCIpO2lmKCEoMDw9KHZhbHVlPU1hdGguZmxvb3IodmFsdWUpfHwwKSYmdmFsdWU8PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJDb250cm9sbGVyIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjcuXCIpO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKGNoKXt0aGlzLnNlbmQoKHdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5jb250cm9sY2hhbmdlPDw0KSsoY2gtMSksW2NvbnRyb2xsZXIsdmFsdWVdLHRoaXMuX3BhcnNlVGltZVBhcmFtZXRlcihvcHRpb25zLnRpbWUpKX0uYmluZCh0aGlzKSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5fc2VsZWN0UmVnaXN0ZXJlZFBhcmFtZXRlcj1mdW5jdGlvbihwYXJhbWV0ZXIsY2hhbm5lbCx0aW1lKXt2YXIgdGhhdD10aGlzO2lmKHBhcmFtZXRlclswXT1NYXRoLmZsb29yKHBhcmFtZXRlclswXSksISgwPD1wYXJhbWV0ZXJbMF0mJnBhcmFtZXRlclswXTw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBjb250cm9sNjUgdmFsdWUgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEyN1wiKTtpZihwYXJhbWV0ZXJbMV09TWF0aC5mbG9vcihwYXJhbWV0ZXJbMV0pLCEoMDw9cGFyYW1ldGVyWzFdJiZwYXJhbWV0ZXJbMV08PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgY29udHJvbDY0IHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0LnNlbmRDb250cm9sQ2hhbmdlKDEwMSxwYXJhbWV0ZXJbMF0sY2hhbm5lbCx7dGltZTp0aW1lfSksdGhhdC5zZW5kQ29udHJvbENoYW5nZSgxMDAscGFyYW1ldGVyWzFdLGNoYW5uZWwse3RpbWU6dGltZX0pfSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5fc2VsZWN0Tm9uUmVnaXN0ZXJlZFBhcmFtZXRlcj1mdW5jdGlvbihwYXJhbWV0ZXIsY2hhbm5lbCx0aW1lKXt2YXIgdGhhdD10aGlzO2lmKHBhcmFtZXRlclswXT1NYXRoLmZsb29yKHBhcmFtZXRlclswXSksISgwPD1wYXJhbWV0ZXJbMF0mJnBhcmFtZXRlclswXTw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBjb250cm9sNjMgdmFsdWUgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEyN1wiKTtpZihwYXJhbWV0ZXJbMV09TWF0aC5mbG9vcihwYXJhbWV0ZXJbMV0pLCEoMDw9cGFyYW1ldGVyWzFdJiZwYXJhbWV0ZXJbMV08PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgY29udHJvbDYyIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0LnNlbmRDb250cm9sQ2hhbmdlKDk5LHBhcmFtZXRlclswXSxjaGFubmVsLHt0aW1lOnRpbWV9KSx0aGF0LnNlbmRDb250cm9sQ2hhbmdlKDk4LHBhcmFtZXRlclsxXSxjaGFubmVsLHt0aW1lOnRpbWV9KX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuX3NldEN1cnJlbnRSZWdpc3RlcmVkUGFyYW1ldGVyPWZ1bmN0aW9uKGRhdGEsY2hhbm5lbCx0aW1lKXt2YXIgdGhhdD10aGlzO2lmKChkYXRhPVtdLmNvbmNhdChkYXRhKSlbMF09TWF0aC5mbG9vcihkYXRhWzBdKSwhKDA8PWRhdGFbMF0mJmRhdGFbMF08PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgbXNiIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0LnNlbmRDb250cm9sQ2hhbmdlKDYsZGF0YVswXSxjaGFubmVsLHt0aW1lOnRpbWV9KX0pLGRhdGFbMV09TWF0aC5mbG9vcihkYXRhWzFdKSwwPD1kYXRhWzFdJiZkYXRhWzFdPD0xMjcmJndtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0LnNlbmRDb250cm9sQ2hhbmdlKDM4LGRhdGFbMV0sY2hhbm5lbCx7dGltZTp0aW1lfSl9KSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLl9kZXNlbGVjdFJlZ2lzdGVyZWRQYXJhbWV0ZXI9ZnVuY3Rpb24oY2hhbm5lbCx0aW1lKXt2YXIgdGhhdD10aGlzO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhhdC5zZW5kQ29udHJvbENoYW5nZSgxMDEsMTI3LGNoYW5uZWwse3RpbWU6dGltZX0pLHRoYXQuc2VuZENvbnRyb2xDaGFuZ2UoMTAwLDEyNyxjaGFubmVsLHt0aW1lOnRpbWV9KX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2V0UmVnaXN0ZXJlZFBhcmFtZXRlcj1mdW5jdGlvbihwYXJhbWV0ZXIsZGF0YSxjaGFubmVsLG9wdGlvbnMpe3ZhciB0aGF0PXRoaXM7aWYob3B0aW9ucz1vcHRpb25zfHx7fSwhQXJyYXkuaXNBcnJheShwYXJhbWV0ZXIpKXtpZighd20uTUlESV9SRUdJU1RFUkVEX1BBUkFNRVRFUltwYXJhbWV0ZXJdKXRocm93IG5ldyBFcnJvcihcIlRoZSBzcGVjaWZpZWQgcGFyYW1ldGVyIGlzIG5vdCBhdmFpbGFibGUuXCIpO3BhcmFtZXRlcj13bS5NSURJX1JFR0lTVEVSRURfUEFSQU1FVEVSW3BhcmFtZXRlcl19cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0Ll9zZWxlY3RSZWdpc3RlcmVkUGFyYW1ldGVyKHBhcmFtZXRlcixjaGFubmVsLG9wdGlvbnMudGltZSksdGhhdC5fc2V0Q3VycmVudFJlZ2lzdGVyZWRQYXJhbWV0ZXIoZGF0YSxjaGFubmVsLG9wdGlvbnMudGltZSksdGhhdC5fZGVzZWxlY3RSZWdpc3RlcmVkUGFyYW1ldGVyKGNoYW5uZWwsb3B0aW9ucy50aW1lKX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2V0Tm9uUmVnaXN0ZXJlZFBhcmFtZXRlcj1mdW5jdGlvbihwYXJhbWV0ZXIsZGF0YSxjaGFubmVsLG9wdGlvbnMpe3ZhciB0aGF0PXRoaXM7aWYob3B0aW9ucz1vcHRpb25zfHx7fSwhKDA8PXBhcmFtZXRlclswXSYmcGFyYW1ldGVyWzBdPD0xMjcmJjA8PXBhcmFtZXRlclsxXSYmcGFyYW1ldGVyWzFdPD0xMjcpKXRocm93IG5ldyBFcnJvcihcIlBvc2l0aW9uIDAgYW5kIDEgb2YgdGhlIDItcG9zaXRpb24gcGFyYW1ldGVyIGFycmF5IG11c3QgYm90aCBiZSBiZXR3ZWVuIDAgYW5kIDEyNy5cIik7cmV0dXJuIGRhdGE9W10uY29uY2F0KGRhdGEpLHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0Ll9zZWxlY3ROb25SZWdpc3RlcmVkUGFyYW1ldGVyKHBhcmFtZXRlcixjaGFubmVsLG9wdGlvbnMudGltZSksdGhhdC5fc2V0Q3VycmVudFJlZ2lzdGVyZWRQYXJhbWV0ZXIoZGF0YSxjaGFubmVsLG9wdGlvbnMudGltZSksdGhhdC5fZGVzZWxlY3RSZWdpc3RlcmVkUGFyYW1ldGVyKGNoYW5uZWwsb3B0aW9ucy50aW1lKX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuaW5jcmVtZW50UmVnaXN0ZXJlZFBhcmFtZXRlcj1mdW5jdGlvbihwYXJhbWV0ZXIsY2hhbm5lbCxvcHRpb25zKXt2YXIgdGhhdD10aGlzO2lmKG9wdGlvbnM9b3B0aW9uc3x8e30sIUFycmF5LmlzQXJyYXkocGFyYW1ldGVyKSl7aWYoIXdtLk1JRElfUkVHSVNURVJFRF9QQVJBTUVURVJbcGFyYW1ldGVyXSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3BlY2lmaWVkIHBhcmFtZXRlciBpcyBub3QgYXZhaWxhYmxlLlwiKTtwYXJhbWV0ZXI9d20uTUlESV9SRUdJU1RFUkVEX1BBUkFNRVRFUltwYXJhbWV0ZXJdfXJldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhhdC5fc2VsZWN0UmVnaXN0ZXJlZFBhcmFtZXRlcihwYXJhbWV0ZXIsY2hhbm5lbCxvcHRpb25zLnRpbWUpLHRoYXQuc2VuZENvbnRyb2xDaGFuZ2UoOTYsMCxjaGFubmVsLHt0aW1lOm9wdGlvbnMudGltZX0pLHRoYXQuX2Rlc2VsZWN0UmVnaXN0ZXJlZFBhcmFtZXRlcihjaGFubmVsLG9wdGlvbnMudGltZSl9KSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLmRlY3JlbWVudFJlZ2lzdGVyZWRQYXJhbWV0ZXI9ZnVuY3Rpb24ocGFyYW1ldGVyLGNoYW5uZWwsb3B0aW9ucyl7aWYob3B0aW9ucz1vcHRpb25zfHx7fSwhQXJyYXkuaXNBcnJheShwYXJhbWV0ZXIpKXtpZighd20uTUlESV9SRUdJU1RFUkVEX1BBUkFNRVRFUltwYXJhbWV0ZXJdKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgc3BlY2lmaWVkIHBhcmFtZXRlciBpcyBub3QgYXZhaWxhYmxlLlwiKTtwYXJhbWV0ZXI9d20uTUlESV9SRUdJU1RFUkVEX1BBUkFNRVRFUltwYXJhbWV0ZXJdfXJldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhpcy5fc2VsZWN0UmVnaXN0ZXJlZFBhcmFtZXRlcihwYXJhbWV0ZXIsY2hhbm5lbCxvcHRpb25zLnRpbWUpLHRoaXMuc2VuZENvbnRyb2xDaGFuZ2UoOTcsMCxjaGFubmVsLHt0aW1lOm9wdGlvbnMudGltZX0pLHRoaXMuX2Rlc2VsZWN0UmVnaXN0ZXJlZFBhcmFtZXRlcihjaGFubmVsLG9wdGlvbnMudGltZSl9LmJpbmQodGhpcykpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2V0UGl0Y2hCZW5kUmFuZ2U9ZnVuY3Rpb24oc2VtaXRvbmVzLGNlbnRzLGNoYW5uZWwsb3B0aW9ucyl7dmFyIHRoYXQ9dGhpcztpZihvcHRpb25zPW9wdGlvbnN8fHt9LCEoMDw9KHNlbWl0b25lcz1NYXRoLmZsb29yKHNlbWl0b25lcyl8fDApJiZzZW1pdG9uZXM8PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgc2VtaXRvbmVzIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7aWYoISgwPD0oY2VudHM9TWF0aC5mbG9vcihjZW50cyl8fDApJiZjZW50czw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBjZW50cyB2YWx1ZSBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMTI3XCIpO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhhdC5zZXRSZWdpc3RlcmVkUGFyYW1ldGVyKFwicGl0Y2hiZW5kcmFuZ2VcIixbc2VtaXRvbmVzLGNlbnRzXSxjaGFubmVsLHt0aW1lOm9wdGlvbnMudGltZX0pfSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZXRNb2R1bGF0aW9uUmFuZ2U9ZnVuY3Rpb24oc2VtaXRvbmVzLGNlbnRzLGNoYW5uZWwsb3B0aW9ucyl7dmFyIHRoYXQ9dGhpcztpZihvcHRpb25zPW9wdGlvbnN8fHt9LCEoMDw9KHNlbWl0b25lcz1NYXRoLmZsb29yKHNlbWl0b25lcyl8fDApJiZzZW1pdG9uZXM8PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgc2VtaXRvbmVzIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7aWYoISgwPD0oY2VudHM9TWF0aC5mbG9vcihjZW50cyl8fDApJiZjZW50czw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBjZW50cyB2YWx1ZSBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMTI3XCIpO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhhdC5zZXRSZWdpc3RlcmVkUGFyYW1ldGVyKFwibW9kdWxhdGlvbnJhbmdlXCIsW3NlbWl0b25lcyxjZW50c10sY2hhbm5lbCx7dGltZTpvcHRpb25zLnRpbWV9KX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2V0TWFzdGVyVHVuaW5nPWZ1bmN0aW9uKHZhbHVlLGNoYW5uZWwsb3B0aW9ucyl7dmFyIHRoYXQ9dGhpcztpZihvcHRpb25zPW9wdGlvbnN8fHt9LCh2YWx1ZT1wYXJzZUZsb2F0KHZhbHVlKXx8MCk8PS02NXx8NjQ8PXZhbHVlKXRocm93IG5ldyBSYW5nZUVycm9yKFwiVGhlIHZhbHVlIG11c3QgYmUgYSBkZWNpbWFsIG51bWJlciBsYXJnZXIgdGhhbiAtNjUgYW5kIHNtYWxsZXIgdGhhbiA2NC5cIik7dmFyIGNvYXJzZT1NYXRoLmZsb29yKHZhbHVlKSs2NCxmaW5lPXZhbHVlLU1hdGguZmxvb3IodmFsdWUpLG1zYj0oZmluZT1NYXRoLnJvdW5kKChmaW5lKzEpLzIqMTYzODMpKT4+NyYxMjcsbHNiPTEyNyZmaW5lO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKCl7dGhhdC5zZXRSZWdpc3RlcmVkUGFyYW1ldGVyKFwiY2hhbm5lbGNvYXJzZXR1bmluZ1wiLGNvYXJzZSxjaGFubmVsLHt0aW1lOm9wdGlvbnMudGltZX0pLHRoYXQuc2V0UmVnaXN0ZXJlZFBhcmFtZXRlcihcImNoYW5uZWxmaW5ldHVuaW5nXCIsW21zYixsc2JdLGNoYW5uZWwse3RpbWU6b3B0aW9ucy50aW1lfSl9KSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLnNldFR1bmluZ1Byb2dyYW09ZnVuY3Rpb24odmFsdWUsY2hhbm5lbCxvcHRpb25zKXt2YXIgdGhhdD10aGlzO2lmKG9wdGlvbnM9b3B0aW9uc3x8e30sISgwPD0odmFsdWU9TWF0aC5mbG9vcih2YWx1ZSkpJiZ2YWx1ZTw9MTI3KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBwcm9ncmFtIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxMjdcIik7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oKXt0aGF0LnNldFJlZ2lzdGVyZWRQYXJhbWV0ZXIoXCJ0dW5pbmdwcm9ncmFtXCIsdmFsdWUsY2hhbm5lbCx7dGltZTpvcHRpb25zLnRpbWV9KX0pLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2V0VHVuaW5nQmFuaz1mdW5jdGlvbih2YWx1ZSxjaGFubmVsLG9wdGlvbnMpe3ZhciB0aGF0PXRoaXM7aWYob3B0aW9ucz1vcHRpb25zfHx7fSwhKDA8PSh2YWx1ZT1NYXRoLmZsb29yKHZhbHVlKXx8MCkmJnZhbHVlPD0xMjcpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiVGhlIGJhbmsgdmFsdWUgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEyN1wiKTtyZXR1cm4gd20udG9NSURJQ2hhbm5lbHMoY2hhbm5lbCkuZm9yRWFjaChmdW5jdGlvbigpe3RoYXQuc2V0UmVnaXN0ZXJlZFBhcmFtZXRlcihcInR1bmluZ2JhbmtcIix2YWx1ZSxjaGFubmVsLHt0aW1lOm9wdGlvbnMudGltZX0pfSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kQ2hhbm5lbE1vZGU9ZnVuY3Rpb24oY29tbWFuZCx2YWx1ZSxjaGFubmVsLG9wdGlvbnMpe2lmKG9wdGlvbnM9b3B0aW9uc3x8e30sXCJzdHJpbmdcIj09dHlwZW9mIGNvbW1hbmQpe2lmKCEoY29tbWFuZD13bS5NSURJX0NIQU5ORUxfTU9ERV9NRVNTQUdFU1tjb21tYW5kXSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgY2hhbm5lbCBtb2RlIG1lc3NhZ2UgbmFtZS5cIil9ZWxzZSBpZighKDEyMDw9KGNvbW1hbmQ9TWF0aC5mbG9vcihjb21tYW5kKSkmJmNvbW1hbmQ8PTEyNykpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJDaGFubmVsIG1vZGUgbnVtZXJpY2FsIGlkZW50aWZpZXJzIG11c3QgYmUgYmV0d2VlbiAxMjAgYW5kIDEyNy5cIik7aWYoKHZhbHVlPU1hdGguZmxvb3IodmFsdWUpfHwwKTwwfHwxMjc8dmFsdWUpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJWYWx1ZSBtdXN0IGJlIGFuIGludGVnZXIgYmV0d2VlbiAwIGFuZCAxMjcuXCIpO3JldHVybiB3bS50b01JRElDaGFubmVscyhjaGFubmVsKS5mb3JFYWNoKGZ1bmN0aW9uKGNoKXt0aGlzLnNlbmQoKHdtLk1JRElfQ0hBTk5FTF9NRVNTQUdFUy5jaGFubmVsbW9kZTw8NCkrKGNoLTEpLFtjb21tYW5kLHZhbHVlXSx0aGlzLl9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSl9LmJpbmQodGhpcykpLHRoaXN9LE91dHB1dC5wcm90b3R5cGUuc2VuZFByb2dyYW1DaGFuZ2U9ZnVuY3Rpb24ocHJvZ3JhbSxjaGFubmVsLG9wdGlvbnMpe3ZhciB0aGF0PXRoaXM7aWYob3B0aW9ucz1vcHRpb25zfHx7fSxwcm9ncmFtPU1hdGguZmxvb3IocHJvZ3JhbSksaXNOYU4ocHJvZ3JhbSl8fHByb2dyYW08MHx8MTI3PHByb2dyYW0pdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJQcm9ncmFtIG51bWJlcnMgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEyNy5cIik7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oY2gpe3RoYXQuc2VuZCgod20uTUlESV9DSEFOTkVMX01FU1NBR0VTLnByb2dyYW1jaGFuZ2U8PDQpKyhjaC0xKSxbcHJvZ3JhbV0sdGhhdC5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpfSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kQ2hhbm5lbEFmdGVydG91Y2g9ZnVuY3Rpb24ocHJlc3N1cmUsY2hhbm5lbCxvcHRpb25zKXt2YXIgdGhhdD10aGlzO29wdGlvbnM9b3B0aW9uc3x8e30scHJlc3N1cmU9cGFyc2VGbG9hdChwcmVzc3VyZSksKGlzTmFOKHByZXNzdXJlKXx8cHJlc3N1cmU8MHx8MTxwcmVzc3VyZSkmJihwcmVzc3VyZT0uNSk7dmFyIG5QcmVzc3VyZT1NYXRoLnJvdW5kKDEyNypwcmVzc3VyZSk7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oY2gpe3RoYXQuc2VuZCgod20uTUlESV9DSEFOTkVMX01FU1NBR0VTLmNoYW5uZWxhZnRlcnRvdWNoPDw0KSsoY2gtMSksW25QcmVzc3VyZV0sdGhhdC5fcGFyc2VUaW1lUGFyYW1ldGVyKG9wdGlvbnMudGltZSkpfSksdGhpc30sT3V0cHV0LnByb3RvdHlwZS5zZW5kUGl0Y2hCZW5kPWZ1bmN0aW9uKGJlbmQsY2hhbm5lbCxvcHRpb25zKXt2YXIgdGhhdD10aGlzO2lmKG9wdGlvbnM9b3B0aW9uc3x8e30saXNOYU4oYmVuZCl8fGJlbmQ8LTF8fDE8YmVuZCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlBpdGNoIGJlbmQgdmFsdWUgbXVzdCBiZSBiZXR3ZWVuIC0xIGFuZCAxLlwiKTt2YXIgbkxldmVsPU1hdGgucm91bmQoKGJlbmQrMSkvMioxNjM4MyksbXNiPW5MZXZlbD4+NyYxMjcsbHNiPTEyNyZuTGV2ZWw7cmV0dXJuIHdtLnRvTUlESUNoYW5uZWxzKGNoYW5uZWwpLmZvckVhY2goZnVuY3Rpb24oY2gpe3RoYXQuc2VuZCgod20uTUlESV9DSEFOTkVMX01FU1NBR0VTLnBpdGNoYmVuZDw8NCkrKGNoLTEpLFtsc2IsbXNiXSx0aGF0Ll9wYXJzZVRpbWVQYXJhbWV0ZXIob3B0aW9ucy50aW1lKSl9KSx0aGlzfSxPdXRwdXQucHJvdG90eXBlLl9wYXJzZVRpbWVQYXJhbWV0ZXI9ZnVuY3Rpb24odGltZSl7dmFyIHZhbHVlLHBhcnNlZD1wYXJzZUZsb2F0KHRpbWUpO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0aW1lJiZcIitcIj09PXRpbWUuc3Vic3RyaW5nKDAsMSk/cGFyc2VkJiYwPHBhcnNlZCYmKHZhbHVlPXdtLnRpbWUrcGFyc2VkKTpwYXJzZWQ+d20udGltZSYmKHZhbHVlPXBhcnNlZCksdmFsdWV9LE91dHB1dC5wcm90b3R5cGUuX2NvbnZlcnROb3RlVG9BcnJheT1mdW5jdGlvbihub3RlKXt2YXIgbm90ZXM9W107cmV0dXJuIEFycmF5LmlzQXJyYXkobm90ZSl8fChub3RlPVtub3RlXSksbm90ZS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe25vdGVzLnB1c2god20uZ3Vlc3NOb3RlTnVtYmVyKGl0ZW0pKX0pLG5vdGVzfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJlwib2JqZWN0XCI9PXR5cGVvZiBkZWZpbmUuYW1kP2RlZmluZShbXSxmdW5jdGlvbigpe3JldHVybiB3bX0pOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPXdtOnNjb3BlLldlYk1pZGl8fChzY29wZS5XZWJNaWRpPXdtKX0odGhpcyk7IiwiLy8gVE9ETzogcmVwbGFjZSB3aXRoIGVudW0sIGZpeCB3ZWlyZCBcImNhbm5vdCBmaW5kIG5hbWVcIiBlcnJvclxuY29uc3Qgc2VtaXRvbmVzSW46IE1hcDxzdHJpbmcsIG51bWJlcj4gPSBuZXcgTWFwKFtcbiAgICBbXCJTZW1pdG9uZVwiLCAxXSxcbiAgICBbXCJUb25lXCIsIDJdLFxuICAgIFtcIk1pbm9yM3JkXCIsIDNdLFxuICAgIFtcIk1ham9yM3JkXCIsIDRdLFxuICAgIFtcIlBlcmZlY3Q0dGhcIiwgNV0sXG4gICAgW1wiQXVnbWVudGVkNHRoXCIsIDZdLFxuICAgIFtcIlBlcmZlY3Q1dGhcIiwgN10sXG4gICAgW1wiTWlub3I2dGhcIiwgOF0sXG4gICAgW1wiTWFqb3I2dGhcIiwgOV0sXG4gICAgW1wiTWlub3I3dGhcIiwgMTBdLFxuICAgIFtcIk1ham9yN3RoXCIsIDExXSxcbl0pXG5cbmNsYXNzIENob3JkVHlwZSB7XG4gICAgaW50ZXJ2YWxzOiBBcnJheTxzdHJpbmc+O1xuICAgIHN5bWJvbDogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihpbnRlcnZhbHM6IEFycmF5PHN0cmluZz4sIHN5bWJvbDogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc3ltYm9sID0gc3ltYm9sXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvblxuICAgICAgICB0aGlzLmludGVydmFscyA9IGludGVydmFsc1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENob3JkQm9vayB7XG4gICAgc3ltYm9sTWFwOiBNYXA8c3RyaW5nLCBDaG9yZFR5cGU+O1xuXG4gICAgY29uc3RydWN0b3IgKCkge1xuICAgICAgICB0aGlzLnN5bWJvbE1hcCA9IG5ldyBNYXAoW1xuICAgICAgICAgICAgLy8gVE9ETzogcmVtb3ZlIHJlcGVhdGVkIHN5bWJvbFxuICAgICAgICAgICAgW1wiZGltXCIsIG5ldyBDaG9yZFR5cGUobmV3IEFycmF5KFwiTWlub3IzcmRcIiwgXCJNaW5vcjNyZFwiKSwgXCJkaW1cIiwgXCJkaW1pbmlzaGVkIHRyaWFkIHJvb3RcIildLFxuICAgICAgICAgICAgW1wibVwiLCBuZXcgQ2hvcmRUeXBlKG5ldyBBcnJheShcIk1pbm9yM3JkXCIsIFwiTWFqb3IzcmRcIiksIFwibVwiLCBcIm1pbm9yIHRyaWFkIHJvb3QgcG9zaXRpb25cIildLFxuICAgICAgICAgICAgW1wibTdcIiwgbmV3IENob3JkVHlwZShuZXcgQXJyYXkoXCJNaW5vcjNyZFwiLCBcIk1ham9yM3JkXCIsIFwiTWlub3IzcmRcIiksIFwibTdcIiwgXCJtaW5vciA3dGggcm9vdCBwb3NpdGlvblwiKV0sXG4gICAgICAgICAgICBbXCJcIiwgbmV3IENob3JkVHlwZShuZXcgQXJyYXkoXCJNYWpvcjNyZFwiLCBcIk1pbm9yM3JkXCIpLCBcIlwiLCBcIm1ham9yIHRyaWFkIHJvb3QgcG9zaXRpb25cIildLFxuICAgICAgICAgICAgW1wiN1wiLCBuZXcgQ2hvcmRUeXBlKG5ldyBBcnJheShcIk1ham9yM3JkXCIsIFwiTWlub3IzcmRcIiwgXCJNaW5vcjNyZFwiKSwgXCI3XCIsIFwiN3RoIHJvb3QgcG9zaXRpb25cIildLFxuICAgICAgICAgICAgW1wibWFqN1wiLCBuZXcgQ2hvcmRUeXBlKG5ldyBBcnJheShcIk1ham9yM3JkXCIsIFwiTWlub3IzcmRcIiwgXCJNYWpvcjNyZFwiKSwgXCJtYWo3XCIsIFwibWFqb3IgN3RoIHJvb3QgcG9zaXRpb25cIildLFxuICAgICAgICAgICAgW1wiYXVnXCIsIG5ldyBDaG9yZFR5cGUobmV3IEFycmF5KFwiTWFqb3IzcmRcIiwgXCJNYWpvcjNyZFwiKSwgXCJhdWdcIiwgXCJhdWdtZW50ZWQgdHJpYWRcIildLFxuICAgICAgICBdKTtcbiAgICB9XG5cbiAgICAvLyBUT0RPOiB2b2ljaW5nIGJvb2xlYW5zIGFzIG9wdGlvbnNcbiAgICBtYWtlKHJvb3Q6IE5vdGUsIHN5bWJvbDogc3RyaW5nLCBvY3RhdmVJbmRlcGVuZGVudDogYm9vbGVhbiwgdm9pY2luZ0luZGVwZW5kZW50OiBib29sZWFuKSB7XG4gICAgICAgIHZhciBjaG9yZCA9IG5ldyBDaG9yZChyb290KTtcbiAgICAgICAgY2hvcmQuc3ltYm9sID0gcm9vdC5hYnN0cmFjdC5zdHJpbmcoKS50b1VwcGVyQ2FzZSgpICsgc3ltYm9sXG5cbiAgICAgICAgLy8gRW5zdXJlIHRoZSBjaG9yZCB0eXBlIGV4aXN0c1xuICAgICAgICAvLyBUT0RPOiBtb3JlIHN1Y2NpbmN0IHdheSAtIGRvZXMgPyB0aHJvdyBhbiBlcnJvcj9cbiAgICAgICAgdmFyIHBvc3NpYmxlVHlwZSA9IHRoaXMuc3ltYm9sTWFwLmdldChzeW1ib2wpXG4gICAgICAgIGlmICghcG9zc2libGVUeXBlKSB7XG4gICAgICAgICAgICB0aHJvdyBcImNob3JkIFwiICsgc3ltYm9sICsgXCJ1bmtub3duXCJcbiAgICAgICAgfVxuICAgICAgICB2YXIgdHlwZSA9IDxDaG9yZFR5cGU+cG9zc2libGVUeXBlXG5cbiAgICAgICAgdHlwZS5pbnRlcnZhbHMuZm9yRWFjaCgoaW50ZXJ2YWwpID0+IHtcbiAgICAgICAgICAgIGNob3JkLnN0YWNrKGludGVydmFsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjaG9yZFxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENob3JkU2V0IHtcbiAgICBjdXJyZW50OiBudW1iZXI7XG4gICAgY2hvcmRzOiBBcnJheTxDaG9yZD47XG5cbiAgICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IDBcbiAgICAgICAgdGhpcy5jaG9yZHMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBpbmZlciB0aGUgcmlnaHQgc2V0IG9mIGNob3JkcyBmcm9tIGEgY29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgY2hvcmQgc3ltYm9sc1xuICAgIGluZmVyKGJvb2s6IENob3JkQm9vaykge1xuICAgICAgICB0aGlzLmNob3JkcyA9IFtdO1xuICAgICAgICB2YXIgY2hvcmRFbGVtID0gPEhUTUxQYXJhZ3JhcGhFbGVtZW50PmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2hvcmRzXCIpXG4gICAgICAgIHZhciB0ZXh0ID0gY2hvcmRFbGVtLmlubmVySFRNTFxuXG4gICAgICAgIHZhciBzeW1ib2xzID0gdGV4dC5zcGxpdChcIiBcIilcbiAgICAgICAgc3ltYm9scy5mb3JFYWNoKHN5bWJvbCA9PiB7XG4gICAgICAgICAgICB2YXIgcm9vdCA9IHN5bWJvbFswXS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgaWYgKHN5bWJvbC5pbmNsdWRlcyhcIiNcIikpIHtcbiAgICAgICAgICAgICAgICByb290ICs9IFwiI1wiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBzdGFydCBpbiBmb3VydGggb2N0YXZlIHdpdGggbWlkZGxlIGNcbiAgICAgICAgICAgIHRoaXMuY2hvcmRzLnB1c2goYm9vay5tYWtlKG5ldyBOb3RlKE5ld0Fic3RyYWN0Tm90ZShyb290KSwgNCksIHN5bWJvbC5zdWJzdHJpbmcocm9vdC5sZW5ndGgpLCBmYWxzZSwgdHJ1ZSkpXG4gICAgICAgIH0pXG4gICAgfVxuICAgIFxuICAgIGdldEN1cnJlbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnQgPCB0aGlzLmNob3Jkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNob3Jkc1t0aGlzLmN1cnJlbnRdXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wbGV0ZU5leHQoKSB7XG4gICAgICAgIHRoaXMuY3VycmVudCA9ICh0aGlzLmN1cnJlbnQgKyAxKSAlIHRoaXMuY2hvcmRzLmxlbmd0aFxuICAgICAgICB0aGlzLnJlbmRlcigpXG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IDBcbiAgICAgICAgdGhpcy5yZW5kZXIoKVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgdmFyIGRlc2MgPSBcIlwiO1xuICAgICAgICB0aGlzLmNob3Jkcy5mb3JFYWNoKChjaG9yZCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKGkgPCB0aGlzLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICBkZXNjICs9IGNob3JkLnN5bWJvbC5zdHJpa2UoKSArIFwiIFwiXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRlc2MgKz0gY2hvcmQuc3ltYm9sICsgXCIgXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgZGVzYyA9IGRlc2Muc3Vic3RyKDAsIGRlc2MubGFzdEluZGV4T2YoXCIgXCIpKVxuICAgICAgICB2YXIgY2hvcmRFbGVtID0gPEhUTUxQYXJhZ3JhcGhFbGVtZW50PmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2hvcmRzXCIpXG4gICAgICAgIGNob3JkRWxlbS5pbm5lckhUTUwgPSBkZXNjXG4gICAgfVxufVxuXG4vLyBBYnN0cmFjdCBub3RlcyBsaWtlIEIgYW5kIEYjIGRvbid0IGRlcGVuZCBvbiBvY3RhdmVzXG5jbGFzcyBBYnN0cmFjdE5vdGUge1xuICAgIGxldHRlcjogc3RyaW5nO1xuICAgIHNoYXJwOiBib29sZWFuOyAvLyBXZSBvbmx5IGhhbmRsZSBzaGFycHMgaW4gZnVuZGFtZW50YWwgcmVwcmVzZW50YXRpb24sIGVuaGFybW9uaWMgZmxhdHMgYXJlIGEgcmVuZGVyaW5nIGlzc3VlXG4gICAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGlmIChuYW1lLmxlbmd0aCA9PSAwIHx8IG5hbWUubGVuZ3RoID4gMikge1xuICAgICAgICAgICAgdGhyb3cgXCJpbnZhbGlkIG5vdGUgbmFtZSBsZW5ndGggXCIgKyBuYW1lLmxlbmd0aCArIFwiIGZvciBub3RlIFwiICsgbmFtZVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHZhbGlkTm90ZSA9IG5ldyBSZWdFeHAoL1thLWdBLUdYXS8pXG4gICAgICAgIHRoaXMubGV0dGVyID0gbmFtZVswXVxuICAgICAgICBpZiAoIXZhbGlkTm90ZS50ZXN0KHRoaXMubGV0dGVyKSkge1xuICAgICAgICAgICAgdGhyb3cgXCJub3RlIGxldHRlciBtdXN0IGJlIGJldHdlZW4gXFxcImFcXFwiIGFuZCBcXFwiZ1xcXCIsIGdvdCBcIiArIHRoaXMubGV0dGVyXG4gICAgICAgIH1cblxuICAgICAgICBpZiAobmFtZS5sZW5ndGggPT0gMiAmJiBuYW1lWzFdICE9IFwiI1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBcIm9ubHkgc2hhcnBzIGFyZSB2YWxpZCBhY2NpZGVudGFscywgZ290IFwiICsgbmFtZVsxXSArIFwiIGZyb20gXCIgKyBuYW1lXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNoYXJwID0gbmFtZS5sZW5ndGggPT0gMlxuICAgIH1cbiAgICBcbiAgICBzdHJpbmcoKSB7XG4gICAgICAgIHZhciBzdHIgPSB0aGlzLmxldHRlclxuICAgICAgICBpZiAodGhpcy5zaGFycCkge1xuICAgICAgICAgICAgc3RyICs9IFwiI1wiXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0clxuICAgIH1cblxuICAgIG5leHQoKSB7XG4gICAgICAgIHZhciBpID0gTm90ZU9yZGVyLmluZGV4T2YodGhpcylcbiAgICAgICAgdmFyIG4gPSBOb3RlT3JkZXJbKGkrMSklMTJdO1xuICAgICAgICByZXR1cm4gblxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5vdGUge1xuICAgIGFic3RyYWN0OiBBYnN0cmFjdE5vdGU7XG4gICAgb2N0YXZlOiBudW1iZXI7XG5cbiAgICAvLyBUT0RPOiBwYXJzZU5vdCBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBuaWNlIHN0cmluZ1xuXHRjb25zdHJ1Y3Rvcihub3RlOiBBYnN0cmFjdE5vdGUsIG9jdGF2ZTogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuYWJzdHJhY3QgPSBub3RlXG4gICAgICAgIHRoaXMub2N0YXZlID0gb2N0YXZlXG4gICAgfVxuICAgIFxuICAgIGxvd2VyVGhhbihub3RlOiBOb3RlKSB7XG4gICAgICAgIGlmICh0aGlzLm9jdGF2ZSA8IG5vdGUub2N0YXZlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIE5vdGVPcmRlci5pbmRleE9mKHRoaXMuYWJzdHJhY3QpIDwgTm90ZU9yZGVyLmluZGV4T2Yobm90ZS5hYnN0cmFjdClcbiAgICB9XG5cbiAgICBuZXh0KCkge1xuICAgICAgICB2YXIgb2N0YXZlID0gdGhpcy5vY3RhdmVcbiAgICAgICAgaWYgKE5vdGVPcmRlci5pbmRleE9mKHRoaXMuYWJzdHJhY3QpID09IDExKSB7XG4gICAgICAgICAgICBvY3RhdmUrK1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgTm90ZSh0aGlzLmFic3RyYWN0Lm5leHQoKSwgb2N0YXZlKVxuICAgIH1cblxuICAgIHN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWJzdHJhY3Quc3RyaW5nKCkgKyB0aGlzLm9jdGF2ZVxuICAgIH1cbn1cblxuLy8gVE9ETzogdW5leHBvcnRcbmNvbnN0IG5vdGVsaXN0ID0gW1wiY1wiLFwiYyNcIixcImRcIixcImQjXCIsXCJlXCIsXCJmXCIsXCJmI1wiLFwiZ1wiLFwiZyNcIixcImFcIixcImEjXCIsXCJiXCJdXG5leHBvcnQgY29uc3QgTm90ZU9yZGVyID0gbm90ZWxpc3QubWFwKChuYW1lOiBzdHJpbmcpPT57cmV0dXJuIG5ldyBBYnN0cmFjdE5vdGUobmFtZSl9KVxuXG5leHBvcnQgZnVuY3Rpb24gTmV3QWJzdHJhY3ROb3RlKG5hbWU6IHN0cmluZykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTm90ZU9yZGVyLmxlbmd0aDsgaSsrICkge1xuICAgICAgICB2YXIgbm90ZSA9IE5vdGVPcmRlcltpXVxuICAgICAgICBpZiAobm90ZS5zdHJpbmcoKSA9PSBuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gbm90ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUGxhY2Vob2xkZXIgbm90ZS9rZXlcbiAgICAvLyBUT0RPOiBmYWN0b3Igb3V0XG4gICAgaWYgKG5hbWUgPT0gXCJYXCIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBYnN0cmFjdE5vdGUoXCJYXCIpXG4gICAgfVxuICAgIHRocm93IFwidW5rbm93biBub3RlIFwiICsgbmFtZVxufVxuXG4vLyBDaG9yZHMgYXJlIGFjdHVhbGx5IHN0cmljdCB2b2ljaW5ncywgYW5kIHVzZSBvY3RhdmVkIG5vdGVzLCBub3QgYWJzdHJhY3Qgbm90ZXNcbmNsYXNzIENob3JkIHtcbiAgICBzeW1ib2w6IHN0cmluZztcbiAgICByb290OiBOb3RlO1xuICAgIGhpZ2hlc3Q6IE5vdGU7XG4gICAgbm90ZXM6IEFycmF5PE5vdGU+O1xuXG4gICAgY29uc3RydWN0b3Iobm90ZTogTm90ZSkge1xuICAgICAgICB0aGlzLnN5bWJvbCA9IFwiXCJcbiAgICAgICAgdGhpcy5yb290ID0gbm90ZVxuICAgICAgICB0aGlzLmhpZ2hlc3QgPSBub3RlXG4gICAgICAgIHRoaXMubm90ZXMgPSBbbm90ZV1cbiAgICB9XG5cbiAgICBzdGFjayhpbnRlcnZhbDogc3RyaW5nKSB7XG4gICAgICAgIHZhciBpbmRleCA9IE5vdGVPcmRlci5pbmRleE9mKHRoaXMuaGlnaGVzdC5hYnN0cmFjdCkgKyA8bnVtYmVyPnNlbWl0b25lc0luLmdldChpbnRlcnZhbClcbiAgICAgICAgdmFyIG5leHRBYnN0cmFjdE5vdGUgPSBOb3RlT3JkZXJbaW5kZXggJSAxMl1cbiAgICAgICAgdmFyIG5ld05vdGUgPSBuZXcgTm90ZShuZXh0QWJzdHJhY3ROb3RlLCBNYXRoLmZsb29yKCh0aGlzLmhpZ2hlc3Qub2N0YXZlICsgaW5kZXgpLzEyKSk7XG4gICAgICAgIHRoaXMubm90ZXMucHVzaChuZXdOb3RlKVxuICAgICAgICB0aGlzLmhpZ2hlc3QgPSBuZXdOb3RlXG4gICAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuXG4gICAgZXF1YWxzKG5vdGVzOiBBcnJheTxOb3RlPikge1xuICAgICAgICAvLyBjaGVjayBub3RlcyBhZ2FpbnN0IGNob3JkXG4gICAgICAgIC8vIFRPRE86IHBlcmhhcHMgbW9yZSBkZXRhaWxlZCBoZWxwIG5vdGVzXG4gICAgICAgIGlmICh0aGlzLm5vdGVzLmxlbmd0aCAhPSBub3Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ub3Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKG5vdGVzW2ldICE9IHVuZGVmaW5lZCAmJiB0aGlzLm5vdGVzW2ldLmFic3RyYWN0LnN0cmluZygpICE9IG5vdGVzW2ldLmFic3RyYWN0LnN0cmluZygpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9