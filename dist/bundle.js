!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(n(1)),i=n(2);function s(e){let t=[];return e.forEach(e=>{a(e)&&t.push(e)}),t}function a(e){return!e.abstract.sharp}let u=new i.ChordBook,h=new i.ChordSet;const l=new class{constructor(e,t,n,r){this.onChordChange=r,this.context=e.getContext("2d"),this.keys=t,this.pressed=new Map,this.width=window.innerWidth,this.keyWidth=this.width/s(this.keys).length,this.height=300,e.width=this.width,e.height=this.height,this.chords=n}currentNotes(){var e=[];return this.pressed.forEach((t,n)=>{t&&e.push(n)}),e=e.sort((e,t)=>e.lowerThan(t)?(console.log("it's lower"),-1):1),console.log(e),e}render(){this.context.clearRect(0,0,this.width,this.height);var e=0;this.keys.forEach(t=>{this.context.fillStyle="#FFFFFF",this.pressed.get(t)&&(this.context.fillStyle="#00FF00"),a(t)&&(this.context.fillRect(e*this.keyWidth,0,this.keyWidth-1,this.height),e+=1)});e=0;this.keys.forEach(t=>{this.context.fillStyle="#000000",this.pressed.get(t)&&(this.context.fillStyle="#00FF00"),a(t)?e+=1:this.context.fillRect((e-.25)*this.keyWidth,0,this.keyWidth/2,this.height/2)})}NoteChange(){var e;(null===(e=this.chords.getCurrent())||void 0===e?void 0:e.equals(this.currentNotes()))&&this.chords.completeNext();var t=u.recognise(this.currentNotes());console.log(t),this.onChordChange(t)}pressKey(e){this.pressed.set(e,!0),this.render(),this.NoteChange()}releaseKey(e){this.pressed.delete(e),this.render(),this.NoteChange()}keyUp(e){this.releaseKey(this.keyboardInputNote(e.keyCode))}keyDown(e){this.pressKey(this.keyboardInputNote(e.keyCode))}keyboardInputNote(e){let t=String.fromCharCode(e).toLocaleLowerCase();if(-1!=(n=["a","s","d","f","g","h","j","k","l",";"].indexOf(t)))return s(this.keys)[n];var n;if(-1!=(n=["q","w","e","r","t","y","u","i","o","p","["].indexOf(t)))return function(e){let t=[];var n=!0;return e.forEach(e=>{a(e)?n?(t.push(new i.Note(i.NewAbstractNote("X"),-1776)),n=!1):n=!0:(t.push(e),n=!1)}),t}(this.keys)[n];throw t+" is not on our keyboard"}}(document.querySelector("#piano"),function(e,t){if(!a(e))throw"the notes on a keyboard must start from a white note, otherwise there'll be a weird half note space at the end of the keyboard";for(var n=[];t>0;){for(var r=12;r>0;)n.push(e),r--,e=e.next();t--}return n.push(e),n}(new i.Note(i.NewAbstractNote("c"),4),3),h,e=>{var t=document.querySelector("#currentChord");t.innerHTML=null==e?"-":e.symbol});document.addEventListener("keydown",e=>{l.keyDown(e)}),document.addEventListener("keyup",e=>{l.keyUp(e)}),o.default.enable((function(e){e&&console.log("WebMidi could not be enabled.",e);try{o.default.inputs[0].addListener("noteon","all",e=>{l.pressKey(new i.Note(i.NewAbstractNote(e.note.name),e.note.octave))}),o.default.inputs[0].addListener("noteoff","all",e=>{l.releaseKey(new i.Note(i.NewAbstractNote(e.note.name),e.note.octave))})}catch(e){}})),document.querySelector("#changeChords").onclick=function(){var e=document.querySelector("#newChords");document.querySelector("#chords").innerHTML=e.value,e.value="",h.infer(u)},h.infer(u),l.render(),h.render(),setTimeout(()=>{window.player},5e3)},function(e,t,n){var r;!function(n){"use strict";function o(){if(o.prototype._singleton)throw new Error("WebMidi is a singleton, it cannot be instantiated directly.");(o.prototype._singleton=this)._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=["connected","disconnected"],this._nrpnBuffer=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this._nrpnEventsEnabled=!0,this._nrpnTypes=["entry","increment","decrement"],this._notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_NRPN_MESSAGES:{value:{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return"requestMIDIAccess"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this.interface}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this.interface||!this.interface.sysexEnabled)}.bind(this)},nrpnEventsEnabled:{enumerable:!0,get:function(){return!!this._nrpnEventsEnabled}.bind(this),set:function(e){return this._nrpnEventsEnabled=e,this._nrpnEventsEnabled}},nrpnTypes:{enumerable:!0,get:function(){return this._nrpnTypes}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}var i=new o;function s(e){var t=this;this._userHandlers={channel:{},system:{}},this._midiInput=e,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return t._midiInput.connection}},id:{enumerable:!0,get:function(){return t._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return t._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return t._midiInput.name}},state:{enumerable:!0,get:function(){return t._midiInput.state}},type:{enumerable:!0,get:function(){return t._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function a(e){var t=this;this._midiOutput=e,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return t._midiOutput.connection}},id:{enumerable:!0,get:function(){return t._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return t._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return t._midiOutput.name}},state:{enumerable:!0,get:function(){return t._midiOutput.state}},type:{enumerable:!0,get:function(){return t._midiOutput.type}}})}o.prototype.enable=function(e,t){this.enabled||(this.supported?navigator.requestMIDIAccess({sysex:t}).then(function(t){var n,r=[],o=[];this.interface=t,this._resetInterfaceUserHandlers(),this.interface.onstatechange=function(e){r.push(e)};for(var i=t.inputs.values(),s=i.next();s&&!s.done;s=i.next())o.push(s.value.open());for(var a=t.outputs.values(),u=a.next();u&&!u.done;u=a.next())o.push(u.value.open());function h(){clearTimeout(n),this._updateInputsAndOutputs(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this),"function"==typeof e&&e.call(this),r.forEach(function(e){this._onInterfaceStateChange(e)}.bind(this))}n=setTimeout(h.bind(this),200),Promise&&Promise.all(o).catch((function(e){})).then(h.bind(this))}.bind(this),function(t){"function"==typeof e&&e.call(this,t)}.bind(this)):"function"==typeof e&&e(new Error("The Web MIDI API is not supported by your browser.")))},o.prototype.disable=function(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your browser.");this.interface&&(this.interface.onstatechange=void 0),this.interface=void 0,this._inputs=[],this._outputs=[],this._nrpnEventsEnabled=!0,this._resetInterfaceUserHandlers()},o.prototype.addListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before adding event listeners.");if("function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(e)))throw new TypeError("The specified event type is not supported.");return this._userHandlers[e].push(t),this},o.prototype.hasListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before checking event listeners.");if("function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(e)))throw new TypeError("The specified event type is not supported.");for(var n=0;n<this._userHandlers[e].length;n++)if(this._userHandlers[e][n]===t)return!0;return!1},o.prototype.removeListener=function(e,t){if(!this.enabled)throw new Error("WebMidi must be enabled before removing event listeners.");if(void 0!==t&&"function"!=typeof t)throw new TypeError("The 'listener' parameter must be a function.");if(0<=this._midiInterfaceEvents.indexOf(e))if(t)for(var n=0;n<this._userHandlers[e].length;n++)this._userHandlers[e][n]===t&&this._userHandlers[e].splice(n,1);else this._userHandlers[e]=[];else{if(void 0!==e)throw new TypeError("The specified event type is not supported.");this._resetInterfaceUserHandlers()}return this},o.prototype.toMIDIChannels=function(e){var t;if("all"===e||void 0===e)t=["all"];else{if("none"===e)return[];t=Array.isArray(e)?e:[e]}return-1<t.indexOf("all")&&(t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),t.map((function(e){return parseInt(e)})).filter((function(e){return 1<=e&&e<=16}))},o.prototype.getInputById=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");e=String(e);for(var t=0;t<this.inputs.length;t++)if(this.inputs[t].id===e)return this.inputs[t];return!1},o.prototype.getOutputById=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");e=String(e);for(var t=0;t<this.outputs.length;t++)if(this.outputs[t].id===e)return this.outputs[t];return!1},o.prototype.getInputByName=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(e))return this.inputs[t];return!1},o.prototype.getOctave=function(e){if(null!=e&&0<=e&&e<=127)return Math.floor(Math.floor(e)/12-1)+Math.floor(i.octaveOffset)},o.prototype.getOutputByName=function(e){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(e))return this.outputs[t];return!1},o.prototype.guessNoteNumber=function(e){var t=!1;if(e&&e.toFixed&&0<=e&&e<=127?t=Math.round(e):0<=parseInt(e)&&parseInt(e)<=127?t=parseInt(e):("string"==typeof e||e instanceof String)&&(t=this.noteNameToNumber(e)),!1===t)throw new Error("Invalid input value ("+e+").");return t},o.prototype.noteNameToNumber=function(e){"string"!=typeof e&&(e="");var t=e.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!t)throw new RangeError("Invalid note name.");var n=i._semitones[t[1].toUpperCase()],r=12*(parseInt(t[3])+1-Math.floor(i.octaveOffset))+n;if(-1<t[2].toLowerCase().indexOf("b")?r-=t[2].length:-1<t[2].toLowerCase().indexOf("#")&&(r+=t[2].length),r<0||127<r)throw new RangeError("Invalid note name or note outside valid range.");return r},o.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},o.prototype._updateInputs=function(){for(var e=0;e<this._inputs.length;e++){for(var t=!0,n=this.interface.inputs.values(),r=n.next();r&&!r.done;r=n.next())if(this._inputs[e]._midiInput===r.value){t=!1;break}t&&this._inputs.splice(e,1)}this.interface&&this.interface.inputs.forEach(function(e){for(var t=!0,n=0;n<this._inputs.length;n++)this._inputs[n]._midiInput===e&&(t=!1);t&&this._inputs.push(new s(e))}.bind(this))},o.prototype._updateOutputs=function(){for(var e=0;e<this._outputs.length;e++){for(var t=!0,n=this.interface.outputs.values(),r=n.next();r&&!r.done;r=n.next())if(this._outputs[e]._midiOutput===r.value){t=!1;break}t&&this._outputs.splice(e,1)}this.interface&&this.interface.outputs.forEach(function(e){for(var t=!0,n=0;n<this._outputs.length;n++)this._outputs[n]._midiOutput===e&&(t=!1);t&&this._outputs.push(new a(e))}.bind(this))},o.prototype._onInterfaceStateChange=function(e){this._updateInputsAndOutputs();var t={timestamp:e.timeStamp,type:e.port.state};this.interface&&"connected"===e.port.state?"output"===e.port.type?t.port=this.getOutputById(e.port.id):"input"===e.port.type&&(t.port=this.getInputById(e.port.id)):t.port={connection:"closed",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this._userHandlers[e.port.state].forEach((function(e){e(t)}))},o.prototype._resetInterfaceUserHandlers=function(){for(var e=0;e<this._midiInterfaceEvents.length;e++)this._userHandlers[this._midiInterfaceEvents[e]]=[]},s.prototype.on=s.prototype.addListener=function(e,t,n){var r=this;if(void 0===t&&(t="all"),Array.isArray(t)||(t=[t]),t.forEach((function(e){if("all"!==e&&!(1<=e&&e<=16))throw new RangeError("The 'channel' parameter is invalid.")})),"function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0!==i.MIDI_SYSTEM_MESSAGES[e])this._userHandlers.system[e]||(this._userHandlers.system[e]=[]),this._userHandlers.system[e].push(n);else{if(void 0===i.MIDI_CHANNEL_MESSAGES[e])throw new TypeError("The specified event type is not supported.");if(-1<t.indexOf("all")){t=[];for(var o=1;o<=16;o++)t.push(o)}this._userHandlers.channel[e]||(this._userHandlers.channel[e]=[]),t.forEach((function(t){r._userHandlers.channel[e][t]||(r._userHandlers.channel[e][t]=[]),r._userHandlers.channel[e][t].push(n)}))}return this},s.prototype.hasListener=function(e,t,n){var r=this;if("function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===t&&(t="all"),t.constructor!==Array&&(t=[t]),void 0!==i.MIDI_SYSTEM_MESSAGES[e]){for(var o=0;o<this._userHandlers.system[e].length;o++)if(this._userHandlers.system[e][o]===n)return!0}else if(void 0!==i.MIDI_CHANNEL_MESSAGES[e]){if(-1<t.indexOf("all")){t=[];for(var s=1;s<=16;s++)t.push(s)}return!!this._userHandlers.channel[e]&&t.every((function(t){var o=r._userHandlers.channel[e][t];return o&&-1<o.indexOf(n)}))}return!1},s.prototype.removeListener=function(e,t,n){var r=this;if(void 0!==n&&"function"!=typeof n)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===t&&(t="all"),t.constructor!==Array&&(t=[t]),void 0!==i.MIDI_SYSTEM_MESSAGES[e])if(void 0===n)this._userHandlers.system[e]=[];else for(var o=0;o<this._userHandlers.system[e].length;o++)this._userHandlers.system[e][o]===n&&this._userHandlers.system[e].splice(o,1);else if(void 0!==i.MIDI_CHANNEL_MESSAGES[e]){if(-1<t.indexOf("all")){t=[];for(var s=1;s<=16;s++)t.push(s)}if(!this._userHandlers.channel[e])return this;t.forEach((function(t){var o=r._userHandlers.channel[e][t];if(o)if(void 0===n)r._userHandlers.channel[e][t]=[];else for(var i=0;i<o.length;i++)o[i]===n&&o.splice(i,1)}))}else{if(void 0!==e)throw new TypeError("The specified event type is not supported.");this._initializeUserHandlers()}return this},s.prototype._initializeUserHandlers=function(){for(var e in i.MIDI_CHANNEL_MESSAGES)i.MIDI_CHANNEL_MESSAGES.hasOwnProperty(e)&&(this._userHandlers.channel[e]={});for(var t in i.MIDI_SYSTEM_MESSAGES)i.MIDI_SYSTEM_MESSAGES.hasOwnProperty(t)&&(this._userHandlers.system[t]=[])},s.prototype._onMidiMessage=function(e){if(0<this._userHandlers.system.midimessage.length){var t={target:this,data:e.data,timestamp:e.timeStamp,type:"midimessage"};this._userHandlers.system.midimessage.forEach((function(e){e(t)}))}e.data[0]<240?(this._parseChannelEvent(e),this._parseNrpnEvent(e)):e.data[0]<=255&&this._parseSystemEvent(e)},s.prototype._parseNrpnEvent=function(e){var t,n,r=e.data[0]>>4,o=15&e.data[0],s=1+o;if(1<e.data.length&&(t=e.data[1],n=2<e.data.length?e.data[2]:void 0),i.nrpnEventsEnabled&&r===i.MIDI_CHANNEL_MESSAGES.controlchange&&(t>=i.MIDI_NRPN_MESSAGES.increment&&t<=i.MIDI_NRPN_MESSAGES.parammsb||t===i.MIDI_NRPN_MESSAGES.entrymsb||t===i.MIDI_NRPN_MESSAGES.entrylsb)){var a={target:this,type:"controlchange",data:e.data,timestamp:e.timeStamp,channel:s,controller:{number:t,name:this.getCcNameByNumber(t)},value:n};if(a.controller.number===i.MIDI_NRPN_MESSAGES.parammsb&&a.value!=i.MIDI_NRPN_MESSAGES.nullactiveparameter)i._nrpnBuffer[o]=[],i._nrpnBuffer[o][0]=a;else if(1===i._nrpnBuffer[o].length&&a.controller.number===i.MIDI_NRPN_MESSAGES.paramlsb)i._nrpnBuffer[o].push(a);else if(2!==i._nrpnBuffer[o].length||a.controller.number!==i.MIDI_NRPN_MESSAGES.increment&&a.controller.number!==i.MIDI_NRPN_MESSAGES.decrement&&a.controller.number!==i.MIDI_NRPN_MESSAGES.entrymsb)if(3===i._nrpnBuffer[o].length&&i._nrpnBuffer[o][2].number===i.MIDI_NRPN_MESSAGES.entrymsb&&a.controller.number===i.MIDI_NRPN_MESSAGES.entrylsb)i._nrpnBuffer[o].push(a);else if(3<=i._nrpnBuffer[o].length&&i._nrpnBuffer[o].length<=4&&a.controller.number===i.MIDI_NRPN_MESSAGES.parammsb&&a.value===i.MIDI_NRPN_MESSAGES.nullactiveparameter)i._nrpnBuffer[o].push(a);else if(4<=i._nrpnBuffer[o].length&&i._nrpnBuffer[o].length<=5&&a.controller.number===i.MIDI_NRPN_MESSAGES.paramlsb&&a.value===i.MIDI_NRPN_MESSAGES.nullactiveparameter){i._nrpnBuffer[o].push(a);var u=[];i._nrpnBuffer[o].forEach((function(e){u.push(e.data)}));var h=i._nrpnBuffer[o][0].value<<7|i._nrpnBuffer[o][1].value,l=i._nrpnBuffer[o][2].value;6===i._nrpnBuffer[o].length&&(l=i._nrpnBuffer[o][2].value<<7|i._nrpnBuffer[o][3].value);var c="";switch(i._nrpnBuffer[o][2].controller.number){case i.MIDI_NRPN_MESSAGES.entrymsb:c=i._nrpnTypes[0];break;case i.MIDI_NRPN_MESSAGES.increment:c=i._nrpnTypes[1];break;case i.MIDI_NRPN_MESSAGES.decrement:c=i._nrpnTypes[2];break;default:throw new Error("The NPRN type was unidentifiable.")}var f={timestamp:a.timestamp,channel:a.channel,type:"nrpn",data:u,controller:{number:h,type:c,name:"Non-Registered Parameter "+h},value:l};i._nrpnBuffer[o]=[],this._userHandlers.channel[f.type]&&this._userHandlers.channel[f.type][f.channel]&&this._userHandlers.channel[f.type][f.channel].forEach((function(e){e(f)}))}else i._nrpnBuffer[o]=[];else i._nrpnBuffer[o].push(a)}},s.prototype._parseChannelEvent=function(e){var t,n,r=e.data[0]>>4,o=1+(15&e.data[0]);1<e.data.length&&(t=e.data[1],n=2<e.data.length?e.data[2]:void 0);var s={target:this,data:e.data,timestamp:e.timeStamp,channel:o};r===i.MIDI_CHANNEL_MESSAGES.noteoff||r===i.MIDI_CHANNEL_MESSAGES.noteon&&0===n?(s.type="noteoff",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.velocity=n/127,s.rawVelocity=n):r===i.MIDI_CHANNEL_MESSAGES.noteon?(s.type="noteon",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.velocity=n/127,s.rawVelocity=n):r===i.MIDI_CHANNEL_MESSAGES.keyaftertouch?(s.type="keyaftertouch",s.note={number:t,name:i._notes[t%12],octave:i.getOctave(t)},s.value=n/127):r===i.MIDI_CHANNEL_MESSAGES.controlchange&&0<=t&&t<=119?(s.type="controlchange",s.controller={number:t,name:this.getCcNameByNumber(t)},s.value=n):r===i.MIDI_CHANNEL_MESSAGES.channelmode&&120<=t&&t<=127?(s.type="channelmode",s.controller={number:t,name:this.getChannelModeByNumber(t)},s.value=n):r===i.MIDI_CHANNEL_MESSAGES.programchange?(s.type="programchange",s.value=t):r===i.MIDI_CHANNEL_MESSAGES.channelaftertouch?(s.type="channelaftertouch",s.value=t/127):r===i.MIDI_CHANNEL_MESSAGES.pitchbend?(s.type="pitchbend",s.value=((n<<7)+t-8192)/8192):s.type="unknownchannelmessage",this._userHandlers.channel[s.type]&&this._userHandlers.channel[s.type][o]&&this._userHandlers.channel[s.type][o].forEach((function(e){e(s)}))},s.prototype.getCcNameByNumber=function(e){if(!(0<=(e=Math.floor(e))&&e<=119))throw new RangeError("The control change number must be between 0 and 119.");for(var t in i.MIDI_CONTROL_CHANGE_MESSAGES)if(i.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(t)&&e===i.MIDI_CONTROL_CHANGE_MESSAGES[t])return t},s.prototype.getChannelModeByNumber=function(e){if(!(120<=(e=Math.floor(e))&&status<=127))throw new RangeError("The control change number must be between 120 and 127.");for(var t in i.MIDI_CHANNEL_MODE_MESSAGES)if(i.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===i.MIDI_CHANNEL_MODE_MESSAGES[t])return t},s.prototype._parseSystemEvent=function(e){var t=e.data[0],n={target:this,data:e.data,timestamp:e.timeStamp};t===i.MIDI_SYSTEM_MESSAGES.sysex?n.type="sysex":t===i.MIDI_SYSTEM_MESSAGES.timecode?n.type="timecode":t===i.MIDI_SYSTEM_MESSAGES.songposition?n.type="songposition":t===i.MIDI_SYSTEM_MESSAGES.songselect?(n.type="songselect",n.song=e.data[1]):t===i.MIDI_SYSTEM_MESSAGES.tuningrequest?n.type="tuningrequest":t===i.MIDI_SYSTEM_MESSAGES.clock?n.type="clock":t===i.MIDI_SYSTEM_MESSAGES.start?n.type="start":t===i.MIDI_SYSTEM_MESSAGES.continue?n.type="continue":t===i.MIDI_SYSTEM_MESSAGES.stop?n.type="stop":t===i.MIDI_SYSTEM_MESSAGES.activesensing?n.type="activesensing":t===i.MIDI_SYSTEM_MESSAGES.reset?n.type="reset":n.type="unknownsystemmessage",this._userHandlers.system[n.type]&&this._userHandlers.system[n.type].forEach((function(e){e(n)}))},a.prototype.send=function(e,t,n){if(!(128<=e&&e<=255))throw new RangeError("The status byte must be an integer between 128 (0x80) and 255 (0xFF).");void 0===t&&(t=[]),Array.isArray(t)||(t=[t]);var r=[];return t.forEach((function(e){var t=Math.floor(e);if(!(0<=t&&t<=255))throw new RangeError("Data bytes must be integers between 0 (0x00) and 255 (0xFF).");r.push(t)})),this._midiOutput.send([e].concat(r),parseFloat(n)||0),this},a.prototype.sendSysex=function(e,t,n){if(!i.sysexEnabled)throw new Error("Sysex message support must first be activated.");return n=n||{},e=[].concat(e),t.forEach((function(e){if(e<0||127<e)throw new RangeError("The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).")})),t=e.concat(t,i.MIDI_SYSTEM_MESSAGES.sysexend),this.send(i.MIDI_SYSTEM_MESSAGES.sysex,t,this._parseTimeParameter(n.time)),this},a.prototype.sendTimecodeQuarterFrame=function(e,t){return t=t||{},this.send(i.MIDI_SYSTEM_MESSAGES.timecode,e,this._parseTimeParameter(t.time)),this},a.prototype.sendSongPosition=function(e,t){t=t||{};var n=(e=Math.floor(e)||0)>>7&127,r=127&e;return this.send(i.MIDI_SYSTEM_MESSAGES.songposition,[n,r],this._parseTimeParameter(t.time)),this},a.prototype.sendSongSelect=function(e,t){if(t=t||{},!(0<=(e=Math.floor(e))&&e<=127))throw new RangeError("The song number must be between 0 and 127.");return this.send(i.MIDI_SYSTEM_MESSAGES.songselect,[e],this._parseTimeParameter(t.time)),this},a.prototype.sendTuningRequest=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendClock=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendStart=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendContinue=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.continue,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendStop=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(e.time)),this},a.prototype.sendActiveSensing=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(e.time)),this},a.prototype.sendReset=function(e){return e=e||{},this.send(i.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(e.time)),this},a.prototype.stopNote=function(e,t,n){if("all"===e)return this.sendChannelMode("allnotesoff",0,t,n);var r=64;return(n=n||{}).rawVelocity?!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=127&&(r=n.velocity):!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=1&&(r=127*n.velocity),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(t-1),[e,Math.round(r)],this._parseTimeParameter(n.time))}.bind(this))}.bind(this)),this},a.prototype.playNote=function(e,t,n){var r,o=64;if((n=n||{}).rawVelocity?!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=127&&(o=n.velocity):!isNaN(n.velocity)&&0<=n.velocity&&n.velocity<=1&&(o=127*n.velocity),r=this._parseTimeParameter(n.time),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteon<<4)+(t-1),[e,Math.round(o)],r)}.bind(this))}.bind(this)),!isNaN(n.duration)){n.duration<=0&&(n.duration=0);var s=64;n.rawVelocity?!isNaN(n.release)&&0<=n.release&&n.release<=127&&(s=n.release):!isNaN(n.release)&&0<=n.release&&n.release<=1&&(s=127*n.release),this._convertNoteToArray(e).forEach(function(e){i.toMIDIChannels(t).forEach(function(t){this.send((i.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(t-1),[e,Math.round(s)],(r||i.time)+n.duration)}.bind(this))}.bind(this))}return this},a.prototype.sendKeyAftertouch=function(e,t,n,r){var o=this;if(r=r||{},t<1||16<t)throw new RangeError("The channel must be between 1 and 16.");(isNaN(n)||n<0||1<n)&&(n=.5);var s=Math.round(127*n);return this._convertNoteToArray(e).forEach((function(e){i.toMIDIChannels(t).forEach((function(t){o.send((i.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(t-1),[e,s],o._parseTimeParameter(r.time))}))})),this},a.prototype.sendControlChange=function(e,t,n,r){if(r=r||{},"string"==typeof e){if(void 0===(e=i.MIDI_CONTROL_CHANGE_MESSAGES[e]))throw new TypeError("Invalid controller name.")}else if(!(0<=(e=Math.floor(e))&&e<=119))throw new RangeError("Controller numbers must be between 0 and 119.");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("Controller value must be between 0 and 127.");return i.toMIDIChannels(n).forEach(function(n){this.send((i.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(n-1),[e,t],this._parseTimeParameter(r.time))}.bind(this)),this},a.prototype._selectRegisteredParameter=function(e,t,n){var r=this;if(e[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The control65 value must be between 0 and 127");if(e[1]=Math.floor(e[1]),!(0<=e[1]&&e[1]<=127))throw new RangeError("The control64 value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(101,e[0],t,{time:n}),r.sendControlChange(100,e[1],t,{time:n})})),this},a.prototype._selectNonRegisteredParameter=function(e,t,n){var r=this;if(e[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The control63 value must be between 0 and 127");if(e[1]=Math.floor(e[1]),!(0<=e[1]&&e[1]<=127))throw new RangeError("The control62 value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(99,e[0],t,{time:n}),r.sendControlChange(98,e[1],t,{time:n})})),this},a.prototype._setCurrentRegisteredParameter=function(e,t,n){var r=this;if((e=[].concat(e))[0]=Math.floor(e[0]),!(0<=e[0]&&e[0]<=127))throw new RangeError("The msb value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.sendControlChange(6,e[0],t,{time:n})})),e[1]=Math.floor(e[1]),0<=e[1]&&e[1]<=127&&i.toMIDIChannels(t).forEach((function(){r.sendControlChange(38,e[1],t,{time:n})})),this},a.prototype._deselectRegisteredParameter=function(e,t){var n=this;return i.toMIDIChannels(e).forEach((function(){n.sendControlChange(101,127,e,{time:t}),n.sendControlChange(100,127,e,{time:t})})),this},a.prototype.setRegisteredParameter=function(e,t,n,r){var o=this;if(r=r||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new Error("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(n).forEach((function(){o._selectRegisteredParameter(e,n,r.time),o._setCurrentRegisteredParameter(t,n,r.time),o._deselectRegisteredParameter(n,r.time)})),this},a.prototype.setNonRegisteredParameter=function(e,t,n,r){var o=this;if(r=r||{},!(0<=e[0]&&e[0]<=127&&0<=e[1]&&e[1]<=127))throw new Error("Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.");return t=[].concat(t),i.toMIDIChannels(n).forEach((function(){o._selectNonRegisteredParameter(e,n,r.time),o._setCurrentRegisteredParameter(t,n,r.time),o._deselectRegisteredParameter(n,r.time)})),this},a.prototype.incrementRegisteredParameter=function(e,t,n){var r=this;if(n=n||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new Error("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(t).forEach((function(){r._selectRegisteredParameter(e,t,n.time),r.sendControlChange(96,0,t,{time:n.time}),r._deselectRegisteredParameter(t,n.time)})),this},a.prototype.decrementRegisteredParameter=function(e,t,n){if(n=n||{},!Array.isArray(e)){if(!i.MIDI_REGISTERED_PARAMETER[e])throw new TypeError("The specified parameter is not available.");e=i.MIDI_REGISTERED_PARAMETER[e]}return i.toMIDIChannels(t).forEach(function(){this._selectRegisteredParameter(e,t,n.time),this.sendControlChange(97,0,t,{time:n.time}),this._deselectRegisteredParameter(t,n.time)}.bind(this)),this},a.prototype.setPitchBendRange=function(e,t,n,r){var o=this;if(r=r||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The cents value must be between 0 and 127");return i.toMIDIChannels(n).forEach((function(){o.setRegisteredParameter("pitchbendrange",[e,t],n,{time:r.time})})),this},a.prototype.setModulationRange=function(e,t,n,r){var o=this;if(r=r||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The cents value must be between 0 and 127");return i.toMIDIChannels(n).forEach((function(){o.setRegisteredParameter("modulationrange",[e,t],n,{time:r.time})})),this},a.prototype.setMasterTuning=function(e,t,n){var r=this;if(n=n||{},(e=parseFloat(e)||0)<=-65||64<=e)throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");var o=Math.floor(e)+64,s=e-Math.floor(e),a=(s=Math.round((s+1)/2*16383))>>7&127,u=127&s;return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("channelcoarsetuning",o,t,{time:n.time}),r.setRegisteredParameter("channelfinetuning",[a,u],t,{time:n.time})})),this},a.prototype.setTuningProgram=function(e,t,n){var r=this;if(n=n||{},!(0<=(e=Math.floor(e))&&e<=127))throw new RangeError("The program value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("tuningprogram",e,t,{time:n.time})})),this},a.prototype.setTuningBank=function(e,t,n){var r=this;if(n=n||{},!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The bank value must be between 0 and 127");return i.toMIDIChannels(t).forEach((function(){r.setRegisteredParameter("tuningbank",e,t,{time:n.time})})),this},a.prototype.sendChannelMode=function(e,t,n,r){if(r=r||{},"string"==typeof e){if(!(e=i.MIDI_CHANNEL_MODE_MESSAGES[e]))throw new TypeError("Invalid channel mode message name.")}else if(!(120<=(e=Math.floor(e))&&e<=127))throw new RangeError("Channel mode numerical identifiers must be between 120 and 127.");if((t=Math.floor(t)||0)<0||127<t)throw new RangeError("Value must be an integer between 0 and 127.");return i.toMIDIChannels(n).forEach(function(n){this.send((i.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(n-1),[e,t],this._parseTimeParameter(r.time))}.bind(this)),this},a.prototype.sendProgramChange=function(e,t,n){var r=this;if(n=n||{},e=Math.floor(e),isNaN(e)||e<0||127<e)throw new RangeError("Program numbers must be between 0 and 127.");return i.toMIDIChannels(t).forEach((function(t){r.send((i.MIDI_CHANNEL_MESSAGES.programchange<<4)+(t-1),[e],r._parseTimeParameter(n.time))})),this},a.prototype.sendChannelAftertouch=function(e,t,n){var r=this;n=n||{},e=parseFloat(e),(isNaN(e)||e<0||1<e)&&(e=.5);var o=Math.round(127*e);return i.toMIDIChannels(t).forEach((function(e){r.send((i.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(e-1),[o],r._parseTimeParameter(n.time))})),this},a.prototype.sendPitchBend=function(e,t,n){var r=this;if(n=n||{},isNaN(e)||e<-1||1<e)throw new RangeError("Pitch bend value must be between -1 and 1.");var o=Math.round((e+1)/2*16383),s=o>>7&127,a=127&o;return i.toMIDIChannels(t).forEach((function(e){r.send((i.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(e-1),[a,s],r._parseTimeParameter(n.time))})),this},a.prototype._parseTimeParameter=function(e){var t,n=parseFloat(e);return"string"==typeof e&&"+"===e.substring(0,1)?n&&0<n&&(t=i.time+n):n>i.time&&(t=n),t},a.prototype._convertNoteToArray=function(e){var t=[];return Array.isArray(e)||(e=[e]),e.forEach((function(e){t.push(i.guessNoteNumber(e))})),t},void 0===(r=function(){return i}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=new Map([["Semitone",1],["Tone",2],["Minor3rd",3],["Major3rd",4],["Perfect4th",5],["Augmented4th",6],["Perfect5th",7],["Minor6th",8],["Major6th",9],["Minor7th",10],["Major7th",11]]);class o{constructor(e,t,n){this.symbol=t,this.description=n,this.intervals=e}}t.ChordBook=class{constructor(){this.symbolMap=new Map([["dim",new o(new Array("Minor3rd","Minor3rd"),"dim","diminished triad root")],["m",new o(new Array("Minor3rd","Major3rd"),"m","minor triad root position")],["m7",new o(new Array("Minor3rd","Major3rd","Minor3rd"),"m7","minor 7th root position")],["",new o(new Array("Major3rd","Minor3rd"),"","major triad root position")],["7",new o(new Array("Major3rd","Minor3rd","Minor3rd"),"7","7th root position")],["maj7",new o(new Array("Major3rd","Minor3rd","Major3rd"),"maj7","major 7th root position")],["aug",new o(new Array("Major3rd","Major3rd"),"aug","augmented triad")]])}make(e,t,n,r){var o=new u(e);o.symbol=e.abstract.string().toUpperCase()+t;var i=this.symbolMap.get(t);if(!i)throw"chord "+t+"unknown";return i.intervals.forEach(e=>{o.stack(e)}),o}recognise(e){if(0!=e.length)for(const[n,r]of this.symbolMap){var t=this.make(e[0],n,!0,!0);if(t.equals(e))return t}}};t.ChordSet=class{constructor(){this.current=0,this.chords=[]}infer(e){this.chords=[],document.querySelector("#chords").innerHTML.split(" ").forEach(t=>{var n=t[0].toLocaleLowerCase();t.includes("#")&&(n+="#"),this.chords.push(e.make(new s(a(n),4),t.substring(n.length),!1,!0))})}getCurrent(){if(this.current<this.chords.length)return this.chords[this.current]}completeNext(){this.current=(this.current+1)%this.chords.length,this.render()}reset(){this.current=0,this.render()}render(){var e="";this.chords.forEach((t,n)=>{n<this.current?e+=t.symbol.strike()+" ":e+=t.symbol+" "}),e=e.substr(0,e.lastIndexOf(" ")),document.querySelector("#chords").innerHTML=e}};class i{constructor(e){if(0==e.length||e.length>2)throw"invalid note name length "+e.length+" for note "+e;var t=new RegExp(/[a-gA-GX]/);if(this.letter=e[0],!t.test(this.letter))throw'note letter must be between "a" and "g", got '+this.letter;if(2==e.length&&"#"!=e[1])throw"only sharps are valid accidentals, got "+e[1]+" from "+e;this.sharp=2==e.length}string(){var e=this.letter;return this.sharp&&(e+="#"),e}next(){var e=t.NoteOrder.indexOf(this);return t.NoteOrder[(e+1)%12]}}class s{constructor(e,t){this.abstract=e,this.octave=t}lowerThan(e){return console.log("is "+e.string()+" lower than "+this.string()),!(this.octave<e.octave)&&t.NoteOrder.indexOf(this.abstract)<t.NoteOrder.indexOf(e.abstract)}next(){var e=this.octave;return 11==t.NoteOrder.indexOf(this.abstract)&&e++,new s(this.abstract.next(),e)}string(){return this.abstract.string()+this.octave}}t.Note=s;function a(e){for(var n=0;n<t.NoteOrder.length;n++){var r=t.NoteOrder[n];if(r.string()==e)return r}if("X"==e)return new i("X");throw"unknown note "+e}t.NoteOrder=["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"].map(e=>new i(e)),t.NewAbstractNote=a;class u{constructor(e){this.symbol="",this.root=e,this.highest=e,this.notes=[e]}stack(e){var n=t.NoteOrder.indexOf(this.highest.abstract)+r.get(e),o=t.NoteOrder[n%12],i=new s(o,this.highest.octave+Math.floor((this.highest.octave+n)/12));return this.notes.push(i),this.highest=i,this}equals(e){if(this.notes.length!=e.length)return!1;for(var t=0;t<this.notes.length;t++)if(null!=e[t]&&this.notes[t].abstract.string()!=e[t].abstract.string())return!1;return!0}}t.Chord=u}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,